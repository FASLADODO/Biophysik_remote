classdef BleachCounter < handle
    %written by
    %C.P.Richter
    %Division of Biophysics / Group J.Piehler
    %University of Osnabrueck
    
    % v1.1: Signalpower || Photons and Cluster_ID || Traj_ID
    % v1.2: XXXXXX
    % v1.3: XXXXXX
    
    properties(Transient)
        WorkPath
        
        hFig
        hTabGrp
        
        BAR
        
        NAVI = struct(...
            'WeightOrthDist',10,... %used to constrain movement in the desired direction on the map
            'GUI',struct(...
            'hPopupMode',[],...
            'hPopupTrajID',[],...
            'hAx',[],...
            'hImgDummy',[],...
            'hPnt',[],...
            'hPntSelected',[],...
            'hPntAccepted',[],...
            'hPntDiscarded',[],...
            'hPushAcceptAll',[],...
            'hPushDiscardAll',[],...
            'hPushAcceptROI',[],...
            'hPushDiscardROI',[],...
            'hPushAcceptID',[],...
            'hPushDiscardID',[]))
        
        TRAJ = struct(...
            'GUI',struct(...
            'Signal',struct(... %observed amplitude vs. time
            'hAx',[],...
            'hPntObs',[],...
            'hPntEst',[],... %estimated via STASI
            'hLinePrior',[]),... %expected bleach step from prior
            'FwDiff',struct(... %observed amplitude forward difference vs. time
            'hAx',[],...
            'hStem1dt',[],...
            'hStemNdt',[],...
            'hPntBleachEvent',[],... %estimated time point for each bleach event
            'hPntBleachEventSelector',[],...
            'hLineNoiseLB',[],...
            'hLineNoiseUB',[],...
            'hLinePriorLB',[],... %expected bleach step from prior
            'hLinePriorUB',[]),... %expected bleach step from prior
            'Residual',struct(...
            'hAx',[],...
            'hStem',[])))
        
        PRIOR = struct(...
            'Mode','Min.',...
            'SampleFac',31,'MinSampleFac',3,'MaxSampleFac',101,...%-> radius of the local window [px]
            'Robust',false,...
            'SmoothFac',1e2,'MinSmoothFac',1e-1,'MaxSmoothFac',1e8,...
            'AmpFac',0.95,'MaxAmpFac',2,...
            'TolZ',1e-3,'MinTolZ',1e-6,'MaxTolZ',0.999,...
            'MaxIter',1e2,'MinMaxIter',1e1,'MaxMaxIter',1e3,...
            'GUI',struct(...
            'hAx',[],...
            'hImg',[],...
            'hPopupMode',[],...
            'hSliderSampleFac',[],...
            'hEditSampleFac',[],...
            'hSliderSmoothFac',[],...
            'hEditSmoothFac',[],...
            'hCheckRobust',[],...
            'hSliderAmpFac',[],...
            'hEditAmpFac',[],...
            'hCheckRobustInterp',[],...
            'hSliderMaxIter',[],...
            'hEditMaxIter',[],...
            'hSliderTolZ',[],...
            'hEditTolZ',[]))
        
        STASI = struct(...
            'MinPeakLength',10,... %[frames]
            'MinTransitLength',5,... %[frames]
            'MaxLength',[],...
            'NoiseFac',1.5,'MinNoiseFac',0.1,'MaxNoiseFac',10,...
            'MaxLvl',10,...
            'StateDispMode','Raw',...
            'UseDecayOnly',true,...
            'GUI',struct(...
            'hSliderMinPeakLength',[],...
            'hEditMinPeakLength',[],...
            'hSliderMinTransitLength',[],...
            'hEditMinTransitLength',[],...
            'hToggleLockParam',[]))
        
        FIDUCIAL = struct(...
            'GUI',struct(...
            'hAx',[],...
            'hImg',[]))
        
        INTMAP
        BLEACHMAP = struct(...
            'SigAx',1,'MinSigAx',1,'MaxSigAx',100,...
            'SigLat',1,'MinSigLat',1,'MaxSigLat',10,...
            'AspectRatioZ',1e2,'MinAspectRatioZ',1e-6,'MaxAspectRatioZ',1e6,...
            'AxScale','Log.',...
            'ShowSlices',true,...
            'ShowLoc',false,...
            'GUI',struct(...
            'hAx',[],...
            'hImg',[]))
        
        MODEL = struct(...
            'Mode','Interpolation',...
            'FitMode','Gaussian',...
            'GUI',struct(...
            'hAx',[],...
            'hImg',[]),...
            'Type',[...
            struct('Name','Interpolation','MinNumSample',1,...
            'Option',struct(...
            'SmoothFac',1e3,'MinSmoothFac',1e-1,'MaxSmoothFac',1e6,...
            'TolZ',1e-3,'MinTolZ',1e-6,'MaxTolZ',0.999,...
            'MaxIter',1e2,'MinMaxIter',1e1,'MaxMaxIter',1e3,'Robust',true),'Fun',[]),...
            struct('Name','Gaussian','MinNumSample',3,'Option',struct('GlobalSearch',true,'NumTrial',50,'MinNumTrial',3,'MaxNumTrial',500,...
            'TolFun',1e-6,'MinTolFun',1e-15,'MaxTolFun',1e-0,'TolX',1e-6,'MinTolX',1e-15,'MaxTolX',1e-0),'Fun',[]),...
            struct('Name','Polynom 22','MinNumSample',6,'Option',fitoptions('poly22','Robust','on','Normalize','on'),'Fun',fittype('poly22')),...
            struct('Name','Polynom 33','MinNumSample',10,'Option',fitoptions('poly33','Robust','on','Normalize','on'),'Fun',fittype('poly33')),...
            struct('Name','Polynom 44','MinNumSample',15,'Option',fitoptions('poly44','Robust','on','Normalize','on'),'Fun',fittype('poly44')),...
            struct('Name','Polynom 55','MinNumSample',21,'Option',fitoptions('poly55','Robust','on','Normalize','on'),'Fun',fittype('poly55'))])
        
        MOLNUM = struct(...
            'GUI',struct(...
            'hAx',[],...
            'hImg',[]))
        
        Cluster
        UUID %the unique ID's
        LinID
        NumCluster
        
        FOV %[xmin xmax ymin ymax Imin Imax]
        
        Freq
    end %properties
    
    methods
        %constructor
        function this = BleachCounter
            this.WorkPath = pwd;
                        addpath(genpath(this.WorkPath))
            
            warning('off','MATLAB:nargchk:deprecated')
            
            figPos = set_figure_position(1.618,0.85,'center');
            this.hFig = figure(...
                'Units','pixels',...
                'Name','BLEACH COUNTER v1.3',...
                'NumberTitle', 'off',...
                'DockControls', 'off',...
                'MenuBar','none',...
                'Toolbar','none',...
                'Color','w',...
                'KeyPressFcn',@(src,evnt)proc_keyboard(this,evnt),...
                'Position',figPos-[0 0 10 10],...
                'Visible','off');
            
            %%
            % _______________________________
            %|_XXXX_|________________|_______|             
            %|      |                |       |
            %|      |                |       |
            %|______|                |       |
            %|      |                |       |
            %|______|                |       |
            %|      |                |       |
            %|      |                |       |
            %|______|________________|       |
            %|______|________________|_______|
            hPanelNavTraj = uipanel(...
                'Parent',this.hFig,...
                'Units','normalized',...
                'FontUnits','normalized',...
                'FontSize',0.1,...
                'backgroundcolor','w',...
                'Position',[0 19/20 1/4 1/20]);
            
            uicontrol(...
                'Parent',hPanelNavTraj,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [0 0 1/8 1],...
                'FontUnits','normalized',...
                'FontSize', 0.8,...
                'String', '<html> <p>&#9668</p>',...
                'TooltipString','Select previous trajectory ID. [Ctrl + <-]',...
                'Callback', @(src,evnt)set_prev_traj_ID(this));
            
            this.NAVI.GUI.hPopupMode = uicontrol_popupmenu_wrapper(...
                'Parent',hPanelNavTraj,...
                'Units','normalized',...
                'Position', [1/8 0.025 8/16 0.95],...
                'FontUnits','normalized',...
                'FontSize', 0.5,...
                'String',{'All ID''s:','Bleached:','Accepted:','Discarded:','Critical:'},...
                'TooltipString','Select subset for navigation.',...
                'Callback', @(src,evnt)set_navi_mode(this),...
                'Enable','off');
            
            this.NAVI.GUI.hPopupTrajList = uicontrol_popupmenu_wrapper(...
                'Parent',hPanelNavTraj,...
                'Units','normalized',...
                'Position', [10/16 0.025 4/16 0.95],...
                'FontUnits','normalized',...
                'FontSize', 0.6,...
                'String','0',...
                'TooltipString','Select trajectory ID by list.',...
                'Callback', @(src,evnt)update_int_traj(this));
            
            uicontrol(...
                'Parent',hPanelNavTraj,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [7/8 0 1/8 1],...
                'FontUnits','normalized',...
                'FontSize', 0.8,...
                'String', '<html> <p>&#9658</p>',...
                'TooltipString','Select next trajectory ID. [Ctrl + ->]',...
                'Callback', @(src,evnt)set_next_traj_ID(this));
            
            %%
            % _______________________________
            %|______|________________|_______|             
            %| XXXX |                |       |
            %| XX-L |                |       |
            %|_XXXX_|                |       |
            %|      |                |       |
            %|______|                |       |
            %|      |                |       |
            %|      |                |       |
            %|______|________________|       |
            %|______|________________|_______|
            tabgp = uitabgroup(this.hFig,...
                'Units','normalized',...
                'Position',[0 11.5/20 1/4 7.5/20]);
            
            tab1 = uitab(tabgp,...
                'Title','Navigation',...
                'BackgroundColor','w');
            
            %             hPanelNaviMap = uipanel(...
            %                 'Parent',tab1,...
            %                 'Units','normalized',...
            %                 'backgroundcolor','w',...
            %                 'Position',[0 0 1 1]);
            
            this.NAVI.GUI.hAx = axes(...
                'Parent',tab1,...
                'Units','normalized',...
                'OuterPosition', [0 0 1 1],...
                'DataAspectRatio',[1 1 1],...
                'Box','on');
            
            this.NAVI.GUI.hImgDummy = imagesc(0.5,0.5,0.5,...
                'Parent',this.NAVI.GUI.hAx);
            
            xlabel(this.NAVI.GUI.hAx,'x-position')
            ylabel(this.NAVI.GUI.hAx,'y-position')
            %             title(this.NAVI.GUI.hAx,'Current Selection and Navigation:')
            
            this.NAVI.GUI.hPnt = line(...
                'Parent',this.NAVI.GUI.hAx,...
                'xdata',[],'ydata',[],...
                'linestyle','none',...
                'color',[0.7,0.7,0.7],...
                'marker','.',...
                'markersize',10);
            
            this.NAVI.GUI.hPntSelected = line(...
                'Parent',this.NAVI.GUI.hAx,...
                'xdata',[],'ydata',[],...
                'color','k',...
                'marker','.',...
                'markersize',15);
            
            this.NAVI.GUI.hPntDiscarded = line(...
                'Parent',this.NAVI.GUI.hAx,...
                'xdata',[],'ydata',[],...
                'linestyle','none',...
                'color','r',...
                'marker','.',...
                'markersize',10);
            
            this.NAVI.GUI.hPntAccepted = line(...
                'Parent',this.NAVI.GUI.hAx,...
                'xdata',[],'ydata',[],...
                'linestyle','none',...
                'color','g',...
                'marker','.',...
                'markersize',10);
            
            %%
            % _______________________________
            %|______|________________|_______|             
            %| XXXX |                |       |
            %| XX-R |                |       |
            %|_XXXX_|                |       |
            %|      |                |       |
            %|______|                |       |
            %|      |                |       |
            %|      |                |       |
            %|______|________________|       |
            %|______|________________|_______|
            tab2 = uitab(tabgp,...
                'Title','Spatial Sampling',...
                'BackgroundColor','w');
            
            %             hPanelFiducial = uipanel(...
            %                 'Parent',this.hFig,...
            %                 'Units','normalized',...
            %                 'backgroundcolor','w',...
            %                 'Position',[0 1/20 1/4 7.5/20]);
            
            this.FIDUCIAL.GUI.hAx = axes(...
                'Parent',tab2,...
                'Units','normalized',...
                'OuterPosition', [0 0 1 1],...
                'Box','on');
            
            this.FIDUCIAL.GUI.hImg = imagesc(0.5,0.5,0.5,...
                'Parent',this.FIDUCIAL.GUI.hAx);
            
            xlabel(this.FIDUCIAL.GUI.hAx,'x-position')
            ylabel(this.FIDUCIAL.GUI.hAx,'y-position')
            %             title(this.FIDUCIAL.GUI.hAx,'\color[rgb]{0.85 0.16 0}insufficient \color{black}to \color[rgb]{0 0.5 0}sufficient \color{black}spatial sampling:')
            
            %%
            % _______________________________
            %|______|________________|_______|             
            %|      |                |       |
            %|      |                |       |
            %|______|                |       |
            %| XXXX |                |       |
            %|_XXXX_|                |       |
            %|      |                |       |
            %|      |                |       |
            %|______|________________|       |
            %|______|________________|_______|
            hPanelNavMap = uipanel(...
                'Parent',this.hFig,...
                'Units','normalized',...
                'FontUnits','normalized',...
                'FontSize',0.1,...
                'backgroundcolor','w',...
                'Position',[0 8.5/20 1/4 3/20]);
            
            uicontrol(...
                'Parent',hPanelNavMap,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [2.5/8 1/3 1/8 1/3],...
                'FontUnits','normalized',...
                'FontSize', 0.8,...
                'String', '<html> <p>&#9668</p>',...
                'TooltipString','Select neighboring trajectory to the left.',...
                'Callback', @(src,evnt)set_left_traj(this));
            
            uicontrol(...
                'Parent',hPanelNavMap,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [3.5/8 1/3 1/8 1/3],...
                'FontUnits','normalized',...
                'FontSize', 0.8,...
                'String', '<html> <p>&#10011</p>',...
                'TooltipString','Select tajectory by mouse.',...
                'Callback', @(src,evnt)selection_by_map(this));
            
            uicontrol(...
                'Parent',hPanelNavMap,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [4.5/8 1/3 1/8 1/3],...
                'FontUnits','normalized',...
                'FontSize', 0.8,...
                'String', '<html> <p>&#9658</p>',...
                'TooltipString','Select neighboring trajectory to the right.',...
                'Callback', @(src,evnt)set_right_traj(this));
            
            uicontrol(...
                'Parent',hPanelNavMap,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [3.5/8 2/3 1/8 1/3],...
                'FontUnits','normalized',...
                'FontSize', 0.8,...
                'String', '<html> <p>&#9650</p>',...
                'TooltipString','Select neighboring trajectory above.',...
                'Callback', @(src,evnt)set_above_traj(this));
            
            uicontrol(...
                'Parent',hPanelNavMap,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [3.5/8 0 1/8 1/3],...
                'FontUnits','normalized',...
                'FontSize', 0.8,...
                'String', '<html> <p>&#9660</p>',...
                'TooltipString','Select neighboring trajectory below.',...
                'Callback', @(src,evnt)set_below_traj(this));
            
            %
            uicontrol(...
                'Parent', hPanelNavMap,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0 1/3 2.5/8 1/3],...
                'String', 'by ROI:',...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'backgroundcolor','w',...
                'HorizontalAlignment', 'center');
            
            this.NAVI.GUI.hPushAcceptROI = uicontrol(...
                'Parent',hPanelNavMap,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [0 2/3 3.5/8 1/3],...
                'FontUnits','normalized',...
                'FontSize', 0.6,...
                'String', 'Accept',...
                'Enable','off',...
                'TooltipString','Accept bleaching steps within a defined area.',...
                'Callback', @(src,evnt)selection_by_ROI(this,src));
            
            this.NAVI.GUI.hPushDiscardROI = uicontrol(...
                'Parent',hPanelNavMap,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [0 0 3.5/8 1/3],...
                'FontUnits','normalized',...
                'FontSize', 0.6,...
                'String', 'Discard',...
                'Enable','off',...
                'TooltipString','Discard bleaching steps within a defined area.',...
                'Callback', @(src,evnt)selection_by_ROI(this,src));
            
            %
            uicontrol(...
                'Parent', hPanelNavMap,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [5.5/8 1/3 2.5/8 1/3],...
                'String', 'by ID:',...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'backgroundcolor','w',...
                'HorizontalAlignment', 'center');
            
            this.NAVI.GUI.hPushAcceptID = uicontrol(...
                'Parent',hPanelNavMap,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [4.5/8 2/3 3.5/8 1/3],...
                'FontUnits','normalized',...
                'FontSize', 0.6,...
                'String', 'Accept',...
                'Enable','off',...
                'TooltipString','Accept all bleaching steps of the selected trajectory. [Ctrl+A]',...
                'Callback', @(src,evnt)selection_by_ID(this,'Accept'));
            
            this.NAVI.GUI.hPushDiscardID = uicontrol(...
                'Parent',hPanelNavMap,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [4.5/8 0 3.5/8 1/3],...
                'FontUnits','normalized',...
                'FontSize', 0.6,...
                'String', 'Discard',...
                'Enable','off',...
                'TooltipString','Discard bleaching steps of the selected trajectory. [Ctrl+D]',...
                'Callback', @(src,evnt)selection_by_ID(this,'Discard'));
            
            %%
            % _______________________________
            %|______|________________|_______|             
            %|      |                |       |
            %|      |                |       |
            %|______|                |       |
            %|      |                |       |
            %|______|                |       |
            %|      |                |       |
            %|      |                |       |
            %|______|________________|       |
            %|_XXXX_|________________|_______|
            hPanelStepSel = uipanel(...
                'Parent',this.hFig,...
                'Units','normalized',...
                'FontUnits','normalized',...
                'FontSize',0.1,...
                'backgroundcolor','w',...
                'Position',[0 0 1/4 1/20]);
            
            this.NAVI.GUI.hPushAcceptAll = uicontrol(...
                'Parent',hPanelStepSel,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [0 0 1/2 1],...
                'FontUnits','normalized',...
                'FontSize', 0.6,...
                'String', 'Accept All',...
                'Enable','off',...
                'Callback', @(src,evnt)accept_all_int_steps(this));
            
            this.NAVI.GUI.hPushDiscardAll = uicontrol(...
                'Parent',hPanelStepSel,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [1/2 0 1/2 1],...
                'FontUnits','normalized',...
                'FontSize', 0.6,...
                'String', 'Discard All',...
                'Enable','off',...
                'Callback', @(src,evnt)discard_all_int_steps(this));
            
            %% Intensity Trajectory
            
            % _______________________________
            %|______|                |_______|             
            %|      |                |       |
            %|      |                |       |
            %|______|      XXXX      |       |
            %|      |      XXXX      |       |
            %|______|      XXXX      |       |
            %|      |      XXXX      |       |
            %|      |                |       |
            %|______|                |       |
            %|______|________________|_______|
            
            this.hTabGrp = uitabgroup(this.hFig,...
                'Units','normalized',...
                'Position',[1/4 0.05 2/4 0.95],...
                'SelectionChangedFcn',@(src,evnt)set_tab(this,evnt));
            
            tab2 = uitab(this.hTabGrp,...
                'BackgroundColor','w',...
                'Title','Intensity Map');
            
            this.BLEACHMAP.GUI.hAx = axes(...
                'Parent',tab2,...
                'Units','normalized',...
                'OuterPosition', [0 0 1 1],...
                'Projection','perspective',...
                'zscale','log',...
                'Box','on',...
                'NextPlot','add');
            
            this.BLEACHMAP.GUI.hPnt = line(...
                'Parent',this.BLEACHMAP.GUI.hAx,...
                'xdata',[],'ydata',[],'zdata',[],...
                'linestyle','none',...
                'color',[1 0.7 0.7],...
                'marker','.',...
                'markersize',10);
            if this.BLEACHMAP.ShowLoc
                set(this.BLEACHMAP.GUI.hPnt,'visible','on')
            else
                set(this.BLEACHMAP.GUI.hPnt,'visible','off')
            end %if
            
            this.BLEACHMAP.GUI.hPntSelected = line(...
                'Parent',this.BLEACHMAP.GUI.hAx,...
                'xdata',[],'ydata',[],'zdata',[],...
                'linestyle','-',...
                'linewidth',2,...
                'marker','.',...
                'markersize',10,...
                'color','r');
            
            this.BLEACHMAP.GUI.hPntRelErrGood = line(...
                'Parent',this.BLEACHMAP.GUI.hAx,...
                'xdata',[],'ydata',[],...
                'linestyle','none',...
                'color',[0 0.75 0],...
                'marker','.',...
                'markersize',15);
            
            this.BLEACHMAP.GUI.hLineRelErrGood = line(...
                'Parent',this.BLEACHMAP.GUI.hAx,...
                'xdata',[],'ydata',[],...
                'linestyle','-',...
                'LineWidth',2,...
                'color',[0 0.75 0],...
                'marker','none');
            
            this.BLEACHMAP.GUI.hPntRelErrMedium = line(...
                'Parent',this.BLEACHMAP.GUI.hAx,...
                'xdata',[],'ydata',[],...
                'linestyle','none',...
                'color',[1 0.8 0],...
                'marker','.',...
                'markersize',15);
            
            this.BLEACHMAP.GUI.hLineRelErrMedium = line(...
                'Parent',this.BLEACHMAP.GUI.hAx,...
                'xdata',[],'ydata',[],...
                'linestyle','-',...
                'LineWidth',2,...
                'color',[1 0.8 0],...
                'marker','none');
            
            this.BLEACHMAP.GUI.hPntRelErrBad = line(...
                'Parent',this.BLEACHMAP.GUI.hAx,...
                'xdata',[],'ydata',[],...
                'linestyle','none',...
                'color','r',...
                'marker','.',...
                'markersize',15);
            
            this.BLEACHMAP.GUI.hLineRelErrBad = line(...
                'Parent',this.BLEACHMAP.GUI.hAx,...
                'xdata',[],'ydata',[],...
                'linestyle','-',...
                'LineWidth',2,...
                'color','r',...
                'marker','none');
            
            this.BLEACHMAP.GUI.hSurfXY = surf(...
                'xdata',[],'ydata',[],'zdata',[],...
                'Linestyle','none',...
                'EdgeColor', 'none',...
                'FaceColor', 'interp',...
                'FaceLighting','phong',...
                'AmbientStrength',.3,...
                'DiffuseStrength',.8,...
                'SpecularStrength',1,...
                'SpecularExponent',15,...
                'BackFaceLighting','reverselit');
            
            %             [~,this.BLEACHMAP.GUI.hContourXY] = contour3(...
            %                 'xdata',[],'ydata',[],'zdata',[],...
            %                 'Linewidth',2);
            
            this.BLEACHMAP.GUI.hSurfXZ = surf(...
                'xdata',[],'ydata',[],'zdata',[],...
                'Linestyle','none',...
                'EdgeColor', 'none',...
                'FaceColor', 'interp',...
                'FaceLighting','phong',...
                'AmbientStrength',.3,...
                'DiffuseStrength',.8,...
                'SpecularStrength',1,...
                'SpecularExponent',15,...
                'BackFaceLighting','reverselit');
            
            this.BLEACHMAP.GUI.hSurfYZ = surf(...
                'xdata',[],'ydata',[],'zdata',[],...
                'Linestyle','none',...
                'EdgeColor', 'none',...
                'FaceColor', 'interp',...
                'FaceLighting','phong',...
                'AmbientStrength',.3,...
                'DiffuseStrength',.8,...
                'SpecularStrength',1,...
                'SpecularExponent',15,...
                'BackFaceLighting','reverselit');
            
            this.BLEACHMAP.GUI.hLineYZ = patch(...
                'Parent',this.BLEACHMAP.GUI.hAx,...
                'xdata',[],'ydata',[],'zdata',[],...
                'linestyle','-',...
                'Linewidth',3,...
                'edgecolor','c',...
                'facecolor','none',...
                'marker','none');
            
            this.BLEACHMAP.GUI.hLineXZ = patch(...
                'Parent',this.BLEACHMAP.GUI.hAx,...
                'xdata',[],'ydata',[],'zdata',[],...
                'linestyle','-',...
                'Linewidth',3,...
                'edgecolor','m',...
                'facecolor','none',...
                'marker','none');
            
            xlabel(this.BLEACHMAP.GUI.hAx,'x-position')
            ylabel(this.BLEACHMAP.GUI.hAx,'y-position')
            zlabel(this.BLEACHMAP.GUI.hAx,'Amplitude')
            
            %             axis(this.BLEACHMAP.GUI.hAx,'tight','vis3d')
            %             view(this.BLEACHMAP.GUI.hAx,3)
            %%
            this.BLEACHMAP.GUI.hPanelOpt = uipanel(...
                'Parent', this.hFig,...
                'Units','normalized',...
                'backgroundcolor','w',...
                'Position',[0 1/20 1/4 7.5/20]);
            
            objMasterPanel = classMasterPanel(this);
            
            pos = getpixelposition(this.BLEACHMAP.GUI.hPanelOpt);
            objPanelIntMapOpt = add_param_panel(objMasterPanel,'MainPanelHeight',pos(4));
            
            initialize_param_ui(objMasterPanel,this.BLEACHMAP.GUI.hPanelOpt)
            finalize_param_ui(objMasterPanel)
            
            %             set(this.BLEACHMAP.GUI.hPanelOpt,'Visible','off')
            
            %-------------objPanelIntMapOptScaleZ
            uicontrol(...
                'Parent', objPanelIntMapOpt.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0 32/36 0.6 4/36],...
                'String', 'Intensity Scale:',...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelIntMapOpt.BackgroundColor,...
                'HorizontalAlignment', 'center');
            
            this.BLEACHMAP.GUI.hPopupAxScale = uicontrol_popupmenu_wrapper(...
                'Parent',objPanelIntMapOpt.hMainPanel,...
                'Units','normalized',...
                'Position', [0.6 32/36 0.4 4/36],...
                'FontUnits','normalized',...
                'FontSize', 0.63,...
                'String',{'Linear','Log.'},...
                'Value',find(strcmp({'Linear','Log.'},this.BLEACHMAP.AxScale)),...
                'Callback', @(src,evnt)set_intmap_ax_scale(this));
            
            %-------------objPanelIntMapOptSigAx
            uicontrol(...
                'Parent', objPanelIntMapOpt.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0,28/36,1,4/36],...
                'String', sprintf('Intensity Blur Radius:'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelIntMapOpt.BackgroundColor,...
                'HorizontalAlignment', 'center');
            this.BLEACHMAP.GUI.hSliderSigAx = uicontrol(...
                'Parent', objPanelIntMapOpt.hMainPanel,...
                'Style', 'slider',...
                'Min',this.BLEACHMAP.MinSigAx,...
                'Max',this.BLEACHMAP.MaxSigAx,...
                'SliderStep',[1 10]/(this.BLEACHMAP.MaxSigAx-this.BLEACHMAP.MinSigAx),...
                'Value', this.BLEACHMAP.SigAx,...
                'Units', 'normalized',...
                'Position', [0,24/36,0.75,4/36]);
            addlistener(this.BLEACHMAP.GUI.hSliderSigAx,'ContinuousValueChange',...
                @(src,event)set_intmap_sig_ax(this,src));
            this.BLEACHMAP.GUI.hEditSigAx = uicontrol(...
                'Parent', objPanelIntMapOpt.hMainPanel,...
                'Style', 'edit',...
                'Units','normalized',...
                'Position', [0.75,24/36,0.25,4/36],...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'String', this.BLEACHMAP.SigAx,...
                'Callback', @(src,evnt)set_intmap_sig_ax(this,src));
            
            %-------------objPanelIntMapOptSigLat
            uicontrol(...
                'Parent', objPanelIntMapOpt.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0,20/36,1,4/36],...
                'String', sprintf('Position Blur [px]:'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelIntMapOpt.BackgroundColor,...
                'HorizontalAlignment', 'center');
            this.BLEACHMAP.GUI.hSliderSigLat = uicontrol(...
                'Parent', objPanelIntMapOpt.hMainPanel,...
                'Style', 'slider',...
                'Min',this.BLEACHMAP.MinSigLat,...
                'Max',this.BLEACHMAP.MaxSigLat,...
                'SliderStep',[1 5]/(this.BLEACHMAP.MaxSigLat-this.BLEACHMAP.MinSigLat),...
                'Value', this.BLEACHMAP.SigLat,...
                'Units', 'normalized',...
                'Position', [0,16/36,0.75,4/36]);
            addlistener(this.BLEACHMAP.GUI.hSliderSigLat,'ContinuousValueChange',...
                @(src,event)set_intmap_sig_lat(this,src));
            this.BLEACHMAP.GUI.hEditSigLat = uicontrol(...
                'Parent', objPanelIntMapOpt.hMainPanel,...
                'Style', 'edit',...
                'Units','normalized',...
                'Position', [0.75,16/36,0.25,4/36],...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'String', this.BLEACHMAP.SigLat,...
                'Callback', @(src,evnt)set_intmap_sig_lat(this,src));
            
            %-------------objPanelIntMapOptAspectRatioZ
            uicontrol(...
                'Parent', objPanelIntMapOpt.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0,12/36,1,4/36],...
                'String', sprintf('Axial Stretch Factor:'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelIntMapOpt.BackgroundColor,...
                'HorizontalAlignment', 'center');
            this.BLEACHMAP.GUI.hSliderAspectRatioZ = uicontrol(...
                'Parent', objPanelIntMapOpt.hMainPanel,...
                'Style', 'slider',...
                'Min',log10(this.BLEACHMAP.MinAspectRatioZ),...
                'Max',log10(this.BLEACHMAP.MaxAspectRatioZ),...
                'SliderStep',[0.1 1]/(log10(this.BLEACHMAP.MaxAspectRatioZ)-log10(this.BLEACHMAP.MinAspectRatioZ)),...
                'Value', log10(this.BLEACHMAP.AspectRatioZ),...
                'Units', 'normalized',...
                'Position', [0,8/36,0.75,4/36]);
            addlistener(this.BLEACHMAP.GUI.hSliderAspectRatioZ,'ContinuousValueChange',...
                @(src,event)set_intmap_aspect_ratio(this,src));
            this.BLEACHMAP.GUI.hEditAspectRatioZ = uicontrol(...
                'Parent', objPanelIntMapOpt.hMainPanel,...
                'Style', 'edit',...
                'Units','normalized',...
                'Position', [0.75,8/36,0.25,4/36],...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'String', log10(this.BLEACHMAP.AspectRatioZ),...
                'Callback', @(src,evnt)set_intmap_aspect_ratio(this,src));
            
            %-------------objPanelIntMapOptShowSlices
            this.BLEACHMAP.GUI.hCheckShowSlices = uicontrol(...
                'Parent', objPanelIntMapOpt.hMainPanel,...
                'Style', 'checkbox',...
                'Units','normalized',...
                'Position', [0.05 4/36 0.95 4/36],...
                'String', sprintf(' Show XZ- and YZ-Slices'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelIntMapOpt.BackgroundColor,...
                'HorizontalAlignment', 'center',...
                'Value',this.BLEACHMAP.ShowSlices,...
                'Callback', @(src,evnt)set_intmap_show_slices(this));
            
            %-------------objPanelIntMapOptShowLoc
            this.BLEACHMAP.GUI.hCheckShowLoc = uicontrol(...
                'Parent', objPanelIntMapOpt.hMainPanel,...
                'Style', 'checkbox',...
                'Units','normalized',...
                'Position', [0.05 0 0.95 4/36],...
                'String', sprintf(' Show Localizations'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelIntMapOpt.BackgroundColor,...
                'HorizontalAlignment', 'center',...
                'Value',this.BLEACHMAP.ShowLoc,...
                'Callback', @(src,evnt)set_intmap_show_loc(this));
            
            %%
            tab1 = uitab(this.hTabGrp,...
                'BackgroundColor','w',...
                'Title','Intensity Trajectory');
            
            %-------------Signal
            this.TRAJ.GUI.Signal.hAx = axes(...
                'Parent',tab1,...
                'Units','normalized',...
                'Position', [0.085 0.58 0.875 0.37],...
                'Box','on',...
                'XTickLabel',[]);
            ylabel(this.TRAJ.GUI.Signal.hAx,'Intensity')
            
            this.TRAJ.GUI.Signal.hLinePrior = line(...
                'Parent',this.TRAJ.GUI.Signal.hAx,...
                'xdata',[],'ydata',[],...
                'Color','c',...Ble
                'Marker','none',...
                'Linewidth',2);
            
            this.TRAJ.GUI.Signal.hPntObs = line(...
                'Parent',this.TRAJ.GUI.Signal.hAx,...
                'xdata',[],'ydata',[],...
                'Color','k',...
                'Marker','.',...
                'markersize',16,...
                'Linewidth',1);
            
            this.TRAJ.GUI.Signal.hPntEst = line(...
                'Parent',this.TRAJ.GUI.Signal.hAx,...
                'xdata',[],'ydata',[],...
                'Color','m',...
                'Linewidth',3);
            
            legend(this.TRAJ.GUI.Signal.hAx,...
                'Exp. Single Fluorophore Signal','Observed','Estimated Sequence',...
                'Orientation','horizontal','location','north')
            
            hContextMenu = uicontextmenu(this.hFig);
            uimenu('Parent',hContextMenu,...
                'Label','Show raw STaSI reconstruction');
            set(this.TRAJ.GUI.Signal.hAx,...
                'uicontextmenu',hContextMenu)
            
            %-------------Signal Difference
            this.TRAJ.GUI.FwDiff.hAx = axes(...
                'Parent',tab1,...
                'Units','normalized',...
                'Position', [0.085 0.315 0.875 0.265],...
                'Box','on',...
                'NextPlot','add',...
                'XTickLabel',[]);
            
            this.TRAJ.GUI.FwDiff.hLinePriorLB = line(...
                'Parent',this.TRAJ.GUI.FwDiff.hAx,...
                'xdata',[],'ydata',[],...
                'Color','c',...
                'Linewidth',2);
            set(get(get(this.TRAJ.GUI.FwDiff.hLinePriorLB,'Annotation'),'LegendInformation'),'IconDisplayStyle','off');
            
            this.TRAJ.GUI.FwDiff.hLineNoise = line(...
                'Parent',this.TRAJ.GUI.FwDiff.hAx,...
                'xdata',[],'ydata',[],...
                'Color',[1,0.64,0],...
                'Linewidth',2);
            
            this.TRAJ.GUI.FwDiff.hStemNdt = stem(0,0,...
                'Parent',this.TRAJ.GUI.FwDiff.hAx,...
                'Color',[0.7 0.7 0.7],...
                'Marker','none',...
                'Linewidth',3);
            %             set(get(get(this.TRAJ.GUI.FwDiff.hStemNdt,'Annotation'),'LegendInformation'),'IconDisplayStyle','off');
            
            this.TRAJ.GUI.FwDiff.hStem1dt = stem(0,0,...
                'Parent',this.TRAJ.GUI.FwDiff.hAx,...
                'Color','k',...
                'Marker','none',...
                'Linewidth',2);
            %             set(get(get(this.TRAJ.GUI.FwDiff.hStem1dt,'Annotation'),'LegendInformation'),'IconDisplayStyle','off');
            
            this.TRAJ.GUI.FwDiff.hPntBleachEvent = stem(0,0,...
                'Parent',this.TRAJ.GUI.FwDiff.hAx,...
                'Color','m',...
                'Marker','none',...
                'Linewidth',3);
            
            ylabel(this.TRAJ.GUI.FwDiff.hAx,'Forward Difference')
            
            legend(this.TRAJ.GUI.FwDiff.hAx,...
                'Noise Amplitude','I(t+n) - I(t)','I(t+1) - I(t)','Bleach Event',...
                'Orientation','horizontal','location','south')
            
            %------------- Residual
            this.TRAJ.GUI.Residual.hAx = axes(...
                'Parent',tab1,...
                'Units','normalized',...
                'Position', [0.085 0.05 0.875 0.265],...
                'Box','on');
            
            this.TRAJ.GUI.Residual.hStem = stem(0,0,...
                'Parent',this.TRAJ.GUI.Residual.hAx,...
                'Color','k',...
                'Marker','none',...
                'Linewidth',2);
            xlabel(this.TRAJ.GUI.Residual.hAx,'Time [frame]')
            ylabel(this.TRAJ.GUI.Residual.hAx,'Residual')
            
            %%
            this.TRAJ.GUI.Pnt3D.hAx = axes(...
                'Parent',this.hFig,...
                'Units','normalized',...
                'color','w',...
                'Box','on',...
                'xgrid','on',...
                'ygrid','on',...
                'NextPlot','add',...
                'OuterPosition',[0 1/20 1/4 7.5/20]);
            
            this.TRAJ.GUI.Pnt3D.hLineProjXY = line(...
                'Parent',this.TRAJ.GUI.Pnt3D.hAx,...
                'xdata',[],'ydata',[],'zdata',[],...
                'Color',[0.7,0.7,0.7],...
                'Marker','none',...
                'Markersize',20,...
                'Linewidth',2);
            
            this.TRAJ.GUI.Pnt3D.hLineProjXZ = line(...
                'Parent',this.TRAJ.GUI.Pnt3D.hAx,...
                'xdata',[],'ydata',[],'zdata',[],...
                'Color','m',...
                'Marker','none',...
                'Markersize',20,...
                'Linewidth',2);
            
            this.TRAJ.GUI.Pnt3D.hLineProjYZ = line(...
                'Parent',this.TRAJ.GUI.Pnt3D.hAx,...
                'xdata',[],'ydata',[],'zdata',[],...
                'Color','c',...
                'Marker','none',...
                'Markersize',20,...
                'Linewidth',2);
            
            this.TRAJ.GUI.Pnt3D.hPnt = line(...
                'Parent',this.TRAJ.GUI.Pnt3D.hAx,...
                'xdata',[],'ydata',[],'zdata',[],...
                'Color','k',...
                'Marker','.',...
                'Markersize',20,...
                'Linewidth',2);
            
            xlabel(this.TRAJ.GUI.Pnt3D.hAx,'x-position')
            ylabel(this.TRAJ.GUI.Pnt3D.hAx,'y-position')
            zlabel(this.TRAJ.GUI.Pnt3D.hAx,'Time')
            view(this.TRAJ.GUI.Pnt3D.hAx,3)
            
            %%
            tab = uitab(this.hTabGrp,...
                'BackgroundColor','w',...
                'Title','State Estimation');
            
            this.STASI.GUI.hAxStateEst = axes(...
                'Parent',tab,...
                'Units','normalized',...
                'OuterPosition', [0.05 0 0.85 1],...
                'Box','on',...
                'YDir','reverse',...
                'YGrid','on',...
                'YTickLabel','',...
                'LineWidth',2,...
                'GridColor','k',...
                'GridAlpha',1,...
                'NextPlot','add');
            
            this.STASI.GUI.hImgStateEst = imagesc(0.5,0.5,0.5,...
                'Parent',this.STASI.GUI.hAxStateEst);
            
            set(this.STASI.GUI.hAxStateEst,'Layer','top')
            xlabel(this.STASI.GUI.hAxStateEst,'Time [frame]')
            
            %-------------
            pos = get(this.STASI.GUI.hAxStateEst,'Position');
            this.STASI.GUI.hAxMDL = axes(...
                'Parent',tab,...
                'Units','normalized',...
                'Position', [pos(1)+pos(3) pos(2) 0.1 pos(4)],...
                'Box','on',...
                'YDir','reverse',...
                'YAxisLocation','right',...
                'XTickLabel','',...
                'LineWidth',1,...
                'GridColor',[0,0,0],...
                'MinorGridColor',[0,0,0],...
                'XGrid','off',...
                'XMinorGrid','on',...
                'YGrid','off',...
                'YMinorGrid','on',...
                'MinorGridLineStyle','-',...
                'GridAlpha',1,...
                'NextPlot','add');
            
            this.STASI.GUI.hLineMDL = line(...
                'Parent',this.STASI.GUI.hAxMDL,...
                'xdata',[],'ydata',[],...
                'Color','r',...
                'Marker','.',...
                'Markersize',20,...
                'Linewidth',2);
            
            this.STASI.GUI.hPntMDL = line(...
                'Parent',this.STASI.GUI.hAxMDL,...
                'xdata',[],'ydata',[],...
                'Color','g',...
                'Marker','o',...
                'Markersize',10,...
                'Linewidth',3);
            
            title(this.STASI.GUI.hAxMDL,'MDL')
            ylabel(this.STASI.GUI.hAxMDL,'# States')
            
            %-------------
            this.STASI.GUI.hAxThresh = axes(...
                'Parent',tab,...
                'Units','normalized',...
                'Position', [pos(1)-0.05 pos(2) 0.05 pos(4)],...
                'Box','on',...
                'YDir','reverse',...
                'XTickLabel','',...
                'YGrid','off',...
                'XGrid','off',...
                'LineWidth',2,...
                'GridColor','k',...
                'GridAlpha',1,...
                'FontUnits','normalized',...
                'FontSize',0.0125,...
                'TickLength',[0.005 0],...
                'TickDir','out',...
                'NextPlot','add');
            
            this.STASI.GUI.hImgThresh = imagesc(0.5,0.5,0.5,...
                'Parent',this.STASI.GUI.hAxThresh);
            
            this.STASI.GUI.hLineThresh = line(...
                'Parent',this.STASI.GUI.hAxThresh,...
                'xdata',[],'ydata',[],...
                'Color','k',...
                'Linewidth',1);
            
            this.STASI.GUI.hLineThreshSep = line(...
                'Parent',this.STASI.GUI.hAxThresh,...
                'xdata',[],'ydata',[],...
                'Color','k',...
                'Linewidth',2);
            
            set(this.STASI.GUI.hAxThresh,'Layer','top')
            title(this.STASI.GUI.hAxThresh,'Filter State','FontSize',12)
            
            %-------------
            %             hSelectStateEst = uibuttongroup(...
            %                 'Parent',tab,...
            %                 'Units','normalized',...
            %                 'Title','Select Display Mode:',...
            %                 'TitlePosition','centertop',...
            %                 'OuterPosition',[0 0 1 0.1],...
            %                 'FontUnits','normalized',...
            %                 'Fontsize',0.3,...
            %                 'BackgroundColor',[1,1,1],...
            %                 'SelectionChangedFcn',@(src,evnt)select_state_display_mode(this,evnt));
            %
            %             uicontrol(...
            %                 'Parent',hSelectStateEst,...
            %                 'Style','togglebutton',...
            %                 'Units','normalized',...
            %                 'FontUnits','normalized',...
            %                 'Fontsize',0.55,...
            %                 'String','Raw',...
            %                 'Value',1,...
            %                 'Position',[0 0 1/2 0.85]);
            %
            %             uicontrol(...
            %                 'Parent',hSelectStateEst,...
            %                 'Style','togglebutton',...
            %                 'Units','normalized',...
            %                 'FontUnits','normalized',...
            %                 'Fontsize',0.55,...
            %                 'String','Filtered',...
            %                 'Value',0,...
            %                 'Position',[1/2 0 1/2 0.85]);
            
            %             uicontrol(...
            %                 'Parent',hSelectStateEst,...
            %                 'Style','togglebutton',...
            %                 'Units','normalized',...
            %                 'FontUnits','normalized',...
            %                 'Fontsize',0.55,...
            %                 'String','Decay',...
            %                 'Position',[2/3 0 1/3 0.85]);
            
            %%
            tab3 = uitab(this.hTabGrp,...
                'BackgroundColor','w',...
                'Title','Molecule Number');
            
            this.MOLNUM.GUI.hAx = axes(...
                'Parent',tab3,...
                'Units','normalized',...
                'OuterPosition', [0 0.3 1 0.7],...
                'Box','on',...
                'NextPlot','add');
            
            this.MOLNUM.GUI.hPntMonomer = line(...
                'Parent',this.MOLNUM.GUI.hAx,...
                'xdata',[],'ydata',[],...
                'linestyle','none',...
                'color','k',...
                'marker','.',...
                'markersize',7);
            
            this.MOLNUM.GUI.hPntDimer = line(...
                'Parent',this.MOLNUM.GUI.hAx,...
                'xdata',[],'ydata',[],...
                'linestyle','none',...
                'color','b',...
                'marker','.',...
                'markersize',9);
            
            this.MOLNUM.GUI.hPntTrimer = line(...
                'Parent',this.MOLNUM.GUI.hAx,...
                'xdata',[],'ydata',[],...
                'linestyle','none',...
                'color','r',...
                'marker','.',...
                'markersize',11);
            
            this.MOLNUM.GUI.hPntOligomer = line(...
                'Parent',this.MOLNUM.GUI.hAx,...
                'xdata',[],'ydata',[],...
                'linestyle','none',...
                'color',[1 0.8 0],...
                'marker','.',...
                'markersize',13);
            
            xlabel(this.MOLNUM.GUI.hAx,'x-position')
            ylabel(this.MOLNUM.GUI.hAx,'y-position')
            title(this.MOLNUM.GUI.hAx,...
                '\color{black}Monomer \color{black} || \color[rgb]{0 0 1}Dimer \color{black} || \color[rgb]{1 0 0}Trimer \color{black} || \color[rgb]{1 0.8 0}Oligomer')
            
            %%
            this.MOLNUM.GUI.hAxNumDist = axes(...
                'Parent',tab3,...
                'Units','normalized',...
                'OuterPosition', [0 0.025 1 0.275],...
                'Box','on',...
                'NextPlot','add');
            
            this.MOLNUM.GUI.hBarEstMolNum = bar(...
                this.MOLNUM.GUI.hAxNumDist,0,0);
            
            this.MOLNUM.GUI.hAreaMolNum = area(...
                this.MOLNUM.GUI.hAxNumDist,0,0,...
                'Facecolor',[0.7 0.7 0.7],...
                'FaceAlpha',0.5);
            
            xlabel(this.MOLNUM.GUI.hAxNumDist,'Molecule Number')
            ylabel(this.MOLNUM.GUI.hAxNumDist,'Frequency')
            
            legend(this.MOLNUM.GUI.hAxNumDist,...
                'Discretized Count','Point-based Molecule Number Distribution',...
                'Orientation','horizontal','location','north')
            
            %%
            %             this.MOLNUM.GUI.Pnt3D.hAx = axes(...
            %                 'Parent',this.hFig,...
            %                 'Units','normalized',...
            %                 'color','w',...
            %                 'Box','on',...
            %                 'xgrid','on',...
            %                 'ygrid','on',...
            %                 'NextPlot','add',...
            %                 'OuterPosition',[0 1/20 1/4 7.5/20],...
            %                 'Visible','off');
            %
            %             this.MOLNUM.GUI.Pnt3D.hLineProjXY = line(...
            %                 'Parent',this.MOLNUM.GUI.Pnt3D.hAx,...
            %                 'xdata',[],'ydata',[],'zdata',[],...
            %                 'Color',[0.7,0.7,0.7],...
            %                 'Marker','none',...
            %                 'Linewidth',2,...
            %                 'Visible','off');
            %
            %             this.MOLNUM.GUI.Pnt3D.hLineProjXZ = line(...
            %                 'Parent',this.MOLNUM.GUI.Pnt3D.hAx,...
            %                 'xdata',[],'ydata',[],'zdata',[],...
            %                 'Color','m',...
            %                 'Marker','none',...
            %                 'Markersize',20,...
            %                 'Linewidth',2,...
            %                 'Visible','off');
            %
            %             this.MOLNUM.GUI.Pnt3D.hLineProjYZ = line(...
            %                 'Parent',this.MOLNUM.GUI.Pnt3D.hAx,...
            %                 'xdata',[],'ydata',[],'zdata',[],...
            %                 'Color','c',...
            %                 'Marker','none',...
            %                 'Markersize',20,...
            %                 'Linewidth',2,...
            %                 'Visible','off');
            %
            %             this.MOLNUM.GUI.Pnt3D.hPnt = line(...
            %                 'Parent',this.MOLNUM.GUI.Pnt3D.hAx,...
            %                 'xdata',[],'ydata',[],'zdata',[],...
            %                 'Color','k',...
            %                 'Marker','none',...
            %                 'Linewidth',2,...
            %                 'Linestyle','-',...
            %                 'Visible','off');
            
            %             this.MOLNUM.GUI.Pnt3D.hPntMonomer = line(...
            %                 'Parent',this.MOLNUM.GUI.Pnt3D.hAx,...
            %                 'xdata',[],'ydata',[],'zdata',[],...
            %                 'Color','k',...
            %                 'Marker','.',...
            %                 'Markersize',21,...
            %                 'Linestyle','none',...
            %                 'Visible','off');
            
            this.MOLNUM.GUI.Pnt3D.hPntDimer = line(...
                'Parent',this.TRAJ.GUI.Pnt3D.hAx,...
                'xdata',[],'ydata',[],'zdata',[],...
                'Color','b',...
                'Marker','.',...
                'Markersize',21,...
                'Linestyle','none');
            
            this.MOLNUM.GUI.Pnt3D.hPntTrimer = line(...
                'Parent',this.TRAJ.GUI.Pnt3D.hAx,...
                'xdata',[],'ydata',[],'zdata',[],...
                'Color','r',...
                'Marker','.',...
                'Markersize',21,...
                'Linestyle','none');
            
            this.MOLNUM.GUI.Pnt3D.hPntOligomer = line(...
                'Parent',this.TRAJ.GUI.Pnt3D.hAx,...
                'xdata',[],'ydata',[],'zdata',[],...
                'Color',[1 0.8 0],...
                'Marker','.',...
                'Markersize',21,...
                'Linestyle','none');
            
            %             xlabel(this.MOLNUM.GUI.Pnt3D.hAx,'x-position')
            %             ylabel(this.MOLNUM.GUI.Pnt3D.hAx,'y-position')
            %             zlabel(this.MOLNUM.GUI.Pnt3D.hAx,'Time')
            %             view(this.MOLNUM.GUI.Pnt3D.hAx,3)
            
            %%
            hPanel = uipanel(...
                'Parent', this.hFig,...
                'Units','normalized',...
                'backgroundcolor','w',...
                'Position',[3/4 0 1/4 1]);
            
            %-------------
            
            objMasterPanel = classMasterPanel(this);
            
            objPanelPrior = add_param_panel(objMasterPanel,'MainPanelHeight',1,...
                'Title','Initial Guess','IsExpandable',true,'IsExpanded',true);
            objPanelPriorLocalStat = add_param_subpanel(objPanelPrior,'MainPanelHeight',42);
            objPanelPriorMap = add_param_subpanel(objPanelPrior,'MainPanelHeight',400);
            objPanelPriorScaling = add_param_subpanel(objPanelPrior,'MainPanelHeight',80);
            objPanelMinStep = add_param_subpanel(objPanelPrior,'MainPanelHeight',80);
            objPanelPriorSmoothFac = add_param_subpanel(objPanelPrior,'MainPanelHeight',80,'IsExpandable',true);
            objPanelPriorSmoothPSF = add_param_subpanel(objPanelPriorSmoothFac,'MainPanelHeight',200);
            objPanelPriorSmoothFreqFilt = add_param_subpanel(objPanelPriorSmoothFac,'MainPanelHeight',200);
            objPanelPriorSmoothFreqPass = add_param_subpanel(objPanelPriorSmoothFac,'MainPanelHeight',200);
            objPanelPriorRobust = add_param_subpanel(objPanelPriorSmoothFac,'MainPanelHeight',40);
            objPanelPriorMaxIter = add_param_subpanel(objPanelPriorSmoothFac,'MainPanelHeight',80);
            objPanelPriorTolZ = add_param_subpanel(objPanelPriorSmoothFac,'MainPanelHeight',80);
            
            objPanelStasi = add_param_panel(objMasterPanel,'MainPanelHeight',1,...
                'Title','Step Detection','IsExpandable',true);
            objPanelMaxLvl = add_param_subpanel(objPanelStasi,'MainPanelHeight',80);
            objPanelMinPeakLength = add_param_subpanel(objPanelStasi,'MainPanelHeight',80);
            objPanelMinTransitLength = add_param_subpanel(objPanelStasi,'MainPanelHeight',80);
            objPanelStasiNoiseFac = add_param_subpanel(objPanelStasi,'MainPanelHeight',80,'IsExpandable',true);
            objPanelStasiNoiseFacPlot = add_param_subpanel(objPanelStasiNoiseFac,'MainPanelHeight',250);
            objPanelStasiDecayOnly = add_param_subpanel(objPanelStasi,'MainPanelHeight',40);
            objPanelLock = add_param_subpanel(objPanelStasi,'MainPanelHeight',40);
            
            objPanelModel = add_param_panel(objMasterPanel,'MainPanelHeight',1,...
                'Title','Modeling','IsExpandable',true);
            objPanelModelSelection = add_param_subpanel(objPanelModel,'MainPanelHeight',40);
            objPanelModelInterpBleachMap = add_param_subpanel(objPanelModel,'MainPanelHeight',400);
            
            objPanelModelInterp = add_param_subpanel(objPanelModel,'MainPanelHeight',1,...
                'Title','Interpolation','IsExpandable',true);
            objPanelModelInterpSmoothFac = add_param_subpanel(objPanelModelInterp,'MainPanelHeight',80,'IsExpandable',true);
            objPanelModelSmoothPSF = add_param_subpanel(objPanelModelInterpSmoothFac,'MainPanelHeight',200);
            objPanelModelSmoothFreqFilt = add_param_subpanel(objPanelModelInterpSmoothFac,'MainPanelHeight',200);
            objPanelModelSmoothFreqPass = add_param_subpanel(objPanelModelInterpSmoothFac,'MainPanelHeight',200);
            objPanelModelInterpUseRobust = add_param_subpanel(objPanelModelInterp,'MainPanelHeight',40);
            objPanelModelInterpUseRobustMaxIter = add_param_subpanel(objPanelModelInterp,'MainPanelHeight',80);
            objPanelModelInterpUseRobustTolZ = add_param_subpanel(objPanelModelInterp,'MainPanelHeight',80);
            
            objPanelModelFit = add_param_subpanel(objPanelModel,'MainPanelHeight',1,...
                'Title','Fitting','IsExpandable',true);
            objPanelModelFitSelect = add_param_subpanel(objPanelModelFit,'MainPanelHeight',40);
            
            objPanelModelFitGaussOption = add_param_subpanel(objPanelModelFit,'MainPanelHeight',1,...
                'Title','Gaussian Options','IsExpandable',true);
            objPanelModelFitGaussGlobalSearch = add_param_subpanel(objPanelModelFitGaussOption,'MainPanelHeight',40);
            objPanelModelFitGaussNumTrial = add_param_subpanel(objPanelModelFitGaussOption,'MainPanelHeight',80);
            objPanelModelFitGaussTolFun = add_param_subpanel(objPanelModelFitGaussOption,'MainPanelHeight',80);
            %             objPanelModelFitGaussTolX = add_param_subpanel(objPanelModelFitGaussOption,'MainPanelHeight',80);
            
            objPanelModelFitPolyOption = add_param_subpanel(objPanelModelFit,'MainPanelHeight',1,...
                'Title','Polynomial Options','IsExpandable',true);
            objPanelModelFitPolyRobust = add_param_subpanel(objPanelModelFitPolyOption,'MainPanelHeight',40);
            objPanelModelFitPolyScale = add_param_subpanel(objPanelModelFitPolyOption,'MainPanelHeight',40);
            
            objPanelModelFitExport = add_param_subpanel(objPanelModel,'MainPanelHeight',40);
            
            initialize_param_ui(objMasterPanel,hPanel)
            finalize_param_ui(objMasterPanel)
            
            %-------------objPanelPriorLocalStat
            uicontrol(...
                'Parent', objPanelPriorLocalStat.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0 0.02 0.6 0.95],...
                'String', 'Local Statistic:',...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelPriorLocalStat.BackgroundColor,...
                'HorizontalAlignment', 'center');
            
            this.PRIOR.GUI.hPopupMode = uicontrol_popupmenu_wrapper(...
                'Parent',objPanelPriorLocalStat.hMainPanel,...
                'Units','normalized',...
                'Position', [0.6 0 0.4 1],...
                'FontUnits','normalized',...
                'FontSize', 0.63,...
                'String',{'Min.','Mean'},...
                'Value',find(strcmp({'Min.','Mean'},this.PRIOR.Mode)),...
                'TooltipString','Select local statistic to calculate the prior.',...
                'Callback', @(src,evnt)set_prior_mode(this));
            
            %-------------objPanelPriorMap
            this.PRIOR.GUI.hAx = axes(...
                'Parent',objPanelPriorMap.hMainPanel,...
                'Units','normalized',...
                'OuterPosition', [0 0 1 1],...
                'Box','on');
            
            this.PRIOR.GUI.hImg = imagesc(0.5,0.5,0.5,...
                'Parent',this.PRIOR.GUI.hAx);
            
            xlabel(this.PRIOR.GUI.hAx,'x-position')
            ylabel(this.PRIOR.GUI.hAx,'y-position')
            title(this.PRIOR.GUI.hAx,sprintf('\\mu (\\pm\\sigma) = '))
            
            hCbar = colorbar(this.PRIOR.GUI.hAx,'location','NorthOutside');
            xlabel(hCbar,'Expected Step Magnitude')
            
            %-------------objPanelPriorScaling
            uicontrol(...
                'Parent', objPanelPriorScaling.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0,0.5,1,0.5],...
                'String', sprintf('Local Window Size [px]:'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelPriorScaling.BackgroundColor,...
                'HorizontalAlignment', 'center');
            this.PRIOR.GUI.hSliderSampleFac = uicontrol(...
                'Parent', objPanelPriorScaling.hMainPanel,...
                'Style', 'slider',...
                'Min',this.PRIOR.MinSampleFac,...
                'Max',this.PRIOR.MaxSampleFac,...
                'SliderStep',[2 10]/(this.PRIOR.MaxSampleFac-this.PRIOR.MinSampleFac),...
                'Value', this.PRIOR.SampleFac,...
                'Units', 'normalized',...
                'Position', [0,0,0.75,0.5]);
            addlistener(this.PRIOR.GUI.hSliderSampleFac,'ContinuousValueChange',...
                @(src,event)set_prior_sample_fac(this,src));
            this.PRIOR.GUI.hEditSampleFac = uicontrol(...
                'Parent', objPanelPriorScaling.hMainPanel,...
                'Style', 'edit',...
                'Units','normalized',...
                'Position', [0.75,0,0.25,0.5],...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'String', this.PRIOR.SampleFac,...
                'Callback', @(src,evnt)set_prior_sample_fac(this,src));
            
            %-------------objPanelMinStep
            uicontrol(...
                'Parent', objPanelMinStep.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0,0.5,1,0.5],...
                'String', sprintf('Amplitude Scaling Factor:'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelMinStep.BackgroundColor,...
                'HorizontalAlignment', 'center');
            this.PRIOR.GUI.hSliderAmpFac = uicontrol(...
                'Parent', objPanelMinStep.hMainPanel,...
                'Style', 'slider',...
                'Min',0,...
                'Max',this.PRIOR.MaxAmpFac,...
                'Value', this.PRIOR.AmpFac,...
                'SliderStep',[0.01 0.1]/this.PRIOR.MaxAmpFac,...
                'Units', 'normalized',...
                'Position', [0,0,0.75,0.5]);
            addlistener(this.PRIOR.GUI.hSliderAmpFac,'ContinuousValueChange',...
                @(src,event)set_prior_amp_scale_fac(this,src));
            this.PRIOR.GUI.hEditAmpFac = uicontrol(...
                'Parent', objPanelMinStep.hMainPanel,...
                'Style', 'edit',...
                'Units','normalized',...
                'Position', [0.75,0,0.25,0.5],...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'String', this.PRIOR.AmpFac,...
                'Callback', @(src,evnt)set_prior_amp_scale_fac(this,src));
            
            %-------------objPanelPriorSmoothFac
            uicontrol(...
                'Parent', objPanelPriorSmoothFac.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0,0.5,1,0.5],...
                'String', sprintf('Lateral Smoothing Factor:'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelPriorSmoothFac.BackgroundColor,...
                'HorizontalAlignment', 'center');
            this.PRIOR.GUI.hSliderSmoothFac = uicontrol(...
                'Parent', objPanelPriorSmoothFac.hMainPanel,...
                'Style', 'slider',...
                'Min',log10(this.PRIOR.MinSmoothFac),...
                'Max',log10(this.PRIOR.MaxSmoothFac),...
                'SliderStep',[0.1 1]/(log10(this.PRIOR.MaxSmoothFac)-log10(this.PRIOR.MinSmoothFac)),...
                'Value', log10(this.PRIOR.SmoothFac),...
                'Units', 'normalized',...
                'Position', [0,0,0.75,0.5]);
            addlistener(this.PRIOR.GUI.hSliderSmoothFac,'ContinuousValueChange',...
                @(src,event)set_prior_smooth_fac(this,src));
            this.PRIOR.GUI.hEditSmoothFac = uicontrol(...
                'Parent', objPanelPriorSmoothFac.hMainPanel,...
                'Style', 'edit',...
                'Units','normalized',...
                'Position', [0.75,0,0.25,0.5],...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'String', this.PRIOR.SmoothFac,...
                'Callback', @(src,evnt)set_prior_smooth_fac(this,src));
            
            %-------------objPanelPriorSmoothPSF
            this.PRIOR.GUI.hAxSmoothPSF = axes(...
                'Parent',objPanelPriorSmoothPSF.hMainPanel,...
                'Units','normalized',...
                'OuterPosition', [0 0 1 1],...
                'Box','on');
            
            this.PRIOR.GUI.hLineEdge = line(...
                'Parent',this.PRIOR.GUI.hAxSmoothPSF,...
                'xdata',[],'ydata',[],...
                'linestyle','-',...
                'linewidth',2,...
                'color','k',...
                'marker','none');
            
            this.PRIOR.GUI.hLineEdgeSmooth = line(...
                'Parent',this.PRIOR.GUI.hAxSmoothPSF,...
                'xdata',[],'ydata',[],...
                'linestyle','-',...
                'linewidth',1,...
                'color','r',...
                'marker','none');
            
            title(this.PRIOR.GUI.hAxSmoothPSF,'Edge Spread Function')
            xlabel(this.PRIOR.GUI.hAxSmoothPSF,'Radial Distance [px]')
            ylabel(this.PRIOR.GUI.hAxSmoothPSF,'Amplitude')
            
            %-------------objPanelPriorSmoothFreqFilt
            this.PRIOR.GUI.hAxSmoothFreqFilt = axes(...
                'Parent',objPanelPriorSmoothFreqFilt.hMainPanel,...
                'Units','normalized',...
                'OuterPosition', [0 0 1 1],...
                'Box','on');
            
            this.PRIOR.GUI.hImgSmoothFreqFilt = imagesc(0.5,0.5,0.5,...
                'Parent',this.PRIOR.GUI.hAxSmoothFreqFilt);
            
            this.PRIOR.GUI.hLineSmoothFreqFilt = line(...
                'Parent',this.PRIOR.GUI.hAxSmoothFreqFilt,...
                'xdata',[],'ydata',[],...
                'linestyle','-',...
                'color','r',...
                'Linewidth',2,...
                'marker','none');
            
            title(this.PRIOR.GUI.hAxSmoothFreqFilt,'Transferred Contrast')
            xlabel(this.PRIOR.GUI.hAxSmoothFreqFilt,'Wavelength [% image height]')
            ylabel(this.PRIOR.GUI.hAxSmoothFreqFilt,'% Transferred')
            set(this.PRIOR.GUI.hAxSmoothFreqFilt,'ydir','normal')
            
            %-------------objPanelPriorSmoothFreqPass
            this.PRIOR.GUI.hAxSmoothFreqPass = axes(...
                'Parent',objPanelPriorSmoothFreqPass.hMainPanel,...
                'Units','normalized',...
                'OuterPosition', [0 0 1 1],...
                'Box','on');
            
            this.PRIOR.GUI.hImgSmoothFreqPass = imagesc(0.5,0.5,0.5,...
                'Parent',this.PRIOR.GUI.hAxSmoothFreqPass);
            
            this.PRIOR.GUI.hLineSmoothFreqPass = line(...
                'Parent',this.PRIOR.GUI.hAxSmoothFreqPass,...
                'xdata',[],'ydata',[],...
                'linestyle','-',...
                'color','r',...
                'Linewidth',2,...
                'marker','none');
            
            title(this.PRIOR.GUI.hAxSmoothFreqPass,'Lost Contrast')
            xlabel(this.PRIOR.GUI.hAxSmoothFreqPass,'Wavelength [% image height]')
            ylabel(this.PRIOR.GUI.hAxSmoothFreqPass,'% Lost')
            set(this.PRIOR.GUI.hAxSmoothFreqPass,'ydir','normal')
            
            %-------------objPanelPriorRobust
            this.PRIOR.GUI.hCheckRobustInterp = uicontrol(...
                'Parent', objPanelPriorRobust.hMainPanel,...
                'Style', 'checkbox',...
                'Units','normalized',...
                'Position', [0.05 0 0.95 1],...
                'String', sprintf(' Activate Robust Estimation'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelPriorRobust.BackgroundColor,...
                'HorizontalAlignment', 'center',...
                'Value',this.PRIOR.Robust,...
                'Callback', @(src,evnt)set_prior_robust(this));
            
            %-------------objPanelPriorMaxIter
            uicontrol(...
                'Parent', objPanelPriorMaxIter.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0,0.5,1,0.5],...
                'String', sprintf('Max. # iterations:'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelPriorMaxIter.BackgroundColor,...
                'HorizontalAlignment', 'center');
            this.PRIOR.GUI.hSliderMaxIter = uicontrol(...
                'Parent', objPanelPriorMaxIter.hMainPanel,...
                'Style', 'slider',...
                'Min',this.PRIOR.MinMaxIter,...
                'Max',this.PRIOR.MaxMaxIter,...
                'SliderStep',[10 100]/(this.PRIOR.MaxMaxIter-this.PRIOR.MinMaxIter),...
                'Value', this.PRIOR.MaxIter,...
                'Units', 'normalized',...
                'Position', [0,0,0.75,0.5]);
            addlistener(this.PRIOR.GUI.hSliderMaxIter,'ContinuousValueChange',...
                @(src,event)set_prior_max_iter(this,src));
            this.PRIOR.GUI.hEditMaxIter = uicontrol(...
                'Parent', objPanelPriorMaxIter.hMainPanel,...
                'Style', 'edit',...
                'Units','normalized',...
                'Position', [0.75,0,0.25,0.5],...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'String', this.PRIOR.MaxIter,...
                'Callback', @(src,evnt)set_prior_max_iter(this,src));
            
            %-------------objPanelPriorTolZ
            uicontrol(...
                'Parent', objPanelPriorTolZ.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0,0.5,1,0.5],...
                'String', sprintf('Error Tolerance:'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelPriorTolZ.BackgroundColor,...
                'HorizontalAlignment', 'center');
            this.PRIOR.GUI.hSliderTolZ = uicontrol(...
                'Parent', objPanelPriorTolZ.hMainPanel,...
                'Style', 'slider',...
                'Min',log10(this.PRIOR.MinTolZ),...
                'Max',log10(this.PRIOR.MaxTolZ),...
                'SliderStep',[0.1 1]/(log10(this.PRIOR.MaxTolZ)-log10(this.PRIOR.MinTolZ)),...
                'Value', log10(this.PRIOR.TolZ),...
                'Units', 'normalized',...
                'Position', [0,0,0.75,0.5]);
            addlistener(this.PRIOR.GUI.hSliderTolZ,'ContinuousValueChange',...
                @(src,event)set_prior_tol_z(this,src));
            this.PRIOR.GUI.hEditTolZ = uicontrol(...
                'Parent', objPanelPriorTolZ.hMainPanel,...
                'Style', 'edit',...
                'Units','normalized',...
                'Position', [0.75,0,0.25,0.5],...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'String', this.PRIOR.TolZ,...
                'Callback', @(src,evnt)set_prior_tol_z(this,src));
            
            %-------------objPanelMaxLvl
            uicontrol(...
                'Parent', objPanelMaxLvl.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0,0.5,1,0.5],...
                'String', 'Max. # of state levels:',...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelMaxLvl.BackgroundColor,...
                'HorizontalAlignment', 'center');
            this.STASI.hSliderMaxLvl = uicontrol(...
                'Parent', objPanelMaxLvl.hMainPanel,...
                'Style', 'slider',...
                'Min',2,...
                'Max',100,...
                'Value', this.STASI.MaxLvl,...
                'Units', 'normalized',...
                'Position', [0,0,0.75,0.5]);
            addlistener(this.STASI.hSliderMaxLvl,'ContinuousValueChange',...
                @(src,event)set_stasi_max_lvl(this,src));
            this.STASI.hEditMaxLvl = uicontrol(...
                'Parent', objPanelMaxLvl.hMainPanel,...
                'Style', 'edit',...
                'Units','normalized',...
                'Position', [0.75,0,0.25,0.5],...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'String', this.STASI.MaxLvl,...
                'Callback', @(src,evnt)set_stasi_max_lvl(this,src));
            
            %-------------objPanelMinPeakLength
            uicontrol(...
                'Parent', objPanelMinPeakLength.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0,0.5,1,0.5],...
                'String', 'Min. Peak Length [frames]:',...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelMinPeakLength.BackgroundColor,...
                'HorizontalAlignment', 'center');
            this.STASI.hSliderMinPeakLength = uicontrol(...
                'Parent', objPanelMinPeakLength.hMainPanel,...
                'Style', 'slider',...
                'Min',1,...
                'Max',this.STASI.MinPeakLength,...
                'Value', this.STASI.MinPeakLength,...
                'Units', 'normalized',...
                'Position', [0,0,0.75,0.5]);
            addlistener(this.STASI.hSliderMinPeakLength,'ContinuousValueChange',...
                @(src,event)set_min_peak_length(this,src));
            this.STASI.hEditMinPeakLength = uicontrol(...
                'Parent', objPanelMinPeakLength.hMainPanel,...
                'Style', 'edit',...
                'Units','normalized',...
                'Position', [0.75,0,0.25,0.5],...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'String', this.STASI.MinPeakLength,...
                'Callback', @(src,evnt)set_min_peak_length(this,src));
            
            %-------------objPanelMinTransitLength
            uicontrol(...
                'Parent', objPanelMinTransitLength.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0,0.5,1,0.5],...
                'String', 'Min. Transit Length [frames]:',...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelMinTransitLength.BackgroundColor,...
                'HorizontalAlignment', 'center');
            this.STASI.hSliderMinTransitLength = uicontrol(...
                'Parent', objPanelMinTransitLength.hMainPanel,...
                'Style', 'slider',...
                'Min',1,...
                'Max',this.STASI.MinTransitLength,...
                'Value', this.STASI.MinTransitLength,...
                'Units', 'normalized',...
                'Position', [0,0,0.75,0.5]);
            addlistener(this.STASI.hSliderMinTransitLength,'ContinuousValueChange',...
                @(src,event)set_min_transit_length(this,src));
            this.STASI.hEditMinTransitLength = uicontrol(...
                'Parent', objPanelMinTransitLength.hMainPanel,...
                'Style', 'edit',...
                'Units','normalized',...
                'Position', [0.75,0,0.25,0.5],...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'String', this.STASI.MinTransitLength,...
                'Callback', @(src,evnt)set_min_transit_length(this,src));
            
            %-------------objPanelStasiNoiseFac
            uicontrol(...
                'Parent', objPanelStasiNoiseFac.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0,0.5,1,0.5],...
                'String', sprintf('Noise Factor:'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelStasiNoiseFac.BackgroundColor,...
                'HorizontalAlignment', 'center');
            this.STASI.hSliderNoiseFac = uicontrol(...
                'Parent', objPanelStasiNoiseFac.hMainPanel,...
                'Style', 'slider',...
                'Min',this.STASI.MinNoiseFac,...
                'Max',this.STASI.MaxNoiseFac,...
                'SliderStep',[0.01 0.1]/(this.STASI.MaxNoiseFac-this.STASI.MinNoiseFac),...
                'Value', this.STASI.NoiseFac,...
                'Units', 'normalized',...
                'Position', [0,0,0.75,0.5]);
            addlistener(this.STASI.hSliderNoiseFac,'ContinuousValueChange',...
                @(src,event)set_stasi_noise_fac(this,src));
            this.STASI.hEditNoiseFac = uicontrol(...
                'Parent', objPanelStasiNoiseFac.hMainPanel,...
                'Style', 'edit',...
                'Units','normalized',...
                'Position', [0.75,0,0.25,0.5],...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'String', this.STASI.NoiseFac,...
                'Callback', @(src,evnt)set_stasi_noise_fac(this,src));
            
            %-------------objPanelStasiNoiseFacPlot
            this.STASI.GUI.hAxNoise = axes(...
                'Parent',objPanelStasiNoiseFacPlot.hMainPanel,...
                'Units','normalized',...
                'OuterPosition', [0 0 1 1],...
                'Box','on');
            
            this.STASI.GUI.hPntNoise = line(...
                'Parent',this.STASI.GUI.hAxNoise,...
                'xdata',[],'ydata',[],...
                'linestyle','-',...
                'linewidth',1,...
                'color','k',...
                'marker','.',...
                'markersize',12);
            
            this.STASI.GUI.hLineNoiseLvl = line(...
                'Parent',this.STASI.GUI.hAxNoise,...
                'xdata',[],'ydata',[],...
                'linestyle','-',...
                'color',[1,0.64,0],...
                'marker','none',...
                'linewidth',2);
            
            title(this.STASI.GUI.hAxNoise,'Selected Noise Amplitude =')
            xlabel(this.STASI.GUI.hAxNoise,'Time Difference')
            ylabel(this.STASI.GUI.hAxNoise,'Noise Amplitude')
            
            %-------------objPanelStasiDecayOnly
            this.STASI.GUI.hCheckUseDecayOnly = uicontrol(...
                'Parent', objPanelStasiDecayOnly.hMainPanel,...
                'Style', 'checkbox',...
                'Units','normalized',...
                'Position', [0.05 0 0.95 1],...
                'String', sprintf(' Strict Intensity Decay'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelStasiDecayOnly.BackgroundColor,...
                'HorizontalAlignment', 'center',...
                'Value',this.STASI.UseDecayOnly,...
                'Callback', @(src,evnt)set_stasi_decay_only(this));
            
            %-------------
            this.STASI.hToggleLockParam = uicontrol(...
                'Parent',objPanelLock.hMainPanel,...
                'Style', 'togglebutton',...
                'Units','normalized',...
                'Position', [0 0 1 1],...
                'FontUnits','normalized',...
                'FontSize', 0.5,...
                'String', 'Lock Settings',...
                'Callback', @(src,evnt)lock_and_analyse_all(this),...
                'Enable','off');
            
            %-------------objPanelModelSelection
            uicontrol(...
                'Parent', objPanelModelSelection.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0 0.02 0.4 0.95],...
                'String', 'Use:',...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelModelSelection.BackgroundColor,...
                'HorizontalAlignment', 'center');
            
            this.MODEL.GUI.hPopupMode = uicontrol_popupmenu_wrapper(...
                'Parent',objPanelModelSelection.hMainPanel,...
                'Units','normalized',...
                'Position', [0.4 0 0.6 1],...
                'FontUnits','normalized',...
                'FontSize', 0.65,...
                'String',{'Interpolation','Fitting'},...
                'Value',find(strcmp({'Interpolation','Fitting'},this.MODEL.Mode)),...
                'TooltipString','Select modeling method.',...
                'Callback', @(src,evnt)set_modeling_mode(this));
            
            %-------------objPanelModelInterpBleachMap
            this.MODEL.GUI.hAx = axes(...
                'Parent',objPanelModelInterpBleachMap.hMainPanel,...
                'Units','normalized',...
                'OuterPosition', [0 0 1 1],...
                'Box','on');
            
            this.MODEL.GUI.hImg = imagesc(0.5,0.5,0.5,...
                'Parent',this.MODEL.GUI.hAx);
            
            this.MODEL.GUI.hPntRelErrGood = line(...
                'Parent',this.MODEL.GUI.hAx,...
                'xdata',[],'ydata',[],...
                'linestyle','none',...
                'color',[0 0.75 0],...
                'marker','.',...
                'markersize',10);
            
            this.MODEL.GUI.hPntRelErrMedium = line(...
                'Parent',this.MODEL.GUI.hAx,...
                'xdata',[],'ydata',[],...
                'linestyle','none',...
                'color',[1 0.8 0],...
                'marker','.',...
                'markersize',10);
            
            this.MODEL.GUI.hPntRelErrBad = line(...
                'Parent',this.MODEL.GUI.hAx,...
                'xdata',[],'ydata',[],...
                'linestyle','none',...
                'color','r',...
                'marker','.',...
                'markersize',10);
            
            xlabel(this.MODEL.GUI.hAx,'x-position')
            ylabel(this.MODEL.GUI.hAx,'y-position')
            title(this.MODEL.GUI.hAx,'\color{black} Rel. Error \color[rgb]{0 0.75 0}< 10% \color{black} || \color[rgb]{1 0.8 0}< 25% \color{black} || \color{red}> 25%')
            
            hCbar = colorbar(this.MODEL.GUI.hAx,'location','NorthOutside');
            xlabel(hCbar,'Bleach Magnitude')
            
            %-------------objPanelModelInterpSmoothFac
            uicontrol(...
                'Parent', objPanelModelInterpSmoothFac.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0,0.5,1,0.5],...
                'String', sprintf('Lateral Smoothing Factor:'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelModelInterpSmoothFac.BackgroundColor,...
                'HorizontalAlignment', 'center');
            this.MODEL.GUI.hSliderSmoothFac = uicontrol(...
                'Parent', objPanelModelInterpSmoothFac.hMainPanel,...
                'Style', 'slider',...
                'Min',log10(this.MODEL.Type(1).Option.MinSmoothFac),...
                'Max',log10(this.MODEL.Type(1).Option.MaxSmoothFac),...
                'SliderStep',[0.1 1]/(log10(this.MODEL.Type(1).Option.MaxSmoothFac)-log10(this.MODEL.Type(1).Option.MinSmoothFac)),...
                'Value', log10(this.MODEL.Type(1).Option.SmoothFac),...
                'Units', 'normalized',...
                'Position', [0,0,0.75,0.5]);
            addlistener(this.MODEL.GUI.hSliderSmoothFac,'ContinuousValueChange',...
                @(src,event)set_interp_smooth_fac(this,src));
            this.MODEL.GUI.hEditSmoothFac = uicontrol(...
                'Parent', objPanelModelInterpSmoothFac.hMainPanel,...
                'Style', 'edit',...
                'Units','normalized',...
                'Position', [0.75,0,0.25,0.5],...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'String', this.MODEL.Type(1).Option.SmoothFac,...
                'Callback', @(src,evnt)set_interp_smooth_fac(this,src));
            
            %-------------objPanelPriorSmoothPSF
            this.MODEL.GUI.hAxSmoothPSF = axes(...
                'Parent',objPanelModelSmoothPSF.hMainPanel,...
                'Units','normalized',...
                'OuterPosition', [0 0 1 1],...
                'Box','on');
            
            this.MODEL.GUI.hLineEdge = line(...
                'Parent',this.MODEL.GUI.hAxSmoothPSF,...
                'xdata',[],'ydata',[],...
                'linestyle','-',...
                'linewidth',2,...
                'color','k',...
                'marker','none');
            
            this.MODEL.GUI.hLineEdgeSmooth = line(...
                'Parent',this.MODEL.GUI.hAxSmoothPSF,...
                'xdata',[],'ydata',[],...
                'linestyle','-',...
                'linewidth',1,...
                'color','r',...
                'marker','none');
            
            title(this.MODEL.GUI.hAxSmoothPSF,'Edge Spread Function')
            xlabel(this.MODEL.GUI.hAxSmoothPSF,'Radial Distance [px]')
            ylabel(this.MODEL.GUI.hAxSmoothPSF,'Amplitude')
            
            %-------------objPanelModelSmoothFreqFilt
            this.MODEL.GUI.hAxSmoothFreqFilt = axes(...
                'Parent',objPanelModelSmoothFreqFilt.hMainPanel,...
                'Units','normalized',...
                'OuterPosition', [0 0 1 1],...
                'Box','on');
            
            this.MODEL.GUI.hImgSmoothFreqFilt = imagesc(0.5,0.5,0.5,...
                'Parent',this.MODEL.GUI.hAxSmoothFreqFilt);
            
            this.MODEL.GUI.hLineSmoothFreqFilt = line(...
                'Parent',this.MODEL.GUI.hAxSmoothFreqFilt,...
                'xdata',[],'ydata',[],...
                'linestyle','-',...
                'color','r',...
                'Linewidth',2,...
                'marker','none');
            
            title(this.MODEL.GUI.hAxSmoothFreqFilt,'Transferred Contrast')
            xlabel(this.MODEL.GUI.hAxSmoothFreqFilt,'Wavelength [% image height]')
            ylabel(this.MODEL.GUI.hAxSmoothFreqFilt,'% Transferred')
            set(this.MODEL.GUI.hAxSmoothFreqFilt,'ydir','normal')
            
            %-------------objPanelModelSmoothFreqPass
            this.MODEL.GUI.hAxSmoothFreqPass = axes(...
                'Parent',objPanelModelSmoothFreqPass.hMainPanel,...
                'Units','normalized',...
                'OuterPosition', [0 0 1 1],...
                'Box','on');
            
            this.MODEL.GUI.hImgSmoothFreqPass = imagesc(0.5,0.5,0.5,...
                'Parent',this.MODEL.GUI.hAxSmoothFreqPass);
            
            this.MODEL.GUI.hLineSmoothFreqPass = line(...
                'Parent',this.MODEL.GUI.hAxSmoothFreqPass,...
                'xdata',[],'ydata',[],...
                'linestyle','-',...
                'color','r',...
                'Linewidth',2,...
                'marker','none');
            
            title(this.MODEL.GUI.hAxSmoothFreqPass,'Lost Contrast')
            xlabel(this.MODEL.GUI.hAxSmoothFreqPass,'Wavelength [% image height]')
            ylabel(this.MODEL.GUI.hAxSmoothFreqPass,'% Lost')
            set(this.MODEL.GUI.hAxSmoothFreqPass,'ydir','normal')
            
            %-------------objPanelModelInterpUseRobust
            this.MODEL.GUI.hCheckRobustInterp = uicontrol(...
                'Parent', objPanelModelInterpUseRobust.hMainPanel,...
                'Style', 'checkbox',...
                'Units','normalized',...
                'Position', [0.05 0 0.95 1],...
                'String', sprintf(' Activate Robust Estimation'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelModelInterpUseRobust.BackgroundColor,...
                'HorizontalAlignment', 'center',...
                'Value',this.MODEL.Type(1).Option.Robust,...
                'Callback', @(src,evnt)set_interp_robust(this));
            
            %-------------objPanelModelInterpUseRobustMaxIter
            uicontrol(...
                'Parent', objPanelModelInterpUseRobustMaxIter.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0,0.5,1,0.5],...
                'String', sprintf('Max. # iterations:'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelModelInterpUseRobustMaxIter.BackgroundColor,...
                'HorizontalAlignment', 'center');
            this.MODEL.GUI.hSliderMaxIter = uicontrol(...
                'Parent', objPanelModelInterpUseRobustMaxIter.hMainPanel,...
                'Style', 'slider',...
                'Min',this.MODEL.Type(1).Option.MinMaxIter,...
                'Max',this.MODEL.Type(1).Option.MaxMaxIter,...
                'SliderStep',[10 100]/(this.MODEL.Type(1).Option.MaxMaxIter-this.MODEL.Type(1).Option.MinMaxIter),...
                'Value', this.MODEL.Type(1).Option.MaxIter,...
                'Units', 'normalized',...
                'Position', [0,0,0.75,0.5]);
            addlistener(this.MODEL.GUI.hSliderMaxIter,'ContinuousValueChange',...
                @(src,event)set_interp_max_iter(this,src));
            this.MODEL.GUI.hEditMaxIter = uicontrol(...
                'Parent', objPanelModelInterpUseRobustMaxIter.hMainPanel,...
                'Style', 'edit',...
                'Units','normalized',...
                'Position', [0.75,0,0.25,0.5],...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'String', this.MODEL.Type(1).Option.MaxIter,...
                'Callback', @(src,evnt)set_interp_max_iter(this,src));
            
            %-------------objPanelModelInterpUseRobustTolZ
            uicontrol(...
                'Parent', objPanelModelInterpUseRobustTolZ.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0,0.5,1,0.5],...
                'String', sprintf('Error Tolerance:'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelModelInterpUseRobustTolZ.BackgroundColor,...
                'HorizontalAlignment', 'center');
            this.MODEL.GUI.hSliderTolZ = uicontrol(...
                'Parent', objPanelModelInterpUseRobustTolZ.hMainPanel,...
                'Style', 'slider',...
                'Min',log10(this.MODEL.Type(1).Option.MinTolZ),...
                'Max',log10(this.MODEL.Type(1).Option.MaxTolZ),...
                'SliderStep',[0.1 1]/(log10(this.MODEL.Type(1).Option.MaxTolZ)-log10(this.MODEL.Type(1).Option.MinTolZ)),...
                'Value', log10(this.MODEL.Type(1).Option.TolZ),...
                'Units', 'normalized',...
                'Position', [0,0,0.75,0.5]);
            addlistener(this.MODEL.GUI.hSliderTolZ,'ContinuousValueChange',...
                @(src,event)set_interp_tol_z(this,src));
            this.MODEL.GUI.hEditTolZ = uicontrol(...
                'Parent', objPanelModelInterpUseRobustTolZ.hMainPanel,...
                'Style', 'edit',...
                'Units','normalized',...
                'Position', [0.75,0,0.25,0.5],...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'String', this.MODEL.Type(1).Option.TolZ,...
                'Callback', @(src,evnt)set_interp_tol_z(this,src));
            
            %-------------objPanelModelFitSelect
            uicontrol(...
                'Parent', objPanelModelFitSelect.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0 0.02 0.4 0.95],...
                'String', 'Use:',...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelModelFitSelect.BackgroundColor,...
                'HorizontalAlignment', 'center');
            
            this.MODEL.GUI.hPopupFitMode = uicontrol_popupmenu_wrapper(...
                'Parent',objPanelModelFitSelect.hMainPanel,...
                'Units','normalized',...
                'Position', [0.4 0 0.6 1],...
                'FontUnits','normalized',...
                'FontSize', 0.65,...
                'String',{'Gaussian','Polynom 22','Polynom 33','Polynom 44','Polynom 55'},...
                'Value',find(strcmp({'Gaussian','Polynom 22','Polynom 33','Polynom 44','Polynom 55'},this.MODEL.FitMode)),...
                'TooltipString','Select fitting method.',...
                'Callback', @(src,evnt)set_fitting_mode(this),...
                'Enable','off');
            
            %-------------objPanelModelFitGaussGlobalSearch
            this.MODEL.GUI.hCheckGaussGlobalSearch = uicontrol(...
                'Parent', objPanelModelFitGaussGlobalSearch.hMainPanel,...
                'Style', 'checkbox',...
                'Units','normalized',...
                'Enable','off',...
                'Position', [0.05 0 0.95 1],...
                'String', sprintf(' Use Global Optimization'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelModelFitGaussGlobalSearch.BackgroundColor,...
                'HorizontalAlignment', 'center',...
                'Value',this.MODEL.Type(2).Option.GlobalSearch,...
                'Callback', @(src,evnt)set_gauss_global_search(this),...
                'Enable','off');
            
            %-------------objPanelModelFitGaussNumTrial
            uicontrol(...
                'Parent', objPanelModelFitGaussNumTrial.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0,0.5,1,0.5],...
                'String', sprintf('# Trial Points:'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelModelFitGaussNumTrial.BackgroundColor,...
                'HorizontalAlignment', 'center');
            this.MODEL.GUI.hSliderGaussNumTrial = uicontrol(...
                'Parent', objPanelModelFitGaussNumTrial.hMainPanel,...
                'Style', 'slider',...
                'Min',this.MODEL.Type(2).Option.MinNumTrial,...
                'Max',this.MODEL.Type(2).Option.MaxNumTrial,...
                'SliderStep',[1 10]/(this.MODEL.Type(2).Option.MaxNumTrial-this.MODEL.Type(2).Option.MinNumTrial),...
                'Value', this.MODEL.Type(2).Option.NumTrial,...
                'Units', 'normalized',...
                'Position', [0,0,0.75,0.5],...
                'Enable','off');
            addlistener(this.MODEL.GUI.hSliderGaussNumTrial,'ContinuousValueChange',...
                @(src,event)set_gauss_num_trial(this,src));
            this.MODEL.GUI.hEditGaussNumTrial = uicontrol(...
                'Parent', objPanelModelFitGaussNumTrial.hMainPanel,...
                'Style', 'edit',...
                'Units','normalized',...
                'Enable','off',...
                'Position', [0.75,0,0.25,0.5],...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'String', this.MODEL.Type(2).Option.NumTrial,...
                'Callback', @(src,evnt)set_gauss_num_trial(this,src),...
                'Enable','off');
            
            %-------------objPanelModelFitGaussTolFun
            uicontrol(...
                'Parent', objPanelModelFitGaussTolFun.hMainPanel,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0,0.5,1,0.5],...
                'String', sprintf('Error Tolerance:'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelModelFitGaussTolFun.BackgroundColor,...
                'HorizontalAlignment', 'center');
            this.MODEL.GUI.hSliderGaussTolFun = uicontrol(...
                'Parent', objPanelModelFitGaussTolFun.hMainPanel,...
                'Style', 'slider',...
                'Min',log10(this.MODEL.Type(2).Option.MinTolFun),...
                'Max',log10(this.MODEL.Type(2).Option.MaxTolFun),...
                'SliderStep',[0.1 1]/(log10(this.MODEL.Type(2).Option.MaxTolFun)-log10(this.MODEL.Type(2).Option.MinTolFun)),...
                'Value', log10(this.MODEL.Type(2).Option.TolFun),...
                'Units', 'normalized',...
                'Position', [0,0,0.75,0.5],...
                'Enable','off');
            addlistener(this.MODEL.GUI.hSliderGaussTolFun,'ContinuousValueChange',...
                @(src,event)set_gauss_tol_fun(this,src));
            this.MODEL.GUI.hEditGaussTolFun = uicontrol(...
                'Parent', objPanelModelFitGaussTolFun.hMainPanel,...
                'Style', 'edit',...
                'Units','normalized',...
                'Enable','off',...
                'Position', [0.75,0,0.25,0.5],...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'String', log10(this.MODEL.Type(2).Option.TolFun),...
                'Callback', @(src,evnt)set_gauss_tol_fun(this,src),...
                'Enable','off');
            
            %-------------objPanelModelFitPolyRobust
            this.MODEL.GUI.hCheckPolyRobust = uicontrol(...
                'Parent', objPanelModelFitPolyRobust.hMainPanel,...
                'Style', 'checkbox',...
                'Units','normalized',...
                'Enable','off',...
                'Position', [0.05 0 0.95 1],...
                'String', sprintf(' Use Robust Optimization'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelModelFitPolyRobust.BackgroundColor,...
                'HorizontalAlignment', 'center',...
                'Value',strcmp(this.MODEL.Type(3).Option.Robust,'On'),...
                'Callback', @(src,evnt)set_poly_robust(this),...
                'Enable','off');
            
            %-------------objPanelModelFitPolyScale
            this.MODEL.GUI.hCheckPolyScale = uicontrol(...
                'Parent', objPanelModelFitPolyScale.hMainPanel,...
                'Style', 'checkbox',...
                'Units','normalized',...
                'Enable','off',...
                'Position', [0.05 0 0.95 1],...
                'String', sprintf(' Normalize Data'),...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'Backgroundcolor',objPanelModelFitPolyScale.BackgroundColor,...
                'HorizontalAlignment', 'center',...
                'Value',strcmp(this.MODEL.Type(3).Option.Normalize,'on'),...
                'Callback', @(src,evnt)set_poly_scale(this),...
                'Enable','off');
            
            %-------------objPanelModelFitExport
            this.MODEL.hPushExportResults = uicontrol(...
                'Parent',objPanelModelFitExport.hMainPanel,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [0 0 1 1],...
                'FontUnits','normalized',...
                'FontSize', 0.5,...
                'String', 'Save Results',...
                'Callback', @(src,evnt)save_results(this),...
                'Enable','off');
            
            %%
            hPanel = uipanel(...
                'Parent', this.hFig,...
                'Units','normalized',...
                'backgroundcolor','w',...
                'Position',[1/4 0 2/4 0.05]);
            
            this.BAR.hAx = axes(...
                'Parent',hPanel,...
                'Units','normalized',...
                'Position', [0 0 1 1],...
                'TickLength',[0 0],...
                'Box','on',...
                'XTickLabel','off',...
                'YTickLabel','off');
            
            this.BAR.hPatch = patch(...
                'xdata',[0 0 0 0],...
                'ydata',[0 0 1 1],...
                'facecolor','r');
            
            this.BAR.hText = text(0.01,0.5,'Press Ctrl+L to load data...',...
                'FontUnits','normalized',...
                'FontSize',0.7);
            
            axis(this.BAR.hAx,[0 1 0 1])
            
            %%
            axis([this.NAVI.GUI.hAx,...
                this.FIDUCIAL.GUI.hAx,...
                this.MODEL.GUI.hAx,...
                this.PRIOR.GUI.hAx,...
                this.MOLNUM.GUI.hAx],'image','xy')
            linkaxes([this.NAVI.GUI.hAx,...
                this.FIDUCIAL.GUI.hAx,...
                this.MODEL.GUI.hAx,...
                this.PRIOR.GUI.hAx,...
                this.MOLNUM.GUI.hAx],'xy')
            
            axis([this.TRAJ.GUI.Signal.hAx,...
                this.TRAJ.GUI.FwDiff.hAx,...
                this.TRAJ.GUI.Residual.hAx],'auto y')
            linkaxes([this.TRAJ.GUI.Signal.hAx,...
                this.TRAJ.GUI.FwDiff.hAx,...
                this.TRAJ.GUI.Residual.hAx],'x')
            
            axis(this.STASI.GUI.hAxStateEst,'auto y')
            linkaxes([this.STASI.GUI.hAxStateEst,...
                this.STASI.GUI.hAxMDL],'y')
            
            %             axis([this.PRIOR.GUI.hAxSmoothFreqPass,...
            %                 this.PRIOR.GUI.hAxSmoothFreqFilt],'tight')
            linkaxes([this.PRIOR.GUI.hAxSmoothFreqPass,...
                this.PRIOR.GUI.hAxSmoothFreqFilt],'xy')
            
            %             axis([this.MODEL.GUI.hAxSmoothFreqPass,...
            %                 this.MODEL.GUI.hAxSmoothFreqFilt],'auto')
            linkaxes([this.MODEL.GUI.hAxSmoothFreqPass,...
                this.MODEL.GUI.hAxSmoothFreqFilt],'xy')
            
            %%
            hToolbar = uitoolbar(...
                'Parent',this.hFig);
            uipushtool(...
                'Parent', hToolbar,...
                'TooltipString','Load Image',...
                'CData', reshape([NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN 0 NaN 0 1 1 1 1 1 0 0 0 NaN NaN 0 0 0 NaN NaN 0 1 1 1 0 0 0 0 0 NaN 0 NaN NaN NaN 0 NaN 0 1 0 0 0 0 0 0 0 NaN 0 NaN NaN NaN 0 NaN 0 1 0 0 0 0 0 0 0 NaN NaN 0 0 0 NaN NaN 0 1 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN 0 1 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 NaN 0 1 0 0 0 0 0 0 0 NaN 0 NaN 0 NaN NaN NaN 0 1 0 0 0 0 0 0 0 NaN 0 NaN 0 NaN NaN NaN 0.500000000000000 0 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 NaN NaN 0.500000000000000 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0.500000000000000 0.500000000000000 NaN NaN 0 0 0 0 0 NaN NaN NaN 0 0 0.500000000000000 0.500000000000000 NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN NaN NaN 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN 0 NaN 0 1 1 1 1 1 0 0 0 NaN NaN 0 0 0 NaN NaN 0 1 1 1 0 0 0 0 0 NaN 0 NaN NaN NaN 0 NaN 0 1 0 0 0 0 0 0 0 NaN 0 NaN NaN NaN 0 NaN 0 1 0 0 0 0 0 0 0 NaN NaN 0 0 0 NaN NaN 0 1 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN 0 1 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 NaN 0 1 0 0 0 0 0 0 0 NaN 0 NaN 0 NaN NaN NaN 0 1 0 0 0 0 0 0 0 NaN 0 NaN 0 NaN NaN NaN 0.500000000000000 0 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 NaN NaN 0.500000000000000 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0.500000000000000 0.500000000000000 NaN NaN 0 0 0 0 0 NaN NaN NaN 0 0 0.500000000000000 0.500000000000000 NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN NaN NaN 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN 0 NaN 0 1 1 1 1 1 0 0 0 NaN NaN 0 0 0 NaN NaN 0 1 1 1 0 0 0 0 0 NaN 0 NaN NaN NaN 0 NaN 0 1 0 0 0 0 0 0 0 NaN 0 NaN NaN NaN 0 NaN 0 1 0 0 0 0 0 0 0 NaN NaN 0 0 0 NaN NaN 0 1 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN 0 1 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 NaN 0 1 0 0 0 0 0 0 0 NaN 0 NaN 0 NaN NaN NaN 0 1 0 0 0 0 0 0 0 NaN 0 NaN 0 NaN NaN NaN 0.500000000000000 0 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 NaN NaN 0.500000000000000 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0.500000000000000 0.500000000000000 NaN NaN 0 0 0 0 0 NaN NaN NaN 0 0 0.500000000000000 0.500000000000000 NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN NaN NaN 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN 0 0 0 NaN NaN],[16 16 3]),...
                'ClickedCallback', @(src,evnt)load_data(this));
            uitoggletool(...
                'Parent', hToolbar,...
                'Tag','Zoom',...
                'TooltipString','Zoom',...
                'CData', reshape([NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN NaN 0 0 0 0 0 0 NaN 0 0 0 0 0 NaN 0 NaN NaN 0 0 1 1 0 0 NaN NaN NaN 0 NaN NaN NaN 0 NaN 0 0 1 1 1 1 0 0 NaN NaN 0 NaN NaN NaN 0 NaN 0 0 1 1 1 1 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 1 1 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN NaN 0 0 0 0 0 0 NaN 0 0 0 0 0 NaN 0 NaN NaN 0 0 1 1 0 0 NaN NaN NaN 0 NaN NaN NaN 0 NaN 0 0 1 1 1 1 0 0 NaN NaN 0 NaN NaN NaN 0 NaN 0 0 1 1 1 1 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 1 1 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN NaN 0 0 0 0 0 0 NaN 0 0 0 0 0 NaN 0 NaN NaN 0 0 1 1 0 0 NaN NaN NaN 0 NaN NaN NaN 0 NaN 0 0 1 1 1 1 0 0 NaN NaN 0 NaN NaN NaN 0 NaN 0 0 1 1 1 1 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 1 1 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0.500000000000000 NaN NaN NaN NaN],[16 16 3]),...
                'Separator','on',...
                'ClickedCallback', @(src,evnt)set_zoom(src,'hFig',this.hFig));
            uitoggletool(...
                'Parent', hToolbar,...
                'Tag','Pan',...
                'TooltipString','Pan',...
                'CData', reshape([NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 0 NaN NaN NaN 0 NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN 0 0 0 0 0 NaN 0 0 NaN 0 0 0 0 0 NaN NaN 0 0 0 0 0 NaN 0 0 NaN 0 0 0 0 0 NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 0 NaN NaN NaN 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 0 NaN NaN NaN 0 NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN 0 0 0 0 0 NaN 0 0 NaN 0 0 0 0 0 NaN NaN 0 0 0 0 0 NaN 0 0 NaN 0 0 0 0 0 NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 0 NaN NaN NaN 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 0 NaN NaN NaN 0 NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN 0 0 0 0 0 NaN 0 0 NaN 0 0 0 0 0 NaN NaN 0 0 0 0 0 NaN 0 0 NaN 0 0 0 0 0 NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 0 NaN NaN NaN 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN],[16 16 3]),...
                'ClickedCallback', @(src,evnt)set_pan(src,'hFig',this.hFig));
            uitoggletool(...
                'Parent', hToolbar,...
                'Tag','Rotate',...
                'TooltipString','Rotate',...
                'CData', reshape([0;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;NaN;NaN;0;0;NaN;0;NaN;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;0;NaN;0;0;NaN;NaN;0;NaN;NaN;0;0;0;0;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;0;0;NaN;0;NaN;NaN;0;NaN;NaN;0;NaN;NaN;NaN;NaN;0;0;0;0;NaN;NaN;NaN;NaN;NaN;NaN;0;0;0;0;0;0;0;0;NaN;0;NaN;NaN;NaN;NaN;NaN;NaN;0;0;0;0;0;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;NaN;NaN;NaN;0;0;NaN;NaN;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;0;0;0;NaN;NaN;NaN;NaN;0;0;0;0;NaN;NaN;NaN;NaN;NaN;0;0;0;0;NaN;NaN;NaN;NaN;0;0;NaN;NaN;NaN;0;NaN;NaN;0;0;NaN;0;0;0;0;NaN;NaN;NaN;NaN;NaN;0;0;NaN;0;0;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;0;0;0;0;NaN;NaN;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;NaN;NaN;NaN;NaN;0;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;NaN;NaN;0;0;NaN;0;NaN;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;0;NaN;0;0;NaN;NaN;0;NaN;NaN;0;0;0;0;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;0;0;NaN;0;NaN;NaN;0;NaN;NaN;0;NaN;NaN;NaN;NaN;0;0;0;0;NaN;NaN;NaN;NaN;NaN;NaN;0;0;0;0;0;0;0;0;NaN;0;NaN;NaN;NaN;NaN;NaN;NaN;0;0;0;0;0;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;NaN;NaN;NaN;0;0;NaN;NaN;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;0;0;0;NaN;NaN;NaN;NaN;0;0;0;0;NaN;NaN;NaN;NaN;NaN;0;0;0;0;NaN;NaN;NaN;NaN;0;0;NaN;NaN;NaN;0;NaN;NaN;0;0;NaN;0;0;0;0;NaN;NaN;NaN;NaN;NaN;0;0;NaN;0;0;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;0;0;0;0;NaN;NaN;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;NaN;NaN;NaN;NaN;0;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;NaN;NaN;0;0;NaN;0;NaN;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;0;NaN;0;0;NaN;NaN;0;NaN;NaN;0;0;0;0;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;0;0;NaN;0;NaN;NaN;0;NaN;NaN;0;NaN;NaN;NaN;NaN;0;0;0;0;NaN;NaN;NaN;NaN;NaN;NaN;0;0;0;0;0;0;0;0;NaN;0;NaN;NaN;NaN;NaN;NaN;NaN;0;0;0;0;0;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;NaN;NaN;NaN;0;0;NaN;NaN;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;0;0;0;NaN;NaN;NaN;NaN;0;0;0;0;NaN;NaN;NaN;NaN;NaN;0;0;0;0;NaN;NaN;NaN;NaN;0;0;NaN;NaN;NaN;0;NaN;NaN;0;0;NaN;0;0;0;0;NaN;NaN;NaN;NaN;NaN;0;0;NaN;0;0;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;0;0;0;0;NaN;NaN;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;0;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;NaN;0;NaN;NaN;NaN;NaN],[16 16 3]),...
                'ClickedCallback', @(src,evnt)set_rotate(this,src));
            uipushtool(...
                'Parent', hToolbar,...
                'TooltipString','Save Results',...
                'CData', reshape([NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN 0 0 0 0 0 0 0 0 NaN NaN NaN 0 0 0 NaN 0 0.630000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.0400000000000000 0.310000000000000 NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0.630000000000000 0.630000000000000 0.630000000000000 0.0400000000000000 0.310000000000000 NaN 0 0 0 0 0 0 0.950000000000000 0.950000000000000 0.950000000000000 0 0.630000000000000 0 0.190000000000000 0.0400000000000000 0.310000000000000 NaN 0 NaN 0 NaN NaN 0 0.950000000000000 0.950000000000000 0.950000000000000 0 0.630000000000000 0 0.190000000000000 0.0400000000000000 0.310000000000000 NaN 0 0 0 0 0 0 0.950000000000000 0.950000000000000 0.950000000000000 0 0.630000000000000 0.930000000000000 0.510000000000000 0.0400000000000000 0.310000000000000 NaN NaN NaN NaN NaN NaN 0 0.950000000000000 0.950000000000000 0.950000000000000 0 0.630000000000000 0.930000000000000 0.510000000000000 0.0400000000000000 0.310000000000000 NaN 0 NaN NaN NaN NaN 0 0.0400000000000000 0.0400000000000000 0.0400000000000000 0.0400000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.0400000000000000 0.310000000000000 NaN 0 0 0 0 0 0 0.630000000000000 0 0.630000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.0400000000000000 0.310000000000000 NaN 0 NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0.310000000000000 0.310000000000000 NaN NaN NaN NaN NaN NaN NaN 0.310000000000000 0.310000000000000 0.310000000000000 0.310000000000000 0.310000000000000 0.310000000000000 0.310000000000000 0.310000000000000 NaN NaN 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN 0 0 0 0 0 0 0 0 NaN NaN NaN 0 0 0 NaN 0 0.630000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.0400000000000000 0.310000000000000 NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0.630000000000000 0.630000000000000 0.630000000000000 0.0400000000000000 0.310000000000000 NaN 0 0 0 0 0 0 0.950000000000000 0.950000000000000 0.950000000000000 0 0.630000000000000 0 0.190000000000000 0.0400000000000000 0.310000000000000 NaN 0 NaN 0 NaN NaN 0 0.950000000000000 0.950000000000000 0.950000000000000 0 0.630000000000000 0 0.190000000000000 0.0400000000000000 0.310000000000000 NaN 0 0 0 0 0 0 0.950000000000000 0.950000000000000 0.950000000000000 0 0.630000000000000 0.930000000000000 0.510000000000000 0.0400000000000000 0.310000000000000 NaN NaN NaN NaN NaN NaN 0 0.950000000000000 0.950000000000000 0.950000000000000 0 0.630000000000000 0.930000000000000 0.510000000000000 0.0400000000000000 0.310000000000000 NaN 0 NaN NaN NaN NaN 0 0.0400000000000000 0.0400000000000000 0.0400000000000000 0.0400000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.0400000000000000 0.310000000000000 NaN 0 0 0 0 0 0 0.630000000000000 0 0.630000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.0400000000000000 0.310000000000000 NaN 0 NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0.310000000000000 0.310000000000000 NaN NaN NaN NaN NaN NaN NaN 0.310000000000000 0.310000000000000 0.310000000000000 0.310000000000000 0.310000000000000 0.310000000000000 0.310000000000000 0.310000000000000 NaN NaN 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN 0 0 0 0 0 0 0 0 NaN NaN NaN 0 0 0 NaN 0 0.630000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.0400000000000000 0.310000000000000 NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0.630000000000000 0.630000000000000 0.630000000000000 0.0400000000000000 0.310000000000000 NaN 0 0 0 0 0 0 0.950000000000000 0.950000000000000 0.950000000000000 0 0.630000000000000 0 0.190000000000000 0.0400000000000000 0.310000000000000 NaN 0 NaN 0 NaN NaN 0 0.950000000000000 0.950000000000000 0.950000000000000 0 0.630000000000000 0 0.190000000000000 0.0400000000000000 0.310000000000000 NaN 0 0 0 0 0 0 0.950000000000000 0.950000000000000 0.950000000000000 0 0.630000000000000 0.930000000000000 0.510000000000000 0.0400000000000000 0.310000000000000 NaN NaN NaN NaN NaN NaN 0 0.950000000000000 0.950000000000000 0.950000000000000 0 0.630000000000000 0.930000000000000 0.510000000000000 0.0400000000000000 0.310000000000000 NaN 0 NaN NaN NaN NaN 0 0.0400000000000000 0.0400000000000000 0.0400000000000000 0.0400000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.0400000000000000 0.310000000000000 NaN 0 0 0 0 0 0 0.630000000000000 0 0.630000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.630000000000000 0.0400000000000000 0.310000000000000 NaN 0 NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0.310000000000000 0.310000000000000 NaN NaN NaN NaN NaN NaN NaN 0.310000000000000 0.310000000000000 0.310000000000000 0.310000000000000 0.310000000000000 0.310000000000000 0.310000000000000 0.310000000000000 NaN NaN 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0],[16 16 3]),...
                'Separator','on',...
                'ClickedCallback',@(src,evnt)save_results(this));
            uipushtool(...
                'Parent', hToolbar,...
                'TooltipString','Open Documentation',...
                'CData', reshape([NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 0 1 1 1 0 0 1 1 1 1 1 0 0 0 0 0 0 1 1 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 0 1 1 1 0 0 1 1 1 1 1 0 0 0 0 0 0 1 1 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 0 1 1 1 0 0 1 1 1 1 1 0 0 0 0 0 0 1 1 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN],[16 16 3]),...
                'Separator','on');
            
            %%
            colormap(repmat(colvec(linspace(0,0.95,256)),[1 3]))
            
            set(this.hFig,'Visible','on',...
                'Position',figPos)
        end %fun
        function load_data(this)
            set_bar_text(this,'Loading data...')
            
            fileFormat = generate_polynomial_decision_dialog('Loading Data...',...
                {'Choose import type:'},{'SLIMfast','ASCII File','Excel File','Copy & Paste'});
            
            switch fileFormat
                case 'SLIMfast'
                    [fileName,this.WorkPath] = uigetfile('*.txt');
                    
                    listLoad = {...
                        'Position_X',...
                        'Position_Y',...
                        'Time',...
                        'Photons',...
                        'Signalpower',...
                        'Cluster_ID',...
                        'Traj_ID'};
                    
                    isMatch = cellfun(@(x)strfind(fileName,x),listLoad,'un',0);
                    fileName = fileName(1:isMatch{not(cellfun('isempty',isMatch))}-1);
                    
                    try
                        data(:,5) = dlmread(fullfile(this.WorkPath,[fileName,listLoad{6},'.txt']),'\t',1,0);
                    catch
                        data(:,5) = dlmread(fullfile(this.WorkPath,[fileName,listLoad{7},'.txt']),'\t',1,0);
                    end %try
                    try
                        data(:,4) = dlmread(fullfile(this.WorkPath,[fileName,listLoad{4},'.txt']),'\t',1,0);
                    catch
                        data(:,4) = dlmread(fullfile(this.WorkPath,[fileName,listLoad{5},'.txt']),'\t',1,0);
                    end %try
                    data(:,1) = dlmread(fullfile(this.WorkPath,[fileName,listLoad{3},'.txt']),'\t',1,0);
                    data(:,2) = dlmread(fullfile(this.WorkPath,[fileName,listLoad{1},'.txt']),'\t',1,0);
                    data(:,3) = dlmread(fullfile(this.WorkPath,[fileName,listLoad{2},'.txt']),'\t',1,0);
                case 'ASCII File'
                    [fileName,this.WorkPath] = uigetfile('*.txt');
                    
                    data = dlmread(fullfile(this.WorkPath,fileName),'\t');
                case 'Excel File'
                    [fileName,this.WorkPath] = uigetfile('*.xls');
                    
                    data = xlsread(fullfile(this.WorkPath,fileName));
                case 'Copy & Paste'
                    objList = PasteList;
                    waitfor(objList.hFig)
                    data = get_data(objList);
            end %switch
            t = data(:,1);
            x = data(:,2);
            y = data(:,3);
            A = (data(:,4));
            ID = data(:,5);
            
            %% pre-process data
            this.UUID = unique(ID); %list of unique group identifiers
            this.NumCluster = numel(this.UUID);
            
            this.Cluster = [];
            for idxCluster = this.NumCluster:-1:1
                take = find(ID == this.UUID(idxCluster));
                
                %sort to ascend in time
                [this.Cluster(idxCluster).t,idxSort] = sort(t(take)); %[frame]
                %                 this.Cluster(idxCluster).t = t(take(idxSort)); %[frame]
                this.Cluster(idxCluster).x = x(take(idxSort)); %[px]
                this.Cluster(idxCluster).y = y(take(idxSort)); %[px]
                this.Cluster(idxCluster).A = A(take(idxSort)); %[AU]
                
                %check there are no duplicates -> for the moment average in case (fix later)
                if numel(unique(t(take))) < numel(t(take))
                    this.Cluster(idxCluster).x = ...
                        nonzeros(accumarray(this.Cluster(idxCluster).t,...
                        this.Cluster(idxCluster).x,[],@(x)mean(x)));
                    this.Cluster(idxCluster).y = ...
                        nonzeros(accumarray(this.Cluster(idxCluster).t,...
                        this.Cluster(idxCluster).y,[],@(x)mean(x)));
                    this.Cluster(idxCluster).A = ...
                        nonzeros(accumarray(this.Cluster(idxCluster).t,...
                        this.Cluster(idxCluster).A,[],@(x)mean(x)));
                    this.Cluster(idxCluster).t = ...
                        nonzeros(accumarray(this.Cluster(idxCluster).t,...
                        this.Cluster(idxCluster).t,[],@(x)mean(x)));
                end %if
                
                this.Cluster(idxCluster).t0 = this.Cluster(idxCluster).t - ...
                    this.Cluster(idxCluster).t(1) + 1; %[frame] starting at 1
                this.Cluster(idxCluster).T = this.Cluster(idxCluster).t(end) - ...
                    this.Cluster(idxCluster).t(1) + 1; %total # frames
                
                this.Cluster(idxCluster).NumPnt = numel(this.Cluster(idxCluster).t);
                
                % group centers
                this.Cluster(idxCluster).xCtr = mean(this.Cluster(idxCluster).x);
                this.Cluster(idxCluster).yCtr = mean(this.Cluster(idxCluster).y);
                
                [dA,dtf] = ndiff(this.Cluster(idxCluster).t,this.Cluster(idxCluster).A);
                this.Cluster(idxCluster).Noise = nonzeros(accumarray(dtf(:),dA(:),...
                    [this.Cluster(idxCluster).T-1,1],@(x)sqrt(0.5)*1.4826*nanquantile(abs(x),0.5),0));
                this.Cluster(idxCluster).NoiseDt = unique(dtf);
                
                set_bar_percentage(this,1-(idxCluster-1)/this.NumCluster)
            end %for
            
            %take out clusters of size 1 (fix later)
            take = [this.Cluster(:).NumPnt] > 1;
            this.Cluster = this.Cluster(take);
            this.UUID = this.UUID(take);
            this.NumCluster = sum(take);
            
            %%
            this.LinID = colvec(1:this.NumCluster); %linear index
            this.NumCluster = numel(this.UUID); % # groups
            
            this.FOV = [...
                floor(min(vertcat(this.Cluster.x))),...
                ceil(max(vertcat(this.Cluster.x))),...
                floor(min(vertcat(this.Cluster.y))),...
                ceil(max(vertcat(this.Cluster.y))),...
                floor(min(vertcat(this.Cluster.A))),...
                ceil(max(vertcat(this.Cluster.A)))];
            this.FOV = this.FOV+[-1 1 -1 1 -1 1];
            
            %%
            calc_spat_grid(this)
            calc_prior(this)
            smooth_prior(this)
            scale_prior(this)
            
            %% set up GUI
            set_bar_text(this,'Preparing GUI...')
            set_bar_percentage(this,0)
            
            %             set(this.NAVI.GUI.hPopupTrajList,...
            %                 'String',num2cell(this.LinID),... %UUID is replaced by its linear index within the list
            %                 'Value',1)
            
            set(this.NAVI.GUI.hImgDummy,... %just needed for the ROI object
                'xdata',this.FOV(1):this.FOV(2),...
                'ydata',this.FOV(3):this.FOV(4),...
                'cdata',ones(this.FOV(4)-this.FOV(3)+1,this.FOV(2)-this.FOV(1)+1,3))
            
            set(this.NAVI.GUI.hPnt,...
                'xdata',vertcat(this.Cluster.x),...
                'ydata',vertcat(this.Cluster.y))
            set(this.NAVI.GUI.hPntSelected,...
                'xdata',this.Cluster(1).x,...
                'ydata',this.Cluster(1).y)
            
            axis(this.NAVI.GUI.hAx,this.FOV(1:4)+[-1 1 -1 1])
            
            set_bar_percentage(this,0.2)
            
            %
            set(this.BLEACHMAP.GUI.hPnt,...
                'xdata',vertcat(this.Cluster.x),...
                'ydata',vertcat(this.Cluster.y),...
                'zdata',vertcat(this.Cluster.A))
            
            dataAspectRatio = get(this.BLEACHMAP.GUI.hAx,'DataAspectRatio');
            dataAspectRatio(1:2) = 1;
            dataAspectRatio(3) = (this.FOV(6)-this.FOV(5))/...
                min((this.FOV(2)-this.FOV(1)),(this.FOV(4)-this.FOV(3)));
            set(this.BLEACHMAP.GUI.hAx,'DataAspectRatio',dataAspectRatio)
            
            view(this.BLEACHMAP.GUI.hAx,3)
            axis(this.BLEACHMAP.GUI.hAx,'tight','vis3d')
            
            set_bar_percentage(this,0.4)
            
            % set up XZ- and YZ-Projections
            fcn = makeConstrainToRectFcn('imrect',this.FOV(1:2),this.FOV(3:4));
            
            this.BLEACHMAP.GUI.hRoiXzSlide = imrect(...
                this.NAVI.GUI.hAx,[this.FOV(1),this.FOV(3),...
                this.FOV(2)-this.FOV(1),this.FOV(4)-this.FOV(3)],...
                'PositionConstraintFcn',fcn);
            setColor(this.BLEACHMAP.GUI.hRoiXzSlide,[1 0 1])
            hChild = get(this.BLEACHMAP.GUI.hRoiXzSlide,'Children');
            set(hChild(13),'FaceColor',[1 0 1],'FaceAlpha',0.05)
            set(hChild([1 2 3 4 6 10]),'Visible','off');
            set(hChild([5 9]),'HitTest','off')
            set(hChild([5 7 9 11]),'Linewidth',2)
            set(hChild([8 12]),'Marker','.','Markersize',25,'MarkerFaceColor',[1 0 1])
            
            this.BLEACHMAP.GUI.hRoiYzSlide = imrect(...
                this.NAVI.GUI.hAx,[this.FOV(1),this.FOV(3),...
                this.FOV(2)-this.FOV(1),this.FOV(4)-this.FOV(3)],...
                'PositionConstraintFcn',fcn);
            setColor(this.BLEACHMAP.GUI.hRoiYzSlide,[0 1 1])
            hChild = get(this.BLEACHMAP.GUI.hRoiYzSlide,'Children');
            set(hChild(13),'FaceColor',[0 1 1],'FaceAlpha',0.05)
            set(hChild([1 2 3 4 8 12]),'Visible','off');
            set(hChild([7 11]),'HitTest','off')
            set(hChild([5 7 9 11]),'Linewidth',2)
            set(hChild([6 10]),'Marker','.','Markersize',25,'MarkerFaceColor',[0 1 1])
            
            hChild = get(this.NAVI.GUI.hAx,'Children');
            this.BLEACHMAP.id(1) = addNewPositionCallback(this.BLEACHMAP.GUI.hRoiXzSlide,...
                @(r)respond_to_xz_slider(this,hChild(1)));
            this.BLEACHMAP.id(2) = addNewPositionCallback(this.BLEACHMAP.GUI.hRoiYzSlide,...
                @(r)respond_to_yz_slider(this,hChild(2)));
            
            set_bar_percentage(this,0.6)
            
            %----------------------
            this.STASI.MaxLength = ceil(max([this.Cluster.T])/2);
            set(this.STASI.hSliderMinPeakLength,...
                'Max', this.STASI.MaxLength,...
                'SliderStep', [1 10]./(this.STASI.MaxLength-1))
            set(this.STASI.hSliderMinTransitLength,...
                'Max', this.STASI.MaxLength,...
                'SliderStep', [1 10]./(this.STASI.MaxLength-1))
            
            %%
            %             update_tab(this,'Intensity Map')
            update_prior_map(this)
            update_prior_smooth_ESF(this)
            update_prior_smooth_freq_response(this)
            
            set(this.STASI.hToggleLockParam,...
                'Value',0,'Enable','on')
            lock_and_analyse_all(this)
            
            set_bar_percentage(this,0.8)
            
            update_int_map_proj(this,'xy')
            
            update_traj_selection(this)
            
            set_bar_text(this,'')
            set_bar_percentage(this,0)
        end %fun
        
        function set_tab(this,evnt)
            update_tab(this,get(evnt.NewValue,'Title'))
        end %for
        function update_tab(this,mode)
            if strcmp(mode,'Intensity Map')
                set(this.BLEACHMAP.GUI.hPanelOpt,'Visible','on')
                
                if not(isempty(this.Cluster)) && this.BLEACHMAP.ShowSlices
                    hChild = get(this.BLEACHMAP.GUI.hRoiYzSlide,'Children');
                    set(hChild([5 6 7 9 10 11 13 14 15]),'Visible','on','HitTest','on')
                    hChild = get(this.BLEACHMAP.GUI.hRoiXzSlide,'Children');
                    set(hChild([5 7 8 9 11 12 13 14 15]),'Visible','on','HitTest','on')
                end %if
                
                set([this.TRAJ.GUI.Pnt3D.hAx;get(this.TRAJ.GUI.Pnt3D.hAx,'children')],'Visible','off')
                %                     set([this.MOLNUM.GUI.Pnt3D.hAx;get(this.MOLNUM.GUI.Pnt3D.hAx,'children')],'Visible','off')
            else
                set([this.TRAJ.GUI.Pnt3D.hAx;get(this.TRAJ.GUI.Pnt3D.hAx,'children')],'Visible','on')
                
                %                     set([this.MOLNUM.GUI.Pnt3D.hAx;get(this.MOLNUM.GUI.Pnt3D.hAx,'children')],'Visible','off')
                set(this.BLEACHMAP.GUI.hPanelOpt,'Visible','off')
                
                if not(isempty(this.Cluster))
                    set(get(this.BLEACHMAP.GUI.hRoiXzSlide,'Children'),'Visible','off','HitTest','off')
                    set(get(this.BLEACHMAP.GUI.hRoiYzSlide,'Children'),'Visible','off','HitTest','off')
                    
                    rotate3d(this.BLEACHMAP.GUI.hAx,'off')
                    set(findobj(this.hFig,'Tag','Rotate'),'State','off')
                end %if
                
                if not(strcmp(mode,'Molecule Number'))
                    set([this.MOLNUM.GUI.Pnt3D.hPntDimer,...
                        this.MOLNUM.GUI.Pnt3D.hPntTrimer,...
                        this.MOLNUM.GUI.Pnt3D.hPntOligomer],...
                        'visible','off')
                end %if
            end %if
        end %fun
        
        %% INFO BAR
        function set_bar_text(this,txt)
            set(this.BAR.hText,'String',txt)
            drawnow nocallbacks
        end %fun
        function set_bar_percentage(this,p)
            set(this.BAR.hPatch,'XData',[0 p p 0])
            drawnow nocallbacks
        end %fun
        
        %% TRAJECTORY NAVIGATION & SELECTION
        
        % setter
        function set_navi_mode(this,i)
            if nargin > 1
                set(this.NAVI.GUI.hPopupMode,'Value',i)
            end %if
            listID = get_list_ID(this);
            
            %%
            if any(listID) % any active element in the group
                set(this.NAVI.GUI.hPopupTrajList,...
                    'String',num2cell(listID),'Value',1)
            else
                set(this.NAVI.GUI.hPopupTrajList,...
                    'String','0','Value',1)
            end %if
            
            %%
            update_traj_selection(this)
        end
        
        function set_prev_traj_ID(this)
            i = get(this.NAVI.GUI.hPopupTrajList,'Value');
            i = i - 1;
            
            if i > 0
                set(this.NAVI.GUI.hPopupTrajList,'Value',i);
                update_traj_selection(this)
            end %if
        end %fun
        function set_next_traj_ID(this)
            ID = get(this.NAVI.GUI.hPopupTrajList,'String');
            i = get(this.NAVI.GUI.hPopupTrajList,'Value');
            i = i + 1;
            
            if i <= numel(ID)
                set(this.NAVI.GUI.hPopupTrajList,'Value',i);
                update_traj_selection(this)
            end %if
        end %fun
        
        function set_left_traj(this)
            ID = get(this.NAVI.GUI.hPopupTrajList,'String');
            if not(strcmp(ID,'0'))
                ID = cell2mat(cellfun(@(x)str2double(x),ID,'un',0));
                i = get(this.NAVI.GUI.hPopupTrajList,'Value');
                
                xPos = vertcat(this.Cluster(ID).xCtr);
                yPos = vertcat(this.Cluster(ID).yCtr);
                
                dx = xPos - this.Cluster(ID(i)).xCtr;
                dy = yPos - this.Cluster(ID(i)).yCtr;
                
                take = find(dx < 0); %left
                
                if not(isempty(take))
                    d = sqrt(dx(take).^2+this.NAVI.WeightOrthDist*dy(take).^2);
                    ID = find(ID == ID(take(d == min(d))));
                    
                    set(this.NAVI.GUI.hPopupTrajList,'Value',ID);
                    update_traj_selection(this)
                end %if
            end %if
        end %fun
        function set_right_traj(this)
            ID = get(this.NAVI.GUI.hPopupTrajList,'String');
            if not(strcmp(ID,'0'))
                ID = cell2mat(cellfun(@(x)str2double(x),ID,'un',0));
                i = get(this.NAVI.GUI.hPopupTrajList,'Value');
                
                xPos = vertcat(this.Cluster(ID).xCtr);
                yPos = vertcat(this.Cluster(ID).yCtr);
                
                dx = xPos - this.Cluster(ID(i)).xCtr;
                dy = yPos - this.Cluster(ID(i)).yCtr;
                
                take = find(dx > 0); %right
                
                if not(isempty(take))
                    d = sqrt(dx(take).^2+this.NAVI.WeightOrthDist*dy(take).^2);
                    ID = find(ID == ID(take(d == min(d))));
                    
                    set(this.NAVI.GUI.hPopupTrajList,'Value',ID);
                    update_traj_selection(this)
                end %if
            end %if
        end %fun
        function set_above_traj(this)
            ID = get(this.NAVI.GUI.hPopupTrajList,'String');
            if not(strcmp(ID,'0'))
                ID = cell2mat(cellfun(@(x)str2double(x),ID,'un',0));
                i = get(this.NAVI.GUI.hPopupTrajList,'Value');
                
                xPos = vertcat(this.Cluster(ID).xCtr);
                yPos = vertcat(this.Cluster(ID).yCtr);
                
                dx = xPos - this.Cluster(ID(i)).xCtr;
                dy = yPos - this.Cluster(ID(i)).yCtr;
                
                take = find(dy > 0); %up
                
                if not(isempty(take))
                    d = sqrt(dy(take).^2+this.NAVI.WeightOrthDist*dx(take).^2);
                    ID = find(ID == ID(take(d == min(d))));
                    
                    set(this.NAVI.GUI.hPopupTrajList,'Value',ID);
                    update_traj_selection(this)
                end %if
            end %if
        end %fun
        function set_below_traj(this)
            ID = get(this.NAVI.GUI.hPopupTrajList,'String');
            if not(strcmp(ID,'0'))
                ID = cell2mat(cellfun(@(x)str2double(x),ID,'un',0));
                i = get(this.NAVI.GUI.hPopupTrajList,'Value');
                
                xPos = vertcat(this.Cluster(ID).xCtr);
                yPos = vertcat(this.Cluster(ID).yCtr);
                
                dx = xPos - this.Cluster(ID(i)).xCtr;
                dy = yPos - this.Cluster(ID(i)).yCtr;
                
                take = find(dy < 0); %down
                
                if not(isempty(take))
                    d = sqrt(dy(take).^2+this.NAVI.WeightOrthDist*dx(take).^2);
                    ID = find(ID == ID(take(d == min(d))));
                    
                    set(this.NAVI.GUI.hPopupTrajList,'Value',ID);
                    update_traj_selection(this)
                end %if
            end %if
        end %fun
        
        function selection_by_map(this)
            if isempty(this.Cluster) %no data
                generate_information_dialog(...
                    '',{'No data.'})
            else
                selection = impoint(this.NAVI.GUI.hAx);
                pos = getPosition(selection);
                delete(selection)
                
                ID = get(this.NAVI.GUI.hPopupTrajList,'String');
                ID = cell2mat(cellfun(@(x)str2double(x),ID,'un',0));
                
                xPos = vertcat(this.Cluster(ID).xCtr);
                yPos = vertcat(this.Cluster(ID).yCtr);
                
                d = sqrt((xPos-pos(1)).^2 + (yPos-pos(2)).^2);
                idxMatch = find(ID == ID(d == min(d)));
                
                set(this.NAVI.GUI.hPopupTrajList,...
                    'Value',idxMatch);
                update_traj_selection(this)
            end %if
        end %fun
        function selection_by_ID(this,mode)
            ID = get_traj_ID(this);
            
            switch mode
                case 'Accept'
                    accept_traj_int_steps(this,ID)
                case 'Discard'
                    discard_traj_int_steps(this,ID)
            end %switch
            
            %%
            update_fiducial_map(this)
            update_model(this)
            
            update_navi_mode(this)
        end %fun
        function selection_by_ROI(this,src)
            roiType = generate_pushdown_decision_dialog('',...
                {'Choose ROI Type:'},{'Rectangle','Ellipse',...
                'Polygon Area','Freehand Area'});
            
            if not(isempty(roiType))
                [ROI,hRoi] = ROI_draw(roiType,this.NAVI.GUI.hAx);
                delete(hRoi)
                
                %%
                xLvl = vertcat(this.Cluster.xLvl);
                yLvl = vertcat(this.Cluster.yLvl);
                useLvl = vertcat(this.Cluster.useLvl);
                
                isIn = IMG_BW_PNT_inside([xLvl yLvl],transpose(ROI.Mask));
                
                switch get(src,'String')
                    case 'Accept'
                        useLvl(isIn) = true;
                    case 'Discard'
                        useLvl(isIn) = false;
                end %switch
                
                %%
                cnt = 0;
                for idxCluster = 1:this.NumCluster
                    for idxStep = 1:this.Cluster(idxCluster).NumLvl
                        cnt = cnt + 1;
                        
                        if isIn(cnt)
                            this.Cluster(idxCluster).useLvl(idxStep) = useLvl(cnt);
                        end %if
                    end %for
                end %for
                
                %%
                update_fiducial_map(this)
                update_model(this)
                
                update_navi_mode(this)
            end %if
        end %fun
        
        function accept_all_int_steps(this)
            for idxCluster = 1:this.NumCluster
                accept_traj_int_steps(this,idxCluster)
            end %for
            
            %%
            update_fiducial_map(this)
            update_model(this)
            
            update_navi_mode(this)
        end %fun
        function discard_all_int_steps(this)
            for idxCluster = 1:this.NumCluster
                discard_traj_int_steps(this,idxCluster)
            end %for
            
            %%
            update_fiducial_map(this)
            update_model(this)
            
            update_navi_mode(this)
        end %fun
        function accept_traj_int_steps(this,idxCluster)
            for idxStep = 1:this.Cluster(idxCluster).NumLvl
                this.Cluster(idxCluster).useLvl(idxStep) = true;
            end %for
            if idxCluster == get_traj_ID(this)
                set(this.TRAJ.GUI.FwDiff.hPntBleachEventSelector,'color','g')
            end %if
        end %fun
        function discard_traj_int_steps(this,idxCluster)
            for idxStep = 1:this.Cluster(idxCluster).NumLvl
                this.Cluster(idxCluster).useLvl(idxStep) = false;
            end %for
            if idxCluster == get_traj_ID(this)
                set(this.TRAJ.GUI.FwDiff.hPntBleachEventSelector,'color','r')
            end %if
        end %fun
        
        function switch_step_state(this,idxCluster,idxStep)
            if this.Cluster(idxCluster).useLvl(idxStep)
                this.Cluster(idxCluster).useLvl(idxStep) = false;
                set(this.TRAJ.GUI.FwDiff.hPntBleachEventSelector(idxStep),'color','r')
            else
                this.Cluster(idxCluster).useLvl(idxStep) = true;
                set(this.TRAJ.GUI.FwDiff.hPntBleachEventSelector(idxStep),'color','g')
            end %if
            drawnow nocallbacks
            
            %%
            update_fiducial_map(this)
            update_model(this)
            
            %%
            update_navi_mode(this)
        end %fun
        
        % getter
        function listID = get_list_ID(this)
            switch get(this.NAVI.GUI.hPopupMode,'Value')
                case 1 %All ID's
                    listID = this.LinID;
                case 2 %Bleached ID's
                    listID = find(vertcat(this.Cluster.hasLvl));
                case 3 %Accepted ID's
                    listID = false(this.NumCluster,1);
                    for idxCluster = rowvec(this.LinID)
                        if this.Cluster(idxCluster).hasLvl
                            if any(this.Cluster(idxCluster).useLvl)
                                listID(idxCluster) = true;
                            end %if
                        end %if
                    end %for
                    listID = find(listID);
                case 4 %Discarded ID's
                    listID = false(this.NumCluster,1);
                    for idxCluster = rowvec(this.LinID)
                        if this.Cluster(idxCluster).hasLvl
                            if not(any(this.Cluster(idxCluster).useLvl))
                                listID(idxCluster) = true;
                            end %if
                        end %if
                    end %for
                    listID = find(listID);
                case 5 %Critical ID's
                    numLvl = vertcat(this.Cluster.NumLvl);
                    listID = repval(find(numLvl),nonzeros(numLvl));
                    
                    take = vertcat(this.Cluster.useLvl);
                    relErr(take) = this.MODEL.Type(get_model_idx(this)).GoF.RelErr;
                    [~,iSort] = sort(relErr,'descend');
                    listID = unique(listID(iSort),'stable');
            end %switch
        end %fun
        function ID = get_traj_ID(this)
            ID = str2double(get(this.NAVI.GUI.hPopupTrajList,'String'));
            if strcmp(ID,'0')
                ID = 0;
            else
                i = get(this.NAVI.GUI.hPopupTrajList,'Value');
                
                ID = ID(i);
            end %if
        end %fun
        
        % updating
        function update_navi_mode(this)
            listID = get_list_ID(this);
            
            switch get(this.NAVI.GUI.hPopupMode,'Value')
                case 1 %All ID's
                    idxTraj = get(this.NAVI.GUI.hPopupTrajList,'Value');
                case 2 %Bleached ID's
                    idxTraj = get(this.NAVI.GUI.hPopupTrajList,'Value');
                case 3 %Accepted ID's
                    oldID = cellfun(@str2num,...
                        get(this.NAVI.GUI.hPopupTrajList,'String'));
                    idxOldID = get(this.NAVI.GUI.hPopupTrajList,'Value');
                    
                    if size(listID) == size(oldID) %no change in the list
                        idxTraj = get(this.NAVI.GUI.hPopupTrajList,'Value');
                    else
                        isMatch = (listID == oldID(idxOldID));
                        if any(isMatch) %actual selection still in the pool
                            idxTraj = find(isMatch);
                        else
                            idxTraj = find(ismembc2(listID,oldID) < idxOldID,1,'last');
                            if isempty(idxTraj) %there was no trajectory before
                                idxTraj = 1;
                            end %if
                        end %if
                    end %if
                case 4 %Discarded ID's
                    oldID = cellfun(@str2num,...
                        get(this.NAVI.GUI.hPopupTrajList,'String'));
                    idxOldID = get(this.NAVI.GUI.hPopupTrajList,'Value');
                    
                    
                    if size(listID) == size(oldID) %no change in the list
                        idxTraj = get(this.NAVI.GUI.hPopupTrajList,'Value');
                    else
                        isMatch = (listID == oldID(idxOldID));
                        if any(isMatch) %actual selection still in the pool
                            idxTraj = find(isMatch);
                        else
                            idxTraj = find(ismembc2(listID,oldID) < idxOldID,1,'last');
                            if isempty(idxTraj) %there was no trajectory before
                                idxTraj = 1;
                            end %if
                        end %if
                    end %if
                case 5
                    oldID = cellfun(@str2num,...
                        get(this.NAVI.GUI.hPopupTrajList,'String'));
                    idxOldID = get(this.NAVI.GUI.hPopupTrajList,'Value');
                    
                    if size(listID) == size(oldID) %no change in the list
                        idxTraj = get(this.NAVI.GUI.hPopupTrajList,'Value');
                    else
                        isMatch = (listID == oldID(idxOldID));
                        if any(isMatch) %actual selection still in the pool
                            idxTraj = find(isMatch);
                        else
                            idxTraj = find(ismembc2(listID,oldID) < idxOldID,1,'last');
                            if isempty(idxTraj) %there was no trajectory before
                                idxTraj = 1;
                            end %if
                        end %if
                    end %if
            end %switch
            
            %%
            if any(listID)
                set(this.NAVI.GUI.hPopupTrajList,...
                    'String',num2cell(listID),'Value',idxTraj)
            else
                set(this.NAVI.GUI.hPopupTrajList,...
                    'String','0','Value',1)
            end %if
            
            %%
            update_traj_selection(this)
        end %fun
        function update_traj_selection(this)
            idxCluster = get_traj_ID(this);
            
            if idxCluster == 0
                set(this.NAVI.GUI.hPntSelected,...
                    'xdata',[],...
                    'ydata',[])
            else
                set(this.NAVI.GUI.hPntSelected,...
                    'xdata',this.Cluster(idxCluster).x,...
                    'ydata',this.Cluster(idxCluster).y)
            end %if
            
            update_int_map_traj(this)
            update_mol_num_traj(this)
            update_stasi_traj_noise(this)
            update_step_detection(this)
        end %fun
        
        %% INTENSITY TRAJECTORY TAB
        
        %getter
        
        %setter
        
        %updating
        
        %% STATE ESTIMATION TAB
        
        %getter
        
        %setter
        
        %updating
        
        %% INTENSITY CUBE TAB
        
        %getter
        
        %setter
        function set_intmap_ax_scale(this)
            mode = get(this.BLEACHMAP.GUI.hPopupAxScale,'String');
            i = get(this.BLEACHMAP.GUI.hPopupAxScale,'Value');
            
            %only update if there is change
            if not(strcmp(this.BLEACHMAP.AxScale,mode{i}))
                this.BLEACHMAP.AxScale = mode{i};
                
                switch this.BLEACHMAP.AxScale
                    case 'Linear'
                        set(this.BLEACHMAP.GUI.hAx,'zscale','linear')
                    case 'Log.'
                        set(this.BLEACHMAP.GUI.hAx,'zscale','log')
                end %switch
            end %if
        end %fun
        function set_intmap_aspect_ratio(this,src)
            switch get(src,'Style')
                case 'slider'
                    value = 10^rnd2dec(get(src,'Value'),2);
                case 'edit'
                    value = str2double(rnd2dec(get(src,'String'),2));
            end %switch
            value = min(this.BLEACHMAP.MaxAspectRatioZ,...
                max(this.BLEACHMAP.MinAspectRatioZ,value));
            
            if this.BLEACHMAP.AspectRatioZ ~= value
                this.BLEACHMAP.AspectRatioZ = value;
                set(this.BLEACHMAP.GUI.hEditAspectRatioZ,'String',sprintf('%.2G',value))
                set(this.BLEACHMAP.GUI.hSliderAspectRatioZ,'Value',log10(value))
                
                set(this.BLEACHMAP.GUI.hAx,'DataAspectRatio',[1 1 this.BLEACHMAP.AspectRatioZ])
            end %if
        end %fun
        function set_intmap_sig_ax(this,src)
            switch get(src,'Style')
                case 'slider'
                    value = get(src,'Value');
                case 'edit'
                    value = str2double(get(src,'String'));
            end %switch
            value = min(this.BLEACHMAP.MaxSigAx,...
                max(this.BLEACHMAP.MinSigAx,round(value)));
            
            if this.BLEACHMAP.SigAx ~= value
                this.BLEACHMAP.SigAx = value;
                set(this.BLEACHMAP.GUI.hEditSigAx,'String',value)
                set(this.BLEACHMAP.GUI.hSliderSigAx,'Value',value)
                
                %                 calc_conv_kernel(this)
                %                 calc_conv_pnt_cube(this)
                update_int_map_proj(this,'xy')
            end %if
        end %fun
        function set_intmap_sig_lat(this,src)
            switch get(src,'Style')
                case 'slider'
                    value = get(src,'Value');
                case 'edit'
                    value = str2double(get(src,'String'));
            end %switch
            value = min(this.BLEACHMAP.MaxSigLat,...
                max(this.BLEACHMAP.MinSigLat,round(value)));
            
            if this.BLEACHMAP.SigLat ~= value
                this.BLEACHMAP.SigLat = value;
                set(this.BLEACHMAP.GUI.hEditSigLat,'String',value)
                set(this.BLEACHMAP.GUI.hSliderSigLat,'Value',value)
                
                %                 calc_conv_kernel(this)
                %                 calc_conv_pnt_cube(this)
                update_int_map_proj(this,'xy')
            end %if
        end %fun
        function set_intmap_show_slices(this)
            this.BLEACHMAP.ShowSlices = ...
                get(this.BLEACHMAP.GUI.hCheckShowSlices,'Value');
            
            if this.BLEACHMAP.ShowSlices
                hChild = get(this.BLEACHMAP.GUI.hRoiYzSlide,'Children');
                set(hChild([5 6 7 9 10 11 13 14 15]),'Visible','on','HitTest','on')
                hChild = get(this.BLEACHMAP.GUI.hRoiXzSlide,'Children');
                set(hChild([5 7 8 9 11 12 13 14 15]),'Visible','on','HitTest','on')
                
                set([this.BLEACHMAP.GUI.hSurfXZ,...
                    this.BLEACHMAP.GUI.hLineXZ,...
                    this.BLEACHMAP.GUI.hSurfYZ,...
                    this.BLEACHMAP.GUI.hLineYZ],...
                    'Visible','on')
            else
                hChild = get(this.BLEACHMAP.GUI.hRoiYzSlide,'Children');
                set(hChild([5 6 7 9 10 11 13 14 15]),'Visible','off','HitTest','off')
                hChild = get(this.BLEACHMAP.GUI.hRoiXzSlide,'Children');
                set(hChild([5 7 8 9 11 12 13 14 15]),'Visible','off','HitTest','off')
                
                set([this.BLEACHMAP.GUI.hSurfXZ,...
                    this.BLEACHMAP.GUI.hLineXZ,...
                    this.BLEACHMAP.GUI.hSurfYZ,...
                    this.BLEACHMAP.GUI.hLineYZ],...
                    'Visible','off')
            end %if
        end %fun
        function set_intmap_show_loc(this)
            this.BLEACHMAP.ShowLoc = ...
                get(this.BLEACHMAP.GUI.hCheckShowLoc,'Value');
            
            if this.BLEACHMAP.ShowLoc
                set(this.BLEACHMAP.GUI.hPnt,'visible','on')
            else
                set(this.BLEACHMAP.GUI.hPnt,'visible','off')
            end %if
        end %fun
        
        %updating
        
        %% MOLECULE NUMBER TAB
        
        %getter
        
        %setter
        
        %updating
        
        %% INITIAL GUESS
        
        %getter
        
        %setter
        function set_prior_mode(this)
            mode = get(this.PRIOR.GUI.hPopupMode,'String');
            i = get(this.PRIOR.GUI.hPopupMode,'Value');
            
            %only update if there is change
            if not(strcmp(this.PRIOR.Mode,mode{i}))
                this.PRIOR.Mode = mode{i};
                
                %%
                calc_prior(this)
                smooth_prior(this)
                scale_prior(this)
                
                update_single_fluoro_line(this)
                update_prior_map(this)
                
                update_int_traj(this)
                update_state_display(this)
                update_bleach_map_surface(this)
            end %if
        end %fun
        function set_prior_sample_fac(this,src)
            switch get(src,'Style')
                case 'slider'
                    value = (get(src,'Value')-1)/2;
                case 'edit'
                    value = (str2double(get(src,'String'))-1)/2;
            end %switch
            value = min(this.PRIOR.MaxSampleFac,...
                max(this.PRIOR.MinSampleFac,2*round(value)+1));
            
            if this.PRIOR.SampleFac ~= value
                this.PRIOR.SampleFac = value;
                set(this.PRIOR.GUI.hEditSampleFac,'String',value)
                set(this.PRIOR.GUI.hSliderSampleFac,'Value',value)
                
                %%
                calc_prior(this)
                smooth_prior(this)
                scale_prior(this)
                
                update_single_fluoro_line(this)
                update_prior_map(this)
                
                update_int_traj(this)
                update_state_display(this)
                update_bleach_map_surface(this)
            end %if
        end %fun
        function set_prior_amp_scale_fac(this,src)
            switch get(src,'Style')
                case 'slider'
                    value = get(src,'Value');
                case 'edit'
                    value = str2double(get(src,'String'));
            end %switch
            value = min(this.PRIOR.MaxAmpFac,max(0,value));
            value = rnd2dec(value,2);
            
            if this.PRIOR.AmpFac ~= value
                this.PRIOR.AmpFac = value;
                set(this.PRIOR.GUI.hEditAmpFac,'String',value)
                set(this.PRIOR.GUI.hSliderAmpFac,'Value',value)
                
                scale_prior(this)
                
                update_single_fluoro_line(this)
                update_prior_map(this)
                
                update_int_traj(this)
                update_state_display(this)
                update_bleach_map_surface(this)
            end %if
        end %fun
        function set_prior_smooth_fac(this,src)
            switch get(src,'Style')
                case 'slider'
                    value = 10^get(src,'Value');
                case 'edit'
                    value = str2double(get(src,'String'));
            end %switch
            value = min(this.PRIOR.MaxSmoothFac,max(this.PRIOR.MinSmoothFac,rnd2dec(value,2)));
            
            if this.PRIOR.SmoothFac ~= value
                this.PRIOR.SmoothFac = value;
                set(this.PRIOR.GUI.hEditSmoothFac,'String',value)
                set(this.PRIOR.GUI.hSliderSmoothFac,'Value',log10(value))
                
                smooth_prior(this)
                scale_prior(this)
                
                update_prior_smooth_ESF(this)
                update_prior_smooth_freq_response(this)
                
                update_single_fluoro_line(this)
                update_prior_map(this)
                
                update_int_traj(this)
                update_state_display(this)
                update_bleach_map_surface(this)
            end %if
        end %fun
        function set_prior_robust(this)
            this.PRIOR.Robust = get(this.PRIOR.GUI.hCheckRobust,'Value');
            
            smooth_prior(this)
            scale_prior(this)
            
            update_single_fluoro_line(this)
            update_prior_map(this)
            
            update_int_traj(this)
            update_state_display(this)
            update_bleach_map_surface(this)
        end %fun
        function set_prior_max_iter(this,src)
            switch get(src,'Style')
                case 'slider'
                    value = get(src,'Value');
                case 'edit'
                    value = str2double(get(src,'String'));
            end %switch
            value = min(this.PRIOR.MaxMaxIter,...
                max(this.PRIOR.MinMaxIter,round(value)));
            
            if this.PRIOR.MaxIter ~= value
                this.PRIOR.MaxIter = value;
                set(this.PRIOR.GUI.hEditMaxIter,'String',value)
                set(this.PRIOR.GUI.hSliderMaxIter,'Value',value)
                
                smooth_prior(this)
                scale_prior(this)
                
                update_single_fluoro_line(this)
                update_prior_map(this)
                
                update_int_traj(this)
                update_state_display(this)
                update_bleach_map_surface(this)
            end %if
        end %fun
        function set_prior_tol_z(this,src)
            switch get(src,'Style')
                case 'slider'
                    value = 10^rnd2dec(get(src,'Value'),2);
                case 'edit'
                    value = str2double(rnd2dec(get(src,'String'),2));
            end %switch
            value = min(this.PRIOR.MaxTolZ,...
                max(this.PRIOR.MinTolZ,value));
            
            if this.PRIOR.TolZ ~= value
                this.PRIOR.TolZ = value;
                set(this.PRIOR.GUI.hEditTolZ,'String',sprintf('%.2G',value))
                set(this.PRIOR.GUI.hSliderTolZ,'Value',log10(value))
                
                smooth_prior(this)
                scale_prior(this)
                
                update_single_fluoro_line(this)
                update_prior_map(this)
                
                update_int_traj(this)
                update_state_display(this)
                update_bleach_map_surface(this)
            end %if
        end %fun
        
        %updating
        function update_prior_map(this)
            if isempty(this.Cluster)
                return
            end %if
            
            cval = linspace(min(this.PRIOR.C(:)),max(this.PRIOR.C(:)),15);
            [~,i] = histc(this.PRIOR.C,cval);
            set(this.PRIOR.GUI.hImg,...
                'xdata',this.INTMAP.ctrs{2},...
                'ydata',this.INTMAP.ctrs{1},...
                'cdata',cval(i))
            title(this.PRIOR.GUI.hAx,sprintf(...
                '\\mu (\\pm\\sigma) = %.0f (%.0f)',...
                mean(this.PRIOR.C(:)),std(this.PRIOR.C(:))))
        end %fun
        function update_prior_smooth_ESF(this)
            if isempty(this.Cluster)
                return
            end %if
            
            r = [ones(1,51),zeros(1,51)];
            y = smoothn(r,this.PRIOR.SmoothFac);
            
            set(this.PRIOR.GUI.hLineEdge,...
                'xdata',-50.5:50.5,...
                'ydata',r)
            
            set(this.PRIOR.GUI.hLineEdgeSmooth,...
                'xdata',-50.5:50.5,...
                'ydata',y)
            
            axis(this.PRIOR.GUI.hAxSmoothPSF,'tight')
        end %fun
        function update_prior_smooth_freq_response(this)
            if isempty(this.Cluster)
                return
            end %if
            
            lambda = linspace(0.1,1,100)*(this.FOV(4)-this.FOV(3)); %[px]
            f = 1./lambda;
            
            T = max(lambda); %[px]
            x = colvec(0:1:3*T-1);
            y = -transpose(cos(bsxfun(@times,2*pi*x*ones(1,numel(f)),f)));
            y = [fliplr(y), y(:,2:end)];
            
            take = (-floor(0.5*T):ceil(0.5*T))+3*T;
            
            for i = numel(f):-1:1
                ys(i,:) = smoothn(y(i,:),this.PRIOR.SmoothFac);
            end
            
            %%
            set(this.PRIOR.GUI.hImgSmoothFreqPass,...
                'xdata',lambda/(this.FOV(4)-this.FOV(3))*100,...
                'ydata',linspace(0,100,2*numel(x)-1),...
                'Cdata',transpose(y(:,take)-ys(:,take)))
            
            set(this.PRIOR.GUI.hLineSmoothFreqPass,...
                'xdata',lambda/(this.FOV(4)-this.FOV(3))*100,...
                'ydata',100*(1+ys(:,3*T)))
            
            set(this.PRIOR.GUI.hAxSmoothFreqPass,...
                'ytick',0:25:100)
            caxis(this.PRIOR.GUI.hAxSmoothFreqPass,[-1 1])
            
            %%
            set(this.PRIOR.GUI.hImgSmoothFreqFilt,...
                'xdata',lambda/(this.FOV(4)-this.FOV(3))*100,...
                'ydata',linspace(0,100,2*numel(x)-1),...
                'Cdata',transpose(ys(:,take)))
            
            set(this.PRIOR.GUI.hLineSmoothFreqFilt,...
                'xdata',lambda/(this.FOV(4)-this.FOV(3))*100,...
                'ydata',-100*ys(:,3*T))
            
            set(this.PRIOR.GUI.hAxSmoothFreqFilt,...
                'ytick',0:25:100)
            caxis(this.PRIOR.GUI.hAxSmoothFreqFilt,[-1 1])
            
            %%
            axis(this.PRIOR.GUI.hAxSmoothFreqFilt,[10,100,0,100])
        end %fun
        
        % various
        function calc_spat_grid(this)
            if isempty(this.Cluster)
                return
            end %if
            
            x = vertcat(this.Cluster.x);
            y = vertcat(this.Cluster.y);
            z = vertcat(this.Cluster.A);
            
            this.INTMAP.num(2) = this.FOV(2)-this.FOV(1);
            this.INTMAP.num(1) = this.FOV(4)-this.FOV(3);
            
            dz = 2*iqr(log10(z))/nthroot(numel(z),3);
            this.INTMAP.num(3) = ceil(log(range(z))/dz);
            
            [this.INTMAP.idx,this.INTMAP.period,this.INTMAP.pntsIn,...
                this.INTMAP.edges,this.INTMAP.ctrs,this.INTMAP.n] = PNT_grid_idx([y,x,z],...
                this.INTMAP.num,{this.FOV(3:4),this.FOV(1:2),this.FOV(5:6)});
            
            this.INTMAP.N = (accumarray(this.INTMAP.idx,1,this.INTMAP.num));
        end %fun
        function calc_prior(this)
            if isempty(this.Cluster)
                return
            end %if
            
            set_bar_text(this,'Calculating local statistics...')
            set_bar_percentage(this,0)
            
            A = vertcat(this.Cluster.A);
            
            r = (this.PRIOR.SampleFac-1)/2;
            SE = strel('disk',r,0);
            
            set_bar_percentage(this,0.33)
            
            switch this.PRIOR.Mode
                case 'Min.'
                    this.PRIOR.A = accumarray(this.INTMAP.idx(:,1:2),A,this.INTMAP.num(1:2),@min,inf);
                    
                    set_bar_percentage(this,0.66)
                    
                    this.PRIOR.A = imopen(this.PRIOR.A,SE);
                    
                    this.PRIOR.A(isinf(this.PRIOR.A)) = nan;
                case 'Mean'
                    [Y,X] = ndgrid(-r:r);
                    
                    y = bsxfun(@plus,this.INTMAP.idx(:,1),rowvec(Y(SE.Neighborhood)));
                    x = bsxfun(@plus,this.INTMAP.idx(:,2),rowvec(X(SE.Neighborhood)));
                    z = repmat(A,[1,sum(sum(SE.Neighborhood))]);
                    take = x > this.FOV(1) & x < this.FOV(2) & y > this.FOV(3) & y < this.FOV(4);
                    
                    molSumInt = accumarray([y(take)-this.FOV(3) x(take)-this.FOV(1)],z(take),this.INTMAP.num(1:2));
                    
                    set_bar_percentage(this,0.66)
                    
                    molNum = accumarray([y(take)-this.FOV(3) x(take)-this.FOV(1)],1,this.INTMAP.num(1:2));
                    
                    this.PRIOR.A = molSumInt./molNum;
            end %switch
            
            set_bar_text(this,'')
            set_bar_percentage(this,0)
        end %fun
        function smooth_prior(this)
            if isempty(this.Cluster)
                return
            end %if
            
            set_bar_text(this,'Smoothing & Interpolation...')
            set_bar_percentage(this,0)
            
            if this.PRIOR.Robust
                [this.PRIOR.B,this.PRIOR.SmoothFac,isOK] = smoothn(...
                    this.PRIOR.A,this.PRIOR.SmoothFac,'robust',...
                    'MaxIter',this.PRIOR.MaxIter,...
                    'TolZ',this.PRIOR.TolZ);
            else
                [this.PRIOR.B,this.PRIOR.SmoothFac,isOK] = smoothn(...
                    this.PRIOR.A,this.PRIOR.SmoothFac,...
                    'MaxIter',this.PRIOR.MaxIter,...
                    'TolZ',this.PRIOR.TolZ);
            end %if
            
            set_bar_text(this,'')
        end %fun
        function scale_prior(this)
            if isempty(this.Cluster)
                return
            end %if
            
            this.PRIOR.C = this.PRIOR.B*this.PRIOR.AmpFac;
        end %fun
        
        %% STEP DETECTION (STaSI)
        
        % getter
        function noise = get_stasi_traj_noise(this)
            idxCluster = get_traj_ID(this);
            noise = this.STASI.NoiseFac*this.Cluster(idxCluster).Noise(1);
        end %fun
        
        % setter
        function set_stasi_max_lvl(this,src)
            switch get(src,'Style')
                case 'slider'
                    value = get(src,'Value');
                case 'edit'
                    value = str2double(get(src,'String'));
            end %switch
            value = min(100,max(2,round(value)));
            
            if this.STASI.MaxLvl ~= value
                this.STASI.MaxLvl = value;
                set(this.STASI.hEditMaxLvl,'String',value)
                set(this.STASI.hSliderMaxLvl,'Value',value)
                
                update_int_traj(this)
                update_state_display(this)
            end %if
        end %fun
        function set_min_peak_length(this,src)
            switch get(src,'Style')
                case 'slider'
                    value = round(get(src,'Value'));
                case 'edit'
                    value = round(str2double(get(src,'String')));
            end %switch
            value = min(this.STASI.MaxLength,max(0,value));
            
            if this.STASI.MinPeakLength ~= value
                this.STASI.MinPeakLength = value;
                set(this.STASI.hEditMinPeakLength,'String',value)
                set(this.STASI.hSliderMinPeakLength,'Value',value)
                
                update_int_traj(this)
                update_state_display(this)
            end %if
        end %fun
        function set_min_transit_length(this,src)
            switch get(src,'Style')
                case 'slider'
                    value = round(get(src,'Value'));
                case 'edit'
                    value = round(str2double(get(src,'String')));
            end %switch
            value = min(this.STASI.MaxLength,max(0,value));
            
            if this.STASI.MinTransitLength ~= value
                this.STASI.MinTransitLength = value;
                set(this.STASI.hEditMinTransitLength,'String',value)
                set(this.STASI.hSliderMinTransitLength,'Value',value)
                
                update_int_traj(this)
                update_state_display(this)
            end %if
        end %fun
        function set_stasi_noise_fac(this,src)
            switch get(src,'Style')
                case 'slider'
                    value = get(src,'Value');
                case 'edit'
                    value = str2double(get(src,'String'));
            end %switch
            value = min(this.STASI.MaxLength,max(0,rnd2dec(value,2)));
            
            if this.STASI.NoiseFac ~= value
                this.STASI.NoiseFac = value;
                set(this.STASI.hEditNoiseFac,'String',value)
                set(this.STASI.hSliderNoiseFac,'Value',value)
                
                update_stasi_traj_noise(this)
                update_int_traj(this)
                update_state_display(this)
            end %if
        end %fun
        function set_stasi_decay_only(this)
            this.STASI.UseDecayOnly = get(this.STASI.GUI.hCheckUseDecayOnly,'Value');
            
            %
            update_int_traj(this)
            update_state_display(this)
        end %fun
        
        function select_state_display_mode(this,evnt)
            this.STASI.StateDispMode = get(evnt.NewValue,'String');
            update_state_display(this)
        end %fun
        
        % updating
        function update_stasi_traj_noise(this)
            if isempty(this.Cluster)
                return
            end %if
            
            idxCluster = get_traj_ID(this);
            
            if idxCluster == 0
                set([this.STASI.GUI.hPntNoise,...
                    this.STASI.GUI.hLineNoiseLvl],...
                    'xdata',[],...
                    'ydata',[])
                
                title(this.STASI.GUI.hAxNoise,'Noise Amplitude =')
            else
                set(this.STASI.GUI.hPntNoise,...
                    'xdata',this.Cluster(idxCluster).NoiseDt,...
                    'ydata',this.Cluster(idxCluster).Noise)
                
                set(this.STASI.GUI.hLineNoiseLvl,...
                    'xdata',[min(this.Cluster(idxCluster).NoiseDt) max(this.Cluster(idxCluster).NoiseDt)],...
                    'ydata',[1 1]*this.STASI.NoiseFac*this.Cluster(idxCluster).Noise(1))
                
                title(this.STASI.GUI.hAxNoise,...
                    sprintf('Noise Amplitude = %.2f',...
                    this.STASI.NoiseFac*this.Cluster(idxCluster).Noise(1)))
            end %if
            
            axis(this.STASI.GUI.hAxNoise,'tight')
        end %fun
        
        % various
        function lock_and_analyse_all(this)
            if get(this.STASI.hToggleLockParam,'Value') %STASI settings locked
                set_bar_text(this,'Step detection...')
                set_bar_percentage(this,0)
                
                %deactivate slider etc.
                set([...
                    this.PRIOR.GUI.hPopupMode,...
                    this.PRIOR.GUI.hSliderSampleFac,...
                    this.PRIOR.GUI.hEditSampleFac,...
                    this.PRIOR.GUI.hSliderAmpFac,...
                    this.PRIOR.GUI.hEditAmpFac,...
                    this.PRIOR.GUI.hSliderSmoothFac,...
                    this.PRIOR.GUI.hEditSmoothFac,...
                    this.PRIOR.GUI.hCheckRobustInterp,...
                    this.PRIOR.GUI.hSliderMaxIter,...
                    this.PRIOR.GUI.hEditMaxIter,...
                    this.PRIOR.GUI.hSliderTolZ,...
                    this.PRIOR.GUI.hEditTolZ,...
                    this.STASI.hSliderMaxLvl,...
                    this.STASI.hEditMaxLvl,...
                    this.STASI.hSliderMinPeakLength,...
                    this.STASI.hEditMinPeakLength,...
                    this.STASI.hSliderMinTransitLength,...
                    this.STASI.hEditMinTransitLength,...
                    this.STASI.hSliderNoiseFac,...
                    this.STASI.hEditNoiseFac,...
                    this.STASI.GUI.hCheckUseDecayOnly,...
                    ],'Enable','off')
                
                set([...
                    this.NAVI.GUI.hPushAcceptAll,...
                    this.NAVI.GUI.hPushDiscardAll,...
                    this.NAVI.GUI.hPushAcceptROI,...
                    this.NAVI.GUI.hPushDiscardROI,...
                    this.NAVI.GUI.hPushAcceptID,...
                    this.NAVI.GUI.hPushDiscardID,...
                    this.NAVI.GUI.hPopupMode,...
                    this.MODEL.GUI.hPopupMode,...
                    this.MODEL.hPushExportResults,...
                    ],'Enable','on')
                
                switch this.MODEL.Mode
                    case 'Interpolation'
                        set([...
                            this.MODEL.GUI.hSliderSmoothFac,...
                            this.MODEL.GUI.hEditSmoothFac,...
                            this.MODEL.GUI.hCheckRobustInterp,...
                            this.MODEL.GUI.hSliderMaxIter,...
                            this.MODEL.GUI.hEditMaxIter,...
                            this.MODEL.GUI.hSliderTolZ,...
                            this.MODEL.GUI.hEditTolZ,...
                            ],'Enable','on')
                        
                        set([...
                            this.MODEL.GUI.hPopupFitMode,...
                            this.MODEL.GUI.hCheckGaussGlobalSearch,...
                            this.MODEL.GUI.hSliderGaussNumTrial,...
                            this.MODEL.GUI.hEditGaussNumTrial,...
                            this.MODEL.GUI.hSliderGaussTolFun,...
                            this.MODEL.GUI.hEditGaussTolFun,...
                            this.MODEL.GUI.hCheckPolyRobust,...
                            this.MODEL.GUI.hCheckPolyScale,...
                            ],'Enable','off')
                    case 'Fitting'
                        set([...
                            this.MODEL.GUI.hSliderSmoothFac,...
                            this.MODEL.GUI.hEditSmoothFac,...
                            this.MODEL.GUI.hCheckRobustInterp,...
                            this.MODEL.GUI.hSliderMaxIter,...
                            this.MODEL.GUI.hEditMaxIter,...
                            this.MODEL.GUI.hSliderTolZ,...
                            this.MODEL.GUI.hEditTolZ,...
                            ],'Enable','off')
                        
                        set([...
                            this.MODEL.GUI.hPopupFitMode,...
                            this.MODEL.GUI.hCheckGaussGlobalSearch,...
                            this.MODEL.GUI.hSliderGaussNumTrial,...
                            this.MODEL.GUI.hEditGaussNumTrial,...
                            this.MODEL.GUI.hSliderGaussTolFun,...
                            this.MODEL.GUI.hEditGaussTolFun,...
                            this.MODEL.GUI.hCheckPolyRobust,...
                            this.MODEL.GUI.hCheckPolyScale,...
                            ],'Enable','on')
                end
                
                %%
                for idxCluster = 1:this.NumCluster
                    analyse_traj(this,idxCluster)
                    
                    set_bar_percentage(this,idxCluster/this.NumCluster)
                end %for
                
                set_bar_text(this,'')
                set_bar_percentage(this,0)
                
                %%
                update_fiducial_map(this)
                update_model(this)
                
                set_navi_mode(this,2)
                
            else %STASI settings not locked -> STASI parameter optimization phase
                set([...
                    this.PRIOR.GUI.hPopupMode,...
                    this.PRIOR.GUI.hSliderSampleFac,...
                    this.PRIOR.GUI.hEditSampleFac,...
                    this.PRIOR.GUI.hSliderAmpFac,...
                    this.PRIOR.GUI.hEditAmpFac,...
                    this.PRIOR.GUI.hSliderSmoothFac,...
                    this.PRIOR.GUI.hEditSmoothFac,...
                    this.PRIOR.GUI.hCheckRobustInterp,...
                    this.PRIOR.GUI.hSliderMaxIter,...
                    this.PRIOR.GUI.hEditMaxIter,...
                    this.PRIOR.GUI.hSliderTolZ,...
                    this.PRIOR.GUI.hEditTolZ,...
                    this.STASI.hSliderMaxLvl,...
                    this.STASI.hEditMaxLvl,...
                    this.STASI.hSliderMinPeakLength,...
                    this.STASI.hEditMinPeakLength,...
                    this.STASI.hSliderMinTransitLength,...
                    this.STASI.hEditMinTransitLength,...
                    this.STASI.hSliderNoiseFac,...
                    this.STASI.hEditNoiseFac,...
                    this.STASI.GUI.hCheckUseDecayOnly,...
                    ],'Enable','on')
                
                set([...
                    this.NAVI.GUI.hPushAcceptAll,...
                    this.NAVI.GUI.hPushDiscardAll,...
                    this.NAVI.GUI.hPushAcceptROI,...
                    this.NAVI.GUI.hPushDiscardROI,...
                    this.NAVI.GUI.hPushAcceptID,...
                    this.NAVI.GUI.hPushDiscardID,...
                    this.NAVI.GUI.hPopupMode,...
                    this.MODEL.GUI.hPopupMode,...
                    this.MODEL.GUI.hSliderSmoothFac,...
                    this.MODEL.GUI.hEditSmoothFac,...
                    this.MODEL.GUI.hCheckRobustInterp,...
                    this.MODEL.GUI.hSliderMaxIter,...
                    this.MODEL.GUI.hEditMaxIter,...
                    this.MODEL.GUI.hSliderTolZ,...
                    this.MODEL.GUI.hEditTolZ,...
                    this.MODEL.GUI.hPopupFitMode,...
                    this.MODEL.GUI.hCheckGaussGlobalSearch,...
                    this.MODEL.GUI.hSliderGaussNumTrial,...
                    this.MODEL.GUI.hEditGaussNumTrial,...
                    this.MODEL.GUI.hSliderGaussTolFun,...
                    this.MODEL.GUI.hEditGaussTolFun,...
                    this.MODEL.GUI.hCheckPolyRobust,...
                    this.MODEL.GUI.hCheckPolyScale,...
                    this.MODEL.hPushExportResults,...
                    ],'Enable','off')
                
                set([this.NAVI.GUI.hPntAccepted,...
                    this.NAVI.GUI.hPntDiscarded,...
                    this.MODEL.GUI.hPntRelErrGood,...
                    this.MODEL.GUI.hPntRelErrMedium,...
                    this.MODEL.GUI.hPntRelErrBad,...
                    this.MOLNUM.GUI.hBarEstMolNum,...
                    this.MOLNUM.GUI.hAreaMolNum],...
                    'xdata',[],...
                    'ydata',[])
                
                set([this.BLEACHMAP.GUI.hPntRelErrGood,...
                    this.BLEACHMAP.GUI.hLineRelErrGood,...
                    this.BLEACHMAP.GUI.hPntRelErrMedium,...
                    this.BLEACHMAP.GUI.hLineRelErrMedium,...
                    this.BLEACHMAP.GUI.hPntRelErrBad,...
                    this.BLEACHMAP.GUI.hLineRelErrBad,...
                    this.MOLNUM.GUI.Pnt3D.hPntDimer,...
                    this.MOLNUM.GUI.Pnt3D.hPntTrimer,...
                    this.MOLNUM.GUI.Pnt3D.hPntOligomer,...
                    this.MOLNUM.GUI.hPntMonomer,...
                    this.MOLNUM.GUI.hPntDimer,...
                    this.MOLNUM.GUI.hPntTrimer,...
                    this.MOLNUM.GUI.hPntOligomer],...
                    'xdata',[],...
                    'ydata',[],...
                    'zdata',[])
                
                set([this.FIDUCIAL.GUI.hImg,...
                    this.MODEL.GUI.hImg],...
                    'xdata',[],...
                    'ydata',[],...
                    'cdata',[])
                
                set(this.NAVI.GUI.hPopupTrajList,...
                    'String',num2cell(this.LinID),...
                    'Value',1)
                set_navi_mode(this,1)
                
                update_bleach_map_surface(this)
            end %switch
        end %fun
        function analyse_traj(this,idxCluster)
            STaSI_change_pnt_detection(this,idxCluster)
            STaSI_state_clustering(this,idxCluster)
            STaSI_cleanup(this,idxCluster)
            
            %%
            this.Cluster(idxCluster).Ahat = colvec(this.Cluster(idxCluster).Ahat);
            this.Cluster(idxCluster).dLvl = -abs(diff(this.Cluster(idxCluster).Ahat));
            this.Cluster(idxCluster).tLvl = this.Cluster(idxCluster).t(1:end-1)+...
                (this.Cluster(idxCluster).t(2:end)-this.Cluster(idxCluster).t(1:end-1))/2;
            
            take = (this.Cluster(idxCluster).dLvl ~= 0);
            this.Cluster(idxCluster).Lvl = this.Cluster(idxCluster).dLvl(take);
            this.Cluster(idxCluster).iLvl = this.Cluster(idxCluster).tLvl(take);
            this.Cluster(idxCluster).NumLvl = size(this.Cluster(idxCluster).Lvl,1);
            this.Cluster(idxCluster).hasLvl = not(this.Cluster(idxCluster).NumLvl == 0);
            this.Cluster(idxCluster).useLvl = true(this.Cluster(idxCluster).NumLvl,1);
            
            this.Cluster(idxCluster).xLvl = this.Cluster(idxCluster).x(1:end-1)+...
                (this.Cluster(idxCluster).x(2:end)-this.Cluster(idxCluster).x(1:end-1))/2;
            this.Cluster(idxCluster).xLvl = this.Cluster(idxCluster).xLvl(take);
            this.Cluster(idxCluster).yLvl = this.Cluster(idxCluster).y(1:end-1)+...
                (this.Cluster(idxCluster).y(2:end)-this.Cluster(idxCluster).y(1:end-1))/2;
            this.Cluster(idxCluster).yLvl = this.Cluster(idxCluster).yLvl(take);
        end %fun
        function STaSI_change_pnt_detection(this,idxCluster)
            A = this.Cluster(idxCluster).A;
            noise = get_stasi_traj_noise(this);
            
            %%
            points = BleachCounter.recursion1(A,noise,[],0);% recursively detect all the change points
            this.Cluster(idxCluster).IdxChangePnt = sort(points);
        end %fun
        function STaSI_state_clustering(this,idxCluster)
            if numel(idxCluster) == 1
                X = this.Cluster(idxCluster).A;
                points = this.Cluster(idxCluster).IdxChangePnt;
                breaks = this.Cluster(idxCluster).NumPnt;
                groups = [1, points+1; points, breaks];
                
                noise = this.STASI.NoiseFac*this.Cluster(idxCluster).Noise(1);
            else
                X = [];
                breaks = [];
                groups = [];
                for i = 1:numel(idxCluster)
                    T1 = this.Cluster(idxCluster(i)).NumPnt+1;
                    points = this.Cluster(idxCluster(i)).IdxChangePnt;
                    X = [X, this.Cluster(idxCluster(i)).A]; % group traces together
                    T2 = numel(X);
                    breaks(end+1) = T2;
                    groups = cat(2,groups,[T1, points+T1; points+T1-1, T2]);
                end
            end %if
            [G, Ij, Tj] = clustering_GCP(X, groups);
            G = G(end:-1:1);% flip the G
            
            %%
            this.Cluster(idxCluster).PotAmpTraj = [];
            this.Cluster(idxCluster).MDL = [];
            
            for i = min(this.STASI.MaxLvl,numel(G)):-1:1
                [this.Cluster(idxCluster).MDL(i),...
                    this.Cluster(idxCluster).PotAmpTraj(i,:)] = ...
                    MDL_piecewise(Ij, Tj, G(i), X, groups, noise, breaks);
            end
        end %fun
        function STaSI_cleanup(this,idxCluster)
            x = this.Cluster(idxCluster).x;
            y = this.Cluster(idxCluster).y;
            
            intExp = interp2(...
                this.INTMAP.ctrs{2},this.INTMAP.ctrs{1},this.PRIOR.C,x,y);
            intThresh = rowvec(2*intExp(1:end-1)-intExp(2:end));
            
            %%
            [this.Cluster(idxCluster).HasShortPeak,...
                this.Cluster(idxCluster).HasShortTransit,...
                this.Cluster(idxCluster).HasSmallStep,...
                this.Cluster(idxCluster).HasStepUp] = deal(false);
            for i = numel(this.Cluster(idxCluster).MDL):-1:2
                dI = diff(this.Cluster(idxCluster).PotAmpTraj(i,:));
                idxNZ = find(dI);
                sizeNZ = diff(idxNZ);
                
                %%
                idxPeak = idxNZ(abs(diff(sign(dI(idxNZ)))) == 2);
                isPeak = find(ismembc(idxNZ,idxPeak));
                sizePeak = sizeNZ(isPeak);
                
                this.Cluster(idxCluster).HasShortPeak(i) = any(sizePeak < this.STASI.MinPeakLength);
                
                %%
                idxTransit = idxNZ(abs(sign(dI(idxNZ(1:end-1))) + sign(dI(idxNZ(2:end)))) == 2);
                isTransit = find(ismembc(idxNZ,idxTransit));
                sizeTransit = sizeNZ(isTransit);
                
                this.Cluster(idxCluster).HasShortTransit(i) = any(sizeTransit < this.STASI.MinTransitLength);
                
                %%
                this.Cluster(idxCluster).HasSmallStep(i) = any(abs(dI(idxNZ)) < intThresh(idxNZ));
                this.Cluster(idxCluster).HasStepUp(i) = any(dI > 0);
            end
            
            if this.STASI.UseDecayOnly
            else
                this.Cluster(idxCluster).HasStepUp(:) = false;
            end %if
            
            this.Cluster(idxCluster).TakeMDL = ...%always take the simple one-state average
                find(not(this.Cluster(idxCluster).HasShortPeak | this.Cluster(idxCluster).HasShortTransit | this.Cluster(idxCluster).HasSmallStep | this.Cluster(idxCluster).HasStepUp));
            
            %%
            MDL = this.Cluster(idxCluster).MDL(this.Cluster(idxCluster).TakeMDL);
            [~,idxMinMDL] = min(MDL);
            this.Cluster(idxCluster).NumStateLvl = this.Cluster(idxCluster).TakeMDL(idxMinMDL);
            this.Cluster(idxCluster).MDL = ...
                this.Cluster(idxCluster).MDL/this.Cluster(idxCluster).MDL(...
                this.Cluster(idxCluster).NumStateLvl);
            this.Cluster(idxCluster).Ahat = ...
                this.Cluster(idxCluster).PotAmpTraj(this.Cluster(idxCluster).NumStateLvl,:);
        end %fun
        
        %% MODELING
        
        % getter
        function id = get_model_idx(this)
            i = get(this.MODEL.GUI.hPopupMode,'Value');
            if i == 1
                id = 1;
            else
                id = 1 + get(this.MODEL.GUI.hPopupFitMode,'Value');
            end %if
        end %fun
        function N = get_num_sample_pnts(this)
            N = sum(vertcat(this.Cluster.useLvl));
        end %fun
        function N = get_model_min_sample_pnts(this)
            i = get_model_idx(this);
            N = this.MODEL.Type(i).MinNumSample;
        end %fun
        function isOK = has_sufficient_sample(this)
            isOK = ...
                get_num_sample_pnts(this) >= ...
                get_model_min_sample_pnts(this);
        end %fun
        
        % setter
        function set_modeling_mode(this)
            mode = get(this.MODEL.GUI.hPopupMode,'String');
            i = get(this.MODEL.GUI.hPopupMode,'Value');
            
            %only update if there is change
            if not(strcmp(this.MODEL.Mode,mode{i}))
                this.MODEL.Mode = mode{i};
                
                switch this.MODEL.Mode
                    case 'Interpolation'
                        set([...
                            this.MODEL.GUI.hSliderSmoothFac,...
                            this.MODEL.GUI.hEditSmoothFac,...
                            this.MODEL.GUI.hCheckRobustInterp,...
                            this.MODEL.GUI.hSliderMaxIter,...
                            this.MODEL.GUI.hEditMaxIter,...
                            this.MODEL.GUI.hSliderTolZ,...
                            this.MODEL.GUI.hEditTolZ,...
                            ],'Enable','on')
                        
                        set([...
                            this.MODEL.GUI.hPopupFitMode,...
                            this.MODEL.GUI.hCheckGaussGlobalSearch,...
                            this.MODEL.GUI.hSliderGaussNumTrial,...
                            this.MODEL.GUI.hEditGaussNumTrial,...
                            this.MODEL.GUI.hSliderGaussTolFun,...
                            this.MODEL.GUI.hEditGaussTolFun,...
                            this.MODEL.GUI.hCheckPolyRobust,...
                            this.MODEL.GUI.hCheckPolyScale,...
                            ],'Enable','off')
                    case 'Fitting'
                        set([...
                            this.MODEL.GUI.hSliderSmoothFac,...
                            this.MODEL.GUI.hEditSmoothFac,...
                            this.MODEL.GUI.hCheckRobustInterp,...
                            this.MODEL.GUI.hSliderMaxIter,...
                            this.MODEL.GUI.hEditMaxIter,...
                            this.MODEL.GUI.hSliderTolZ,...
                            this.MODEL.GUI.hEditTolZ,...
                            ],'Enable','off')
                        
                        set([...
                            this.MODEL.GUI.hPopupFitMode,...
                            this.MODEL.GUI.hCheckGaussGlobalSearch,...
                            this.MODEL.GUI.hSliderGaussNumTrial,...
                            this.MODEL.GUI.hEditGaussNumTrial,...
                            this.MODEL.GUI.hSliderGaussTolFun,...
                            this.MODEL.GUI.hEditGaussTolFun,...
                            this.MODEL.GUI.hCheckPolyRobust,...
                            this.MODEL.GUI.hCheckPolyScale,...
                            ],'Enable','on')
                end
                update_model(this)
            end %if
        end %fun
        
        function update_model(this)
            model_bleach_map(this)
            
            %%
            update_model_map(this)
            
            update_single_fluoro_line(this)
            
            update_bleach_map_surface(this)
            
            update_mol_num_map(this)
        end %fun
        function update_model_map(this)
            if isempty(this.Cluster)
                return
            end %if
            
            if get(this.STASI.hToggleLockParam,'Value') %STASI settings locked
                idxModel = get_model_idx(this);
                
                if has_sufficient_sample(this)
                    cval = linspace(min(this.MODEL.Map(:)),max(this.MODEL.Map(:)),15);
                    [~,i] = histc(this.MODEL.Map,cval);
                    
                    set(this.MODEL.GUI.hImg,...
                        'xdata',this.INTMAP.ctrs{2},...
                        'ydata',this.INTMAP.ctrs{1},...
                        'cdata',cval(i))
                    caxis(this.MODEL.GUI.hAx,...
                        nanquantile(this.MODEL.Map(:),[0.01 0.99])+[-1e-12 1e-12])
                    
                    %% residuals
                    xLvl = vertcat(this.Cluster.xLvl);
                    yLvl = vertcat(this.Cluster.yLvl);
                    take = find(vertcat(this.Cluster.useLvl));
                    
                    %%
                    isGood = (this.MODEL.Type(idxModel).GoF.RelErr <= 0.1);
                    set(this.MODEL.GUI.hPntRelErrGood,...
                        'xdata',xLvl(take(isGood)),...
                        'ydata',yLvl(take(isGood)))
                    
                    %%
                    isGood = (this.MODEL.Type(idxModel).GoF.RelErr > 0.1 &...
                        this.MODEL.Type(idxModel).GoF.RelErr <= 0.25);
                    set(this.MODEL.GUI.hPntRelErrMedium,...
                        'xdata',xLvl(take(isGood)),...
                        'ydata',yLvl(take(isGood)))
                    
                    %%
                    isGood = (this.MODEL.Type(idxModel).GoF.RelErr > 0.25);
                    set(this.MODEL.GUI.hPntRelErrBad,...
                        'xdata',xLvl(take(isGood)),...
                        'ydata',yLvl(take(isGood)))
                else
                    set(this.MODEL.GUI.hImg,...
                        'xdata',[],...
                        'ydata',[],...
                        'cdata',[])
                    
                    set([this.MODEL.GUI.hPntRelErrGood,...
                        this.MODEL.GUI.hPntRelErrMedium,...
                        this.MODEL.GUI.hPntRelErrBad],...
                        'xdata',[],...
                        'ydata',[])
                    
                    UI = generate_information_dialog(...
                        'Estimation not possible.',...
                        {sprintf('Minimum of %d samples requiered.',...
                        this.MODEL.Type(idxModel).MinNumSample)},...
                        'PauseQueue', false);
                    pause(0.5)
                    close(UI.hFig)
                end %if
            end %if
        end %fun
        
        function update_model_smooth_ESF(this)
            if isempty(this.Cluster)
                return
            end %if
            
            r = [ones(1,51),zeros(1,51)];
            y = smoothn(r,this.MODEL.Type(1).Option.SmoothFac);
            
            set(this.MODEL.GUI.hLineEdge,...
                'xdata',-50.5:50.5,...
                'ydata',r)
            
            set(this.MODEL.GUI.hLineEdgeSmooth,...
                'xdata',-50.5:50.5,...
                'ydata',y)
            
            axis(this.MODEL.GUI.hAxSmoothPSF,'tight')
        end %fun
        function update_model_smooth_freq_response(this)
            if isempty(this.Cluster)
                return
            end %if
            
            lambda = linspace(0.1,1,100)*(this.FOV(4)-this.FOV(3));
            f = 1./lambda;
            
            T = max(lambda); %[px]
            x = colvec(0:1:3*T-1);
            y = -transpose(cos(bsxfun(@times,2*pi*x*ones(1,numel(f)),f)));
            y = [fliplr(y), y(:,2:end)];
            
            take = (-floor(0.5*T):ceil(0.5*T))+3*T;
            
            for i = numel(f):-1:1
                ys(i,:) = smoothn(y(i,:),this.MODEL.Type(1).Option.SmoothFac);
            end
            
            %             set(this.PRIOR.GUI.hImgSmoothFreq,...
            %                 'ydata',lambda,...
            %                 'Cdata',y(:,take))
            
            %%
            set(this.MODEL.GUI.hImgSmoothFreqPass,...
                'xdata',lambda/(this.FOV(4)-this.FOV(3))*100,...
                'ydata',linspace(0,100,2*numel(x)-1),...
                'Cdata',transpose(y(:,take)-ys(:,take)))
            
            set(this.MODEL.GUI.hLineSmoothFreqPass,...
                'xdata',lambda/(this.FOV(4)-this.FOV(3))*100,...
                'ydata',100*(1+ys(:,3*T)))
            
            set(this.MODEL.GUI.hAxSmoothFreqPass,...
                'ytick',0:25:100)
            caxis(this.MODEL.GUI.hAxSmoothFreqPass,[-1 1])
            
            %%
            set(this.MODEL.GUI.hImgSmoothFreqFilt,...
                'xdata',lambda/(this.FOV(4)-this.FOV(3))*100,...
                'ydata',linspace(0,100,2*numel(x)-1),...
                'Cdata',transpose(ys(:,take)))
            
            set(this.MODEL.GUI.hLineSmoothFreqFilt,...
                'xdata',lambda/(this.FOV(4)-this.FOV(3))*100,...
                'ydata',-100*ys(:,3*T))
            
            set(this.MODEL.GUI.hAxSmoothFreqFilt,...
                'ytick',0:25:100)
            caxis(this.MODEL.GUI.hAxSmoothFreqFilt,[-1 1])
            
            %%
            axis(this.MODEL.GUI.hAxSmoothFreqFilt,[10,100,0,100])
        end %fun
        
        %% INTERPOLATION
        function set_interp_smooth_fac(this,src)
            switch get(src,'Style')
                case 'slider'
                    value = 10^get(src,'Value');
                case 'edit'
                    value = str2double(get(src,'String'));
            end %switch
            value = min(this.MODEL.Type(1).Option.MaxSmoothFac,...
                max(this.MODEL.Type(1).Option.MinSmoothFac,rnd2dec(value,2)));
            
            if this.MODEL.Type(1).Option.SmoothFac ~= value
                this.MODEL.Type(1).Option.SmoothFac = value;
                set(this.MODEL.GUI.hEditSmoothFac,'String',value)
                set(this.MODEL.GUI.hSliderSmoothFac,'Value',log10(value))
                
                update_model_smooth_ESF(this)
                update_model_smooth_freq_response(this)
                update_model(this)
            end %if
        end %fun
        function set_interp_robust(this)
            this.MODEL.Type(1).Option.Robust = ...
                get(this.MODEL.GUI.hCheckRobustInterp,'Value');
            
            update_model(this)
        end %fun
        function set_interp_max_iter(this,src)
            switch get(src,'Style')
                case 'slider'
                    value = get(src,'Value');
                case 'edit'
                    value = str2double(get(src,'String'));
            end %switch
            value = min(this.MODEL.Type(1).Option.MaxMaxIter,...
                max(this.MODEL.Type(1).Option.MinMaxIter,round(value)));
            
            if this.MODEL.Type(1).Option.MaxIter ~= value
                this.MODEL.Type(1).Option.MaxIter = value;
                set(this.MODEL.GUI.hEditMaxIter,'String',value)
                set(this.MODEL.GUI.hSliderMaxIter,'Value',value)
                
                update_model(this)
            end %if
        end %fun
        function set_interp_tol_z(this,src)
            switch get(src,'Style')
                case 'slider'
                    value = 10^rnd2dec(get(src,'Value'),2);
                case 'edit'
                    value = str2double(rnd2dec(get(src,'String'),2));
            end %switch
            value = min(this.MODEL.Type(1).Option.MaxTolZ,...
                max(this.MODEL.Type(1).Option.MinTolZ,value));
            
            if this.MODEL.Type(1).Option.TolZ ~= value
                this.MODEL.Type(1).Option.TolZ = value;
                set(this.MODEL.GUI.hEditTolZ,'String',sprintf('%.2G',value))
                set(this.MODEL.GUI.hSliderTolZ,'Value',log10(value))
                
                update_model(this)
            end %if
        end %fun
        
        %% FITTING
        function set_fitting_mode(this)
            mode = get(this.MODEL.GUI.hPopupFitMode,'String');
            i = get(this.MODEL.GUI.hPopupFitMode,'Value');
            
            %only update if there is change
            if not(strcmp(this.MODEL.FitMode,mode{i}))
                this.MODEL.FitMode = mode{i};
                
                update_model(this)
            end %if
        end %fun
        
        %% GAUSS FIT
        function set_gauss_global_search(this)
            this.MODEL.Type(2).Option.GlobalSearch = ...
                logical(get(this.MODEL.GUI.hCheckGaussGlobalSearch,'Value'));
            
            update_model(this)
        end %fun
        function set_gauss_num_trial(this,src)
            switch get(src,'Style')
                case 'slider'
                    value = round(get(src,'Value'));
                case 'edit'
                    value = round(str2double(get(src,'String')));
            end %switch
            value = min(this.MODEL.Type(2).Option.MaxNumTrial,...
                max(this.MODEL.Type(2).Option.MinNumTrial,value));
            
            if this.MODEL.Type(2).Option.NumTrial ~= value
                this.MODEL.Type(2).Option.NumTrial = value;
                set(this.MODEL.GUI.hEditGaussNumTrial,'String',value)
                set(this.MODEL.GUI.hSliderGaussNumTrial,'Value',value)
                
                update_model(this)
            end %if
        end %fun
        function set_gauss_tol_fun(this,src)
            switch get(src,'Style')
                case 'slider'
                    value = 10^rnd2dec(get(src,'Value'),2);
                case 'edit'
                    value = str2double(rnd2dec(get(src,'String'),2));
            end %switch
            value = min(this.MODEL.Type(2).Option.MaxTolFun,...
                max(this.MODEL.Type(2).Option.MinTolFun,value));
            
            if this.MODEL.Type(2).Option.TolFun ~= value
                this.MODEL.Type(2).Option.TolFun = value;
                set(this.MODEL.GUI.hEditGaussTolFun,'String',sprintf('%.2G',value))
                set(this.MODEL.GUI.hSliderGaussTolFun,'Value',log10(value))
                
                update_model(this)
            end %if
        end %fun
        
        %% POLYNOMIAL FIT
        function set_poly_robust(this)
            if get(this.MODEL.GUI.hCheckPolyRobust,'Value')
                this.MODEL.Type(3).Option.Robust = 'on';
                this.MODEL.Type(4).Option.Robust = 'on';
                this.MODEL.Type(5).Option.Robust = 'on';
                this.MODEL.Type(6).Option.Robust = 'on';
            else
                this.MODEL.Type(3).Option.Robust = 'off';
                this.MODEL.Type(4).Option.Robust = 'off';
                this.MODEL.Type(5).Option.Robust = 'off';
                this.MODEL.Type(6).Option.Robust = 'off';
            end %if
            
            update_model(this)
        end %fun
        function set_poly_scale(this)
            if get(this.MODEL.GUI.hCheckPolyScale,'Value')
                this.MODEL.Type(3).Option.Normalize = 'on';
                this.MODEL.Type(4).Option.Normalize = 'on';
                this.MODEL.Type(5).Option.Normalize = 'on';
                this.MODEL.Type(6).Option.Normalize = 'on';
            else
                this.MODEL.Type(3).Option.Normalize = 'off';
                this.MODEL.Type(4).Option.Normalize = 'off';
                this.MODEL.Type(5).Option.Normalize = 'off';
                this.MODEL.Type(6).Option.Normalize = 'off';
            end %if
            
            update_model(this)
        end %fun
        
        %% UPDATE GUI
        function update_int_map_traj(this)
            idxCluster = get_traj_ID(this);
            
            if idxCluster == 0
                set([this.TRAJ.GUI.Pnt3D.hLineProjXZ,...
                    this.TRAJ.GUI.Pnt3D.hLineProjYZ,...
                    this.TRAJ.GUI.Pnt3D.hLineProjXY,...
                    this.TRAJ.GUI.Pnt3D.hPnt],...
                    'xdata',[],'ydata',[],'zdata',[])
                
                axis(this.TRAJ.GUI.Pnt3D.hAx,[0 1 0 1 0 1],'tight')
                set(this.TRAJ.GUI.Pnt3D.hAx,'DataAspectRatio',[1 1 1])
            else
                set(this.TRAJ.GUI.Pnt3D.hLineProjXZ,...
                    'xdata',ones(this.Cluster(idxCluster).NumPnt,1)*max(this.Cluster(idxCluster).x),...
                    'ydata',this.Cluster(idxCluster).y,...
                    'zdata',this.Cluster(idxCluster).t)
                set(this.TRAJ.GUI.Pnt3D.hLineProjYZ,...
                    'xdata',this.Cluster(idxCluster).x,...
                    'ydata',ones(this.Cluster(idxCluster).NumPnt,1)*max(this.Cluster(idxCluster).y),...
                    'zdata',this.Cluster(idxCluster).t)
                set(this.TRAJ.GUI.Pnt3D.hLineProjXY,...
                    'xdata',this.Cluster(idxCluster).x,...
                    'ydata',this.Cluster(idxCluster).y,...
                    'zdata',ones(this.Cluster(idxCluster).NumPnt,1)*min(this.Cluster(idxCluster).t))
                set(this.TRAJ.GUI.Pnt3D.hPnt,...
                    'xdata',this.Cluster(idxCluster).x,...
                    'ydata',this.Cluster(idxCluster).y,...
                    'zdata',this.Cluster(idxCluster).t)
                
                axis(this.TRAJ.GUI.Pnt3D.hAx,'tight')
                
                dataAspectRatio = get(this.TRAJ.GUI.Pnt3D.hAx,'DataAspectRatio');
                dataAspectRatio(1:2) = 1;
                dataAspectRatio(3) = 0.5*this.Cluster(idxCluster).T/...
                    min(range(this.Cluster(idxCluster).x),range(this.Cluster(idxCluster).y));
                set(this.TRAJ.GUI.Pnt3D.hAx,'DataAspectRatio',dataAspectRatio)
            end %if
        end %fun
        function update_mol_num_traj(this)
            if get(this.STASI.hToggleLockParam,'Value') %STASI settings locked
                idxCluster = get_traj_ID(this);
                
                if idxCluster == 0
                    set([this.MOLNUM.GUI.Pnt3D.hPntDimer,...
                        this.MOLNUM.GUI.Pnt3D.hPntTrimer,...
                        this.MOLNUM.GUI.Pnt3D.hPntOligomer],...
                        'xdata',[],'ydata',[],'zdata',[])
                    
                    %                     axis(this.MOLNUM.GUI.Pnt3D.hAx,[0 1 0 1 0 1],'tight')
                    %                     set(this.MOLNUM.GUI.Pnt3D.hAx,'DataAspectRatio',[1 1 1])
                else
                    x = vertcat(this.Cluster.x);
                    y = vertcat(this.Cluster.y);
                    t = vertcat(this.Cluster.t);
                    molNum = round(this.MODEL.MolNum);
                    take = repval(1:this.NumCluster,[this.Cluster.NumPnt]) == idxCluster;
                    x = x(take); y = y(take); t = t(take); molNum = molNum(take);
                    
                    set(this.MOLNUM.GUI.Pnt3D.hPntDimer,...
                        'xdata',x(molNum==2),...
                        'ydata',y(molNum==2),...
                        'zdata',t(molNum==2))
                    
                    set(this.MOLNUM.GUI.Pnt3D.hPntTrimer,...
                        'xdata',x(molNum==3),...
                        'ydata',y(molNum==3),...
                        'zdata',t(molNum==3))
                    
                    set(this.MOLNUM.GUI.Pnt3D.hPntOligomer,...
                        'xdata',x(molNum>=4),...
                        'ydata',y(molNum>=4),...
                        'zdata',t(molNum>=4))
                    %
                    %                     axis(this.MOLNUM.GUI.Pnt3D.hAx,'tight')
                    %
                    %                     dataAspectRatio = get(this.MOLNUM.GUI.Pnt3D.hAx,'DataAspectRatio');
                    %                     dataAspectRatio(1:2) = 1;
                    %                     dataAspectRatio(3) = 0.5*this.Cluster(idxCluster).T/...
                    %                         min(range(this.Cluster(idxCluster).x),range(this.Cluster(idxCluster).y));
                    %                     set(this.MOLNUM.GUI.Pnt3D.hAx,'DataAspectRatio',dataAspectRatio)
                end %if
            end %if
        end %fun
        
        function respond_to_xz_slider(this,target)
            rYz = getPosition(this.BLEACHMAP.GUI.hRoiYzSlide);
            if not(rYz(3) == this.FOV(2)-this.FOV(1) & ...
                    rYz(4) == this.FOV(4)-this.FOV(3))
                uistack(target,'up')
            end %if
            
            update_int_map_proj(this,'x')
        end %fun
        function respond_to_yz_slider(this,target)
            rXz = getPosition(this.BLEACHMAP.GUI.hRoiXzSlide);
            if not(rXz(3) == this.FOV(2)-this.FOV(1) & ...
                    rXz(4) == this.FOV(4)-this.FOV(3))
                uistack(target,'up')
            end %if
            
            update_int_map_proj(this,'y')
        end %fun
        
        function update_bleach_map(this)
            if isempty(this.Cluster) %data is loaded
                return
            end %if
            
            update_int_map_proj(this,'xy')
            update_bleach_map_surface(this)
        end %fun
        function update_int_map_proj(this,dim)
            set_bar_text(this,'Calculating intensity projection...')
            set_bar_percentage(this,0)
            
            cmap = linspace(0,1,16);
            gaussLat = exp(-((floor(-4*this.BLEACHMAP.SigLat):ceil(4*this.BLEACHMAP.SigLat))).^2/2/this.BLEACHMAP.SigLat^2);
            gaussAx = exp(-((floor(-4*this.BLEACHMAP.SigAx):ceil(4*this.BLEACHMAP.SigAx))).^2/2/this.BLEACHMAP.SigAx^2);
            
            if strfind(dim,'x')
                rXz = getPosition(this.BLEACHMAP.GUI.hRoiXzSlide);
                wXZ = 0.5*rXz(3);
                ctrXZ = rXz(1)+wXZ;
                iXZ = nonzeros(ismembc2((-round(wXZ):round(wXZ))+round(ctrXZ),round(this.INTMAP.ctrs{2})));
                
                A = conv2(gaussLat,gaussAx,...
                    squeeze(sum(this.INTMAP.N(:,iXZ,:),2)),'same');
                
                A = norm2quantile(A,[0.05 0.99]);
                [~,i] = histc(A,cmap);
                
                set(this.BLEACHMAP.GUI.hSurfXZ,...
                    'ydata',repmat(this.INTMAP.ctrs{1}(:),[1,this.INTMAP.num(3)]),...
                    'xdata',ones(this.INTMAP.num(1),this.INTMAP.num(3))*ctrXZ,...
                    'zdata',repmat(this.INTMAP.ctrs{3},[this.INTMAP.num(1),1]),...
                    'cdata',cat(3,cmap(i),cmap(i)*0,cmap(i)),...
                    'alphadata',A,...
                    'FaceAlpha','interp')
                set(this.BLEACHMAP.GUI.hLineXZ,...
                    'xdata',ones(1,4)*ctrXZ,...
                    'ydata',[this.FOV(3),this.FOV(4),this.FOV(4),this.FOV(3)],...
                    'zdata',[this.FOV(5),this.FOV(5),this.FOV(6),this.FOV(6)])
            end %if
            
            if strfind(dim,'y')
                rYz = getPosition(this.BLEACHMAP.GUI.hRoiYzSlide);
                wYZ = 0.5*rYz(4);
                ctrYZ = rYz(2)+wYZ;
                iYZ = nonzeros(ismembc2((-round(wYZ):round(wYZ))+round(ctrYZ),round(this.INTMAP.ctrs{1})));
                
                A = conv2(gaussLat,gaussAx,...
                    squeeze(sum(this.INTMAP.N(iYZ,:,:),1)),'same');
                
                A = norm2quantile(A,[0.05 0.99]);
                [~,i] = histc(A,cmap);
                
                set(this.BLEACHMAP.GUI.hSurfYZ,...
                    'ydata',ones(this.INTMAP.num(2),this.INTMAP.num(3))*ctrYZ,...
                    'xdata',repmat(this.INTMAP.ctrs{2}(:),[1,this.INTMAP.num(3)]),...
                    'zdata',repmat(this.INTMAP.ctrs{3},[this.INTMAP.num(2),1]),...
                    'cdata',cat(3,cmap(i)*0,cmap(i),cmap(i)),...
                    'alphadata',A,...
                    'FaceAlpha','interp')
                set(this.BLEACHMAP.GUI.hLineYZ,...
                    'ydata',ones(1,4)*ctrYZ,...
                    'xdata',[this.FOV(1),this.FOV(2),this.FOV(2),this.FOV(1)],...
                    'zdata',[this.FOV(5),this.FOV(5),this.FOV(6),this.FOV(6)])
            end %if
            
            set_bar_text(this,'')
        end %fun
        
        function update_bleach_map_surface(this)
            if isempty(this.Cluster)
                return
            end %if
            
            clim = caxis(this.BLEACHMAP.GUI.hAx);
            if get(this.STASI.hToggleLockParam,'Value') %STASI settings locked
                if has_sufficient_sample(this)
                    set(this.BLEACHMAP.GUI.hSurfXY,...
                        'xdata',this.INTMAP.ctrs{2},...
                        'ydata',this.INTMAP.ctrs{1},...
                        'zdata',this.MODEL.Map,...
                        'cdata',norm2quantile(this.MODEL.Map,[0.05 0.95])*diff(clim)+min(clim(1)),...
                        'cdatamapping','scaled',...
                        'FaceAlpha',0.85)
                else
                    set(this.BLEACHMAP.GUI.hSurfXY,...
                        'xdata',[],...
                        'ydata',[],...
                        'zdata',[],...
                        'cdata',[])
                end %if
                
                %%
                xLvl = vertcat(this.Cluster.xLvl);
                yLvl = vertcat(this.Cluster.yLvl);
                lvl = vertcat(this.Cluster.Lvl);
                take = find(vertcat(this.Cluster.useLvl));
                
                idxModel = get_model_idx(this);
                
                %----------------------------------------------------------
                isGood = (this.MODEL.Type(idxModel).GoF.RelErr <= 0.1);
                if any(isGood)
                    set(this.BLEACHMAP.GUI.hPntRelErrGood,...
                        'xdata',xLvl(take(isGood)),...
                        'ydata',yLvl(take(isGood)),...
                        'zdata',abs(lvl(take(isGood))))
                    set(this.BLEACHMAP.GUI.hLineRelErrGood,...
                        'xdata',mat2vec([1;1;nan]*rowvec(xLvl(take(isGood)))),...
                        'ydata',mat2vec([1;1;nan]*rowvec(yLvl(take(isGood)))),...
                        'zdata',mat2vec([rowvec(abs(lvl(take(isGood))));...
                        rowvec(abs(lvl(take(isGood)))-this.MODEL.Type(idxModel).GoF.residuals(isGood));...
                        nan(1,sum(isGood))]))
                else
                    set([this.BLEACHMAP.GUI.hPntRelErrGood,...
                        this.BLEACHMAP.GUI.hLineRelErrGood],...
                        'xdata',[],...
                        'ydata',[],...
                        'zdata',[])
                end %if
                
                %----------------------------------------------------------
                isGood = (this.MODEL.Type(idxModel).GoF.RelErr > 0.1 &...
                    this.MODEL.Type(idxModel).GoF.RelErr <= 0.25);
                if any(isGood)
                    set(this.BLEACHMAP.GUI.hPntRelErrMedium,...
                        'xdata',xLvl(take(isGood)),...
                        'ydata',yLvl(take(isGood)),...
                        'zdata',abs(lvl(take(isGood))))
                    set(this.BLEACHMAP.GUI.hLineRelErrMedium,...
                        'xdata',mat2vec([1;1;nan]*rowvec(xLvl(take(isGood)))),...
                        'ydata',mat2vec([1;1;nan]*rowvec(yLvl(take(isGood)))),...
                        'zdata',mat2vec([rowvec(abs(lvl(take(isGood))));...
                        rowvec(abs(lvl(take(isGood)))-this.MODEL.Type(idxModel).GoF.residuals(isGood));...
                        nan(1,sum(isGood))]))
                else
                    set([this.BLEACHMAP.GUI.hPntRelErrMedium,...
                        this.BLEACHMAP.GUI.hLineRelErrMedium],...
                        'xdata',[],...
                        'ydata',[],...
                        'zdata',[])
                end %if
                
                %----------------------------------------------------------
                isGood = (this.MODEL.Type(idxModel).GoF.RelErr > 0.25);
                if any(isGood)
                    set(this.BLEACHMAP.GUI.hPntRelErrBad,...
                        'xdata',xLvl(take(isGood)),...
                        'ydata',yLvl(take(isGood)),...
                        'zdata',abs(lvl(take(isGood))))
                    set(this.BLEACHMAP.GUI.hLineRelErrBad,...
                        'xdata',mat2vec([1;1;nan]*rowvec(xLvl(take(isGood)))),...
                        'ydata',mat2vec([1;1;nan]*rowvec(yLvl(take(isGood)))),...
                        'zdata',mat2vec([rowvec(abs(lvl(take(isGood))));...
                        rowvec(abs(lvl(take(isGood)))-this.MODEL.Type(idxModel).GoF.residuals(isGood));...
                        nan(1,sum(isGood))]))
                else
                    set([this.BLEACHMAP.GUI.hPntRelErrBad,...
                        this.BLEACHMAP.GUI.hLineRelErrBad],...
                        'xdata',[],...
                        'ydata',[],...
                        'zdata',[])
                end %if
            else %STASI settings unlocked
                set(this.BLEACHMAP.GUI.hSurfXY,...
                    'xdata',this.INTMAP.ctrs{2},...
                    'ydata',this.INTMAP.ctrs{1},...
                    'zdata',this.PRIOR.C,...
                    'cdata',norm2quantile(this.PRIOR.C,[0.05 0.95])*diff(clim)+min(clim(1)),...
                    'cdatamapping','scaled',...
                    'FaceAlpha',0.85)
                
                %----------------------------------------------------------
                set([this.BLEACHMAP.GUI.hPntRelErrGood,...
                    this.BLEACHMAP.GUI.hLineRelErrGood,...
                    this.BLEACHMAP.GUI.hPntRelErrMedium,...
                    this.BLEACHMAP.GUI.hLineRelErrMedium,...
                    this.BLEACHMAP.GUI.hPntRelErrBad,...
                    this.BLEACHMAP.GUI.hLineRelErrBad],...
                    'xdata',[],...
                    'ydata',[],...
                    'zdata',[])
            end %if
        end %fun
        
        %%
        function update_step_detection(this)
            update_int_traj(this)
            update_single_fluoro_line(this)
            update_bleach_selector(this)
            update_state_display(this)
        end %fun
        function update_int_traj(this)
            idxCluster = get_traj_ID(this);
            
            if isempty(this.Cluster) || idxCluster == 0 %no data
                set([...
                    this.TRAJ.GUI.Signal.hPntObs,...
                    this.TRAJ.GUI.Signal.hPntEst,...
                    this.TRAJ.GUI.Signal.hLinePrior,...
                    this.TRAJ.GUI.FwDiff.hLinePriorLB,...
                    this.TRAJ.GUI.FwDiff.hPntBleachEvent,...
                    this.TRAJ.GUI.FwDiff.hStem1dt,...
                    this.TRAJ.GUI.FwDiff.hStemNdt,...
                    this.TRAJ.GUI.FwDiff.hLineNoise,...
                    this.TRAJ.GUI.Residual.hStem],...
                    'xdata',[],'ydata',[])
                
                if not(isempty(this.TRAJ.GUI.FwDiff.hPntBleachEventSelector))
                    delete(this.TRAJ.GUI.FwDiff.hPntBleachEventSelector); this.TRAJ.GUI.FwDiff.hPntBleachEventSelector = [];
                end %if
            else
                if not(get(this.STASI.hToggleLockParam,'Value'))
                    analyse_traj(this,idxCluster)
                end %if
                
                %%
                minT = min(this.Cluster(idxCluster).t);
                maxT = max(this.Cluster(idxCluster).t);
                t = colvec(minT:maxT);
                
                %% signal
                A = accumarray(this.Cluster(idxCluster).t,...
                    this.Cluster(idxCluster).A,[maxT, 1],[],nan);
                A = A(minT:end);
                
                set(this.TRAJ.GUI.Signal.hPntObs,...
                    'xdata',t,...
                    'ydata',A)
                
                set(this.TRAJ.GUI.Signal.hPntEst,...
                    'xdata',this.Cluster(idxCluster).t,...
                    'ydata',this.Cluster(idxCluster).Ahat)
                
                %% signal difference
                set(this.TRAJ.GUI.FwDiff.hPntBleachEvent,...
                    'xdata',this.Cluster(idxCluster).tLvl,...
                    'ydata',this.Cluster(idxCluster).dLvl)
                
                dA = diff(A);
                set(this.TRAJ.GUI.FwDiff.hStem1dt,...
                    'xdata',t(1:end-1),...
                    'ydata',-abs(dA))
                
                dA2 = A(this.STASI.MinTransitLength+1:end)-A(1:end-this.STASI.MinTransitLength);
                set(this.TRAJ.GUI.FwDiff.hStemNdt,...
                    'xdata',t(1:end-this.STASI.MinTransitLength),...
                    'ydata',-abs(dA2))
                
                set(this.TRAJ.GUI.FwDiff.hLineNoise,...
                    'xdata',[t(1) t(end)],...
                    'ydata',-[1 1]*get_stasi_traj_noise(this))
                
                %
                update_bleach_selector(this)
                update_single_fluoro_line(this)
                
                %% residual
                resA = accumarray(this.Cluster(idxCluster).t,...
                    this.Cluster(idxCluster).A-this.Cluster(idxCluster).Ahat,...
                    [max(this.Cluster(idxCluster).t), 1],[],nan);
                resA = resA(min(this.Cluster(idxCluster).t):end);
                
                set(this.TRAJ.GUI.Residual.hStem,...
                    'xdata',t,...
                    'ydata', resA)
                
                %%
                axis(this.TRAJ.GUI.Signal.hAx,'tight')
                yLim = ylim(this.TRAJ.GUI.Signal.hAx);
                ylim(this.TRAJ.GUI.Signal.hAx,[0,1.3*yLim(2)])
                
                axis(this.TRAJ.GUI.FwDiff.hAx,'tight')
                yLim = ylim(this.TRAJ.GUI.FwDiff.hAx);
                ylim(this.TRAJ.GUI.FwDiff.hAx,[1.3*yLim(1),0])
                
                axis(this.TRAJ.GUI.Residual.hAx,'tight')
                yLim = ylim(this.TRAJ.GUI.Residual.hAx);
                ylim(this.TRAJ.GUI.Residual.hAx,1.3*yLim)
            end %if
        end %fun
        function update_single_fluoro_line(this)
            idxCluster = get_traj_ID(this);
            
            if idxCluster == 0 % = no data
                set([this.TRAJ.GUI.Signal.hLinePrior,...
                    this.TRAJ.GUI.FwDiff.hLinePriorLB],...
                    'xdata',[],...
                    'ydata',[])
            else
                if get(this.STASI.hToggleLockParam,'Value')
                    singleMolInt = eval_model(...
                        this,this.Cluster(idxCluster).x,this.Cluster(idxCluster).y);
                else
                    singleMolInt = interp2(...
                        this.INTMAP.ctrs{2},this.INTMAP.ctrs{1},this.PRIOR.C,...
                        this.Cluster(idxCluster).x,...
                        this.Cluster(idxCluster).y,...
                        'linear',nan);
                end %if
                
                set(this.TRAJ.GUI.Signal.hLinePrior,...
                    'xdata',this.Cluster(idxCluster).t,...
                    'ydata',singleMolInt)
                
                set(this.TRAJ.GUI.FwDiff.hLinePriorLB,...
                    'xdata',this.Cluster(idxCluster).t(1:end-1),...
                    'ydata',-(2*singleMolInt(1:end-1)-singleMolInt(2:end)))
            end %if
        end %fun
        function update_bleach_selector(this)
            if not(isempty(this.TRAJ.GUI.FwDiff.hPntBleachEventSelector))
                delete(this.TRAJ.GUI.FwDiff.hPntBleachEventSelector); ...
                    this.TRAJ.GUI.FwDiff.hPntBleachEventSelector = [];
            end %if
            
            %%
            idxCluster = get_traj_ID(this);
            
            if not(isempty(this.Cluster) || idxCluster == 0) %has data
                if get(this.STASI.hToggleLockParam,'Value')
                    for idxStep = 1:numel(this.Cluster(idxCluster).Lvl)
                        this.TRAJ.GUI.FwDiff.hPntBleachEventSelector(idxStep) = line(...
                            'parent',this.TRAJ.GUI.FwDiff.hAx,...
                            'xdata',this.Cluster(idxCluster).iLvl(idxStep),...
                            'ydata',this.Cluster(idxCluster).Lvl(idxStep),...
                            'Linestyle','none',...
                            'marker','.','markersize',35,...
                            'ButtonDownFcn',@(src,evnt)switch_step_state(this,idxCluster,idxStep));
                        
                        if this.Cluster(idxCluster).useLvl(idxStep)
                            set(this.TRAJ.GUI.FwDiff.hPntBleachEventSelector(idxStep),'color','g')
                        else
                            set(this.TRAJ.GUI.FwDiff.hPntBleachEventSelector(idxStep),'color','r')
                        end %if
                    end %for
                else
                    for idxStep = 1:numel(this.Cluster(idxCluster).Lvl)
                        this.TRAJ.GUI.FwDiff.hPntBleachEventSelector(idxStep) = line(...
                            'parent',this.TRAJ.GUI.FwDiff.hAx,...
                            'xdata',this.Cluster(idxCluster).iLvl(idxStep),...
                            'ydata',this.Cluster(idxCluster).Lvl(idxStep),...
                            'Linestyle','none',...
                            'Color','m',...
                            'marker','.','markersize',35,...
                            'ButtonDownFcn',[]);
                    end %for
                end %if
            end %if
        end %fun
        function update_state_display(this)
            idxCluster = get_traj_ID(this);
            
            if isempty(this.Cluster) || idxCluster == 0 %no data
                set([this.STASI.GUI.hImgStateEst,...
                    this.STASI.GUI.hImgThresh],...
                    'ydata',0.5,...
                    'xdata',0.5,...
                    'cdata',0.5)
                
                set([this.STASI.GUI.hLineMDL,...
                    this.STASI.GUI.hPntMDL,...
                    this.STASI.GUI.hLineThresh,...
                    this.STASI.GUI.hLineThreshSep],...
                    'ydata',[],...
                    'xdata',[])
                
                ylim(this.STASI.GUI.hAxThresh,[0 1])
            else
                numLvl = min(this.STASI.MaxLvl,...
                    size(this.Cluster(idxCluster).PotAmpTraj,1));
                
                set(this.STASI.GUI.hImgStateEst,...
                    'ydata',0:numLvl,...
                    'xdata',this.Cluster(idxCluster).t,...
                    'cdata',vertcat(rowvec(this.Cluster(idxCluster).A),...
                    this.Cluster(idxCluster).PotAmpTraj(1:numLvl,:)))
                
                set(this.STASI.GUI.hAxStateEst,...
                    'YTick',(0:numLvl)-0.5)
                axis(this.STASI.GUI.hAxStateEst,'tight')
                
                %%
                set(this.STASI.GUI.hLineMDL,...
                    'ydata',1:numLvl,...
                    'xdata',this.Cluster(idxCluster).MDL)
                set(this.STASI.GUI.hPntMDL,...
                    'ydata',double(this.Cluster(idxCluster).NumStateLvl),...
                    'xdata',this.Cluster(idxCluster).MDL(this.Cluster(idxCluster).NumStateLvl))
                set(this.STASI.GUI.hAxMDL,...
                    'YTick',0:numLvl,...
                    'YTickLabel',char('Raw',num2str(colvec(1:numLvl))))
                xlim(this.STASI.GUI.hAxMDL,[-1e-12 1e-12]+...
                    [min(this.Cluster(idxCluster).MDL),max(this.Cluster(idxCluster).MDL)])
                
                %%
                filter = [this.Cluster(idxCluster).HasShortPeak(:),...
                    this.Cluster(idxCluster).HasShortTransit(:),...
                    this.Cluster(idxCluster).HasSmallStep(:),...
                    this.Cluster(idxCluster).HasStepUp(:)];
                filter = mat2vec(transpose(filter));
                filter = ind2rgb(filter,[0 1 0; 1 0 0]);
                
                set(this.STASI.GUI.hImgThresh,...
                    'cdata',[nan(4,1,3);filter])
                set(this.STASI.GUI.hAxThresh,...
                    'YTick',0.5:4*numLvl+3.5,...
                    'YTickLabel',[repmat({''},[4,1]);repmat({'Peak Length';'Transit Length';'Intensity Change';'Strictly Decay'},[numLvl,1])])
                ylim(this.STASI.GUI.hAxThresh,[0 4*numLvl+4])
                
                set(this.STASI.GUI.hLineThresh,...
                    'xdata',mat2vec([zeros(1,4*numLvl+5);ones(1,4*numLvl+5);nan(1,4*numLvl+5)]),...
                    'ydata',mat2vec([0:4*numLvl+4;0:4*numLvl+4;nan(1,4*numLvl+5)]))
                
                set(this.STASI.GUI.hLineThreshSep,...
                    'Linewidth',2,...
                    'xdata',mat2vec([zeros(1,numLvl);ones(1,numLvl);nan(1,numLvl)]),...
                    'ydata',mat2vec([4:4:4*numLvl;4:4:4*numLvl;nan(1,numLvl)]))
            end %if
        end %fun
        
        %% FIDUCIAL MAP
        function update_fiducial_map(this)
            take = rowvec(vertcat(this.Cluster.useLvl));
            xLvl = rowvec(vertcat(this.Cluster.xLvl));
            yLvl = rowvec(vertcat(this.Cluster.yLvl));
            
            set(this.NAVI.GUI.hPntAccepted,...
                'xdata', xLvl(take),...
                'ydata', yLvl(take))
            
            set(this.NAVI.GUI.hPntDiscarded,...
                'xdata', xLvl(not(take)),...
                'ydata', yLvl(not(take)))
            
            %%
            ctrX = (0:this.FOV(2))+0.5*rem(this.FOV(2)-this.FOV(1),1);
            ctrY = (0:this.FOV(4))+0.5*rem(this.FOV(4)-this.FOV(3),1);
            
            N = hist3([colvec(yLvl(take)) colvec(xLvl(take))],{ctrY ctrX});
            imgFiducialDist = bwdist(logical(N));
            
            x = linspace(min(imgFiducialDist(:)),...
                max(imgFiducialDist(:)),256);
            r = 20; y = 10; g = 0;
            cmap(:,1) = max(0.85,min(1,((1-0.85)/(y-r)*(x-r)+0.85))) .* double(x >= y) + ...
                max(0,min(1,((0-1)/(g-y)*(x-y)+1))) .* double(x < y);
            cmap(:,2) = max(0.16,min(1,((1-0.16)/(y-r)*(x-r)+0.16))) .* double(x >= y) + ...
                max(0.5,min(1,((0.5-1)/(g-y)*(x-y)+1))) .* double(x < y);
            cmap(:,3) = zeros(size(cmap,1),1);
            
            for i = 1:numel(ctrY)
                for j = 1:numel(ctrX)
                    imgFiducialDist(i,j) = find(imgFiducialDist(i,j) <= x,1,'first');
                end %for
            end %for
            
            set(this.FIDUCIAL.GUI.hImg,...
                'xdata',ctrX,...
                'ydata',ctrY,...
                'cdata',ind2rgb(imgFiducialDist,cmap))
        end %fun
        
        %% MODELING
        
        %%
        function update_mol_num_map(this)
            if get(this.STASI.hToggleLockParam,'Value') %STASI settings locked
                if has_sufficient_sample(this)
                    x = vertcat(this.Cluster.x);
                    y = vertcat(this.Cluster.y);
                    molNum = round(this.MODEL.MolNum);
                    
                    set(this.MOLNUM.GUI.hPntMonomer,...
                        'xdata',x(molNum==1),...
                        'ydata',y(molNum==1))
                    set(this.MOLNUM.GUI.hPntDimer,...
                        'xdata',x(molNum==2),...
                        'ydata',y(molNum==2))
                    set(this.MOLNUM.GUI.hPntTrimer,...
                        'xdata',x(molNum==3),...
                        'ydata',y(molNum==3))
                    set(this.MOLNUM.GUI.hPntOligomer,...
                        'xdata',x(molNum>3),...
                        'ydata',y(molNum>3))
                else
                    set([this.MOLNUM.GUI.hPntMonomer,...
                        this.MOLNUM.GUI.hPntDimer,...
                        this.MOLNUM.GUI.hPntTrimer,...
                        this.MOLNUM.GUI.hPntOligomer],...
                        'xdata',[],...
                        'ydata',[])
                end %if
                
                update_mol_num_hist(this)
            end %if
        end %fun
        function update_mol_num_hist(this)
            if has_sufficient_sample(this)
                [bw,PDF,iN] = kde(this.MODEL.MolNum,256);
                
                set(this.MOLNUM.GUI.hAreaMolNum,...
                    'xdata',iN,...
                    'ydata',PDF)
                
                iN = 0:ceil(max(iN));
                PMF = hist(this.MODEL.MolNum,iN);
                PMF = PMF/sum(PMF);
                
                set(this.MOLNUM.GUI.hBarEstMolNum,...
                    'xdata',iN,...
                    'ydata',PMF)
                
                axis(this.MOLNUM.GUI.hAxNumDist,'tight')
                ylim = get(this.MOLNUM.GUI.hAxNumDist,'ylim');
                ylim = ylim.*[0 1.3];
                
                set(this.MOLNUM.GUI.hAxNumDist,'ylim',ylim,'xtick',iN)
            else
                set([this.MOLNUM.GUI.hAreaMolNum,...
                    this.MOLNUM.GUI.hBarEstMolNum],...
                    'xdata',[],...
                    'ydata',[])
            end %if
        end %fun
        
        % various
        function model_bleach_map(this)
            if get(this.STASI.hToggleLockParam,'Value') %STASI settings locked
                idxModel = get_model_idx(this);
                
                xLvl = vertcat(this.Cluster.xLvl);
                yLvl = vertcat(this.Cluster.yLvl);
                lvl = vertcat(this.Cluster.Lvl);
                take = find(vertcat(this.Cluster.useLvl));
                
                switch this.MODEL.Type(idxModel).Name
                    case {'Polynom 22','Polynom 33','Polynom 44','Polynom 55'}
                        %%
                        set_bar_text(this,sprintf('Fitting Polynomial Model (Order %s)...',this.MODEL.Type(idxModel).Name(end-1:end)))
                        
                        [this.MODEL.Type(idxModel).ThetaEst,...
                            this.MODEL.Type(idxModel).GoF] = fit(...
                            [xLvl(take),yLvl(take)],log10(abs(lvl(take))),...
                            this.MODEL.Type(idxModel).Fun,...
                            this.MODEL.Type(idxModel).Option);
                        
                        [X,Y] = meshgrid(this.INTMAP.ctrs{2},this.INTMAP.ctrs{1});
                        this.MODEL.Map = 10.^reshape(feval(...
                            this.MODEL.Type(idxModel).ThetaEst,[X(:),Y(:)]),this.INTMAP.num(1:2));
                        
                        xHat = eval_model(this,xLvl(take),yLvl(take));
                        this.MODEL.Type(idxModel).GoF.residuals = abs(lvl(take)) - xHat;
                        
                    case 'Gaussian'
                        %%
                        set_bar_text(this,'Fitting Gaussian Model...')
                        
                        xdata = [xLvl(take),yLvl(take),yLvl(take)*0+1];
                        ydata = abs(lvl(take));
                        
                        theta0 = get_initial_guess(this,xdata,ydata);
                        
                        [this.MODEL.Type(idxModel).ThetaEst,thetaEstSE,...
                            this.MODEL.Type(idxModel).GoF.resnorm,...
                            this.MODEL.Type(idxModel).GoF.residuals,...
                            this.MODEL.Type(idxModel).GoF.exitflag,output,...
                            this.MODEL.Type(idxModel).Fun] = ...
                            OLS_fit_2dim_gaussian(xdata,ydata,theta0,...
                            'N',1,'elliptic',true,'oriented',true,'centered',false,'offset',false,...
                            'lb',[0.1*theta0(1) 20 20 -inf -inf 0],...
                            'ub',[10*theta0(1) 1000 1000 inf inf 2*pi],...
                            this.MODEL.Type(idxModel).Option);
                        
                        [X,Y] = meshgrid(this.INTMAP.ctrs{2},this.INTMAP.ctrs{1});
                        this.MODEL.Map = reshape(...
                            this.MODEL.Type(idxModel).Fun(this.MODEL.Type(idxModel).ThetaEst,...
                            [X(:),Y(:),Y(:)*0+1]),this.INTMAP.num(1:2));
                        
                        xHat = eval_model(this,xLvl(take),yLvl(take));
                        
                    case 'Interpolation'
                        %%
                        set_bar_text(this,'Smoothing & Interpolation...')
                        
                        z = accumarray(round([yLvl(take)-this.FOV(3),xLvl(take)-this.FOV(1)]),abs(lvl(take)),this.INTMAP.num(1:2),@mean,nan);
                        
                        if this.MODEL.Type(1).Option.Robust
                            [this.MODEL.Map,~,this.MODEL.Type(idxModel).GoF.exitflag] = smoothn(z,...
                                this.MODEL.Type(1).Option.SmoothFac,'robust',...
                                'MaxIter',this.MODEL.Type(1).Option.MaxIter,...
                                'TolZ',this.MODEL.Type(1).Option.TolZ);
                        else
                            [this.MODEL.Map,~,this.MODEL.Type(idxModel).GoF.exitflag] = smoothn(z,...
                                this.MODEL.Type(1).Option.SmoothFac,...
                                'MaxIter',this.MODEL.Type(1).Option.MaxIter,...
                                'TolZ',this.MODEL.Type(1).Option.TolZ);
                        end %if
                        
                        xHat = eval_model(this,xLvl(take),yLvl(take));
                        this.MODEL.Type(idxModel).GoF.residuals = abs(lvl(take)) - xHat;
                end %switch
                
                this.MODEL.Type(idxModel).GoF.RelErr = abs(this.MODEL.Type(idxModel).GoF.residuals./xHat);
                
                %% translate into molecule number
                x = vertcat(this.Cluster.x);
                y = vertcat(this.Cluster.y);
                A = vertcat(this.Cluster.A);
                
                this.MODEL.MolNum = A./eval_model(this,x,y);
                
                set_bar_text(this,'')
            end %if
        end %fun
        function xHat = eval_model(this,x,y)
            idxModel = get_model_idx(this);
            
            switch this.MODEL.Type(idxModel).Name
                case {'Polynom 22','Polynom 33','Polynom 44','Polynom 55'}
                    xHat = 10.^feval(this.MODEL.Type(idxModel).ThetaEst,x,y);
                case 'Gaussian'
                    xHat = this.MODEL.Type(idxModel).Fun(this.MODEL.Type(idxModel).ThetaEst,[x,y,x*0+1]);
                case 'Interpolation'
                    xHat = interp2(this.INTMAP.ctrs{2},this.INTMAP.ctrs{1},this.MODEL.Map,x,y,'linear',nan);
            end %switch
        end %fun
        
        function theta0 = get_initial_guess(this,r,z)
            %theta = [volume std_i std_j muI muJ angle_with_j_axis[CCW]]
            w = z./sum(z);
            muX = sum(r(:,1).*w);
            sigX = sqrt(sum((r(:,1)-muX).^2.*w));
            muY = sum(r(:,2).*w);
            sigY = sqrt(sum((r(:,2)-muY).^2.*w));
            V = max(z)*2*pi*sigX*sigY;
            theta0 = [V sigY sigX muY muX pi];
        end %fun
        
        function save_results(this)
            if isempty(this.Cluster)
                return
            end %if
            
            if not(get(this.STASI.hToggleLockParam,'Value'))
                generate_information_dialog('',...
                    {'Cannot save results.','No modeling done yet!'})
                return
            end %if
            
            pathExport = uigetdir(this.WorkPath);
            mkdir(pathExport,'Analysis')
            pathExport = fullfile(pathExport,'Analysis');
            
            %%
            set_bar_text(this,'Saving all results...')
            set_bar_percentage(this,0)
            
            t = vertcat(this.Cluster.t);
            x = vertcat(this.Cluster.x);
            y = vertcat(this.Cluster.y);
            N = vertcat(this.Cluster.A)./eval_model(this,x,y);
            ID = repval(this.UUID,vertcat(this.Cluster(:).NumPnt));
            
            data = horzcat(t,x,y,N,ID);
            
            dlmwrite(fullfile(pathExport,'Results.txt'),data,...
                'delimiter','\t','newline','pc','precision', '%.16e')
            
            set_bar_percentage(this,0.2)
            
            %%
            hFig = figure('Visible','off','PaperPositionMode','auto');
            hAx = copyobj(this.MODEL.GUI.hAx,hFig);
            colormap(hAx,'gray');
            hCbar = colorbar(hAx,'location','NorthOutside');
            xlabel(hCbar,'Bleach Magnitude')
            set(hAx,'Units','normalized','outerposition',[0 0 1 1])
            print(hFig,'-dpng','-r300',fullfile(pathExport,'Spatial Single Fluorophore Intensity.png'))
            close(hFig)
            
            set_bar_percentage(this,0.5)
            
            %%
            hFig = figure('Visible','off','PaperPositionMode','auto');
            hAx = copyobj(this.MOLNUM.GUI.hAx,hFig);
            set(hAx,'Units','normalized','outerposition',[0 0 1 1])
            print(hFig,'-dpng','-r300',fullfile(pathExport,'Molecule Number Map.png'))
            close(hFig)
            
            set_bar_percentage(this,0.8)
            
            %%
            hFig = figure('Visible','off','PaperPositionMode','auto');
            hAx = copyobj(this.MOLNUM.GUI.hAxNumDist,hFig);
            colormap(hAx,'gray');
            legend(hAx,'show','Orientation','horizontal','location','north');
            set(hAx,'Units','normalized','outerposition',[0 0 1 1])
            print(hFig,'-dpng','-r300',fullfile(pathExport,'Molecule Number Distribution.png'))
            close(hFig)
            
            %%
            set_bar_text(this,'')
            set_bar_percentage(this,0)
        end %fun
        
        %%
        function set_rotate(this,src)
            %input validation
            hRot = rotate3d(this.BLEACHMAP.GUI.hAx);
            
            switch get(src,'State')
                case 'on'
                    set(findobj(this.hFig,...
                        'Tag','Pan','-or','Tag','Zoom'),...
                        'State','off')
                    set(hRot,...
                        'Enable','on',...
                        'RotateStyle', 'orbit')
                    
                case 'off'
                    set(hRot,...
                        'Enable','off')
            end %switch
            
            hList = findall(this.hFig,'Type','axes');
            setAllowAxesRotate(hRot,hList(hList ~= this.BLEACHMAP.GUI.hAx),false);
        end %fun
        function proc_keyboard(this,evnt)
            if isempty(evnt.Modifier)
                switch evnt.Key
                    case 'uparrow'
                        set_above_traj(this)
                    case 'downarrow'
                        set_below_traj(this)
                    case 'rightarrow'
                        set_right_traj(this)
                    case 'leftarrow'
                        set_left_traj(this)
                end %switch
            elseif strcmp(evnt.Modifier,'control')
                switch evnt.Key
                    case 'rightarrow'
                        set_next_traj_ID(this)
                    case 'leftarrow'
                        set_prev_traj_ID(this)
                    case 'a'
                        selection_by_ID(this,'Accept')
                    case 'd'
                        selection_by_ID(this,'Discard')
                    case 'l'
                        load_data(this)
                    case 's'
                        save_results(this)
                end %switch
            end %if
        end %fun
    end %methods
    
    methods(Static)
        %% STaSI
        function points = recursion1(eff, sd, points, counter)
            %{
tau998_table = [1:30, 40, 50, 60, 80, 100, 1000;...
    318.31, 22.327, 10.215, 7.173, 5.893, 5.208, 4.785, 4.501, 4.297, 4.144,...
    4.025, 3.93, 3.852, 3.787, 3.733, 3.686, 3.646, 3.61, 3.579, 3.552,...
    3.527, 3.505, 3.485, 3.467, 3.45, 3.435, 3.421, 3.408, 3.396, 3.385,...
    3.307, 3.261, 3.232, 3.195, 3.174, 3.098];% the t-distribution
            %}
            N = numel(eff);
            tau998 = 3.174;
            if N < 2% only one point left in the segment, stop searching for the change point
                return
            else
                llr = BleachCounter.change_point_wavelet(eff,sd);
                [Z, k] = max(abs(llr));
                if Z > tau998
                    counter = 0;
                    points(end+1) = k;
                    points1 = BleachCounter.recursion1(eff(1:k), sd, [], counter);
                    points2 = BleachCounter.recursion1(eff(k+1:end), sd, [], counter);
                    points = [points, points1, points2+k];
                elseif counter < 3% the parameter to dig in and find more short-lived transitions
                    counter = counter +1;
                    k = floor(numel(eff)/2);
                    points1 = BleachCounter.recursion1(eff(1:k), sd, [], counter);
                    points2 = BleachCounter.recursion1(eff(k+1:end), sd, [], counter);
                    points = [points, points1, points2+k];
                else
                    counter = 0;
                    return
                end
            end
        end
        % combine the idea of Haar wavelet and change point method
        function llr = change_point_wavelet(eff, sd)
            N = numel(eff);
            llr = zeros(size(eff));
            for i = 1 : N-1
                I1 = mean(eff(1:i));
                I2 = mean(eff(i+1:end));
                llr(i) = (I2 - I1)/sd/sqrt(1/i+1/(N-i));
            end
        end
    end %methods
end %class