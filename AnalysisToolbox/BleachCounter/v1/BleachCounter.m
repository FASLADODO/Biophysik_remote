classdef BleachCounter < handle
    %written by
    %C.P.Richter
    %Division of Biophysics / Group J.Piehler
    %University of Osnabrueck
    
    % v1.1: Signalpower || Photons and Cluster_ID || Traj_ID
    
    properties(Transient)
        WorkPath
        
        hFig
        
        hTrajSelectPopup
        
        hTrajAx
        hRawTraj
        hEstTraj
        
        hDummyMap
        
        hPushRoiAccept
        hPushRoiDiscard
        hPushIdAccept
        hPushIdDiscard
        
        hTrajChangeAx
        hRawTrajChange
        hEstTrajChange
        hLvl
        hNoiseLB
        hNoiseUB
        
        hTrajResAx
        hRawTrajRes
        
        hTrajChangeHistAx
        hIlluMap
        hPntFitRelErrGood
        hPntFitRelErrInter
        hPntFitRelErrBad
        
        hStepChangeMapAx
        hClusterPnt
        hCurrentClusterPnt
        
        hPntStepAccepted
        hPntStepDiscarded
        hPushAcceptAll
        hPushDiscardAll
        
        hImmCountHistAx
        hSpatSampMap
        
        hMinCountChangeSlider
        hMinCountChangeEdit
        CountChangeMin = 0
        CountChangeMax = inf
        
        hMinPeakLengthSlider
        hMinPeakLengthEdit
        PeakLengthMin = 0
        PeakLengthMax = inf
        
        hMinTransitLengthSlider
        hMinTransitLengthEdit
        TransitLengthMin = 0
        
        hLockButton
        
        hPopupIlluModel
        IlluModel = {'Gaussian','Polynom 22','Polynom 33','Polynom 44','Polynom 55','Spline','LOWESS'}
        hPushInt2Num
        
        CtrX
        CtrY
        IlluMapHat
        ThetaEst
        
        Cluster
        
        UUID %the unique ID's
        LinID
        NumCluster
        
        FOV %[xmin xmax ymin ymax]
        
        WeightOrthDist = 10 %used to constrain movement in the desired direction on the map
    end %properties
    
    methods
        %constructor
        function this = BleachCounter
            this.WorkPath = pwd;
            addpath(genpath(this.WorkPath))
            
            figPos = set_figure_position(1.618,0.85,'center');
            this.hFig = figure('Units','pixels',...
                'Name','BLEACH COUNTER v1.1',...
                'NumberTitle', 'off',...
                'DockControls', 'off',...
                'MenuBar','none',...
                'Toolbar','none',...
                'Color','w',...
                'KeyPressFcn',@(src,evnt)proc_keyboard(this,evnt),...
                'Position',figPos);
            
            hToolbar = uitoolbar(...
                'Parent',this.hFig);
            uipushtool(...
                'Parent', hToolbar,...
                'TooltipString','Load Image',...
                'CData', reshape([NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN 0 NaN 0 1 1 1 1 1 0 0 0 NaN NaN 0 0 0 NaN NaN 0 1 1 1 0 0 0 0 0 NaN 0 NaN NaN NaN 0 NaN 0 1 0 0 0 0 0 0 0 NaN 0 NaN NaN NaN 0 NaN 0 1 0 0 0 0 0 0 0 NaN NaN 0 0 0 NaN NaN 0 1 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN 0 1 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 NaN 0 1 0 0 0 0 0 0 0 NaN 0 NaN 0 NaN NaN NaN 0 1 0 0 0 0 0 0 0 NaN 0 NaN 0 NaN NaN NaN 0.500000000000000 0 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 NaN NaN 0.500000000000000 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0.500000000000000 0.500000000000000 NaN NaN 0 0 0 0 0 NaN NaN NaN 0 0 0.500000000000000 0.500000000000000 NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN NaN NaN 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN 0 NaN 0 1 1 1 1 1 0 0 0 NaN NaN 0 0 0 NaN NaN 0 1 1 1 0 0 0 0 0 NaN 0 NaN NaN NaN 0 NaN 0 1 0 0 0 0 0 0 0 NaN 0 NaN NaN NaN 0 NaN 0 1 0 0 0 0 0 0 0 NaN NaN 0 0 0 NaN NaN 0 1 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN 0 1 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 NaN 0 1 0 0 0 0 0 0 0 NaN 0 NaN 0 NaN NaN NaN 0 1 0 0 0 0 0 0 0 NaN 0 NaN 0 NaN NaN NaN 0.500000000000000 0 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 NaN NaN 0.500000000000000 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0.500000000000000 0.500000000000000 NaN NaN 0 0 0 0 0 NaN NaN NaN 0 0 0.500000000000000 0.500000000000000 NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN NaN NaN 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN 0 NaN 0 1 1 1 1 1 0 0 0 NaN NaN 0 0 0 NaN NaN 0 1 1 1 0 0 0 0 0 NaN 0 NaN NaN NaN 0 NaN 0 1 0 0 0 0 0 0 0 NaN 0 NaN NaN NaN 0 NaN 0 1 0 0 0 0 0 0 0 NaN NaN 0 0 0 NaN NaN 0 1 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN 0 1 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 NaN 0 1 0 0 0 0 0 0 0 NaN 0 NaN 0 NaN NaN NaN 0 1 0 0 0 0 0 0 0 NaN 0 NaN 0 NaN NaN NaN 0.500000000000000 0 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 NaN NaN 0.500000000000000 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0.500000000000000 0.500000000000000 NaN NaN 0 0 0 0 0 NaN NaN NaN 0 0 0.500000000000000 0.500000000000000 NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN NaN NaN 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN 0 0 0 NaN NaN],[16 16 3]),...
                'ClickedCallback', @(src,evnt)load_data(this));
            uitoggletool(...
                'Parent', hToolbar,...
                'Tag','Zoom',...
                'TooltipString','Zoom',...
                'CData', reshape([NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN NaN 0 0 0 0 0 0 NaN 0 0 0 0 0 NaN 0 NaN NaN 0 0 1 1 0 0 NaN NaN NaN 0 NaN NaN NaN 0 NaN 0 0 1 1 1 1 0 0 NaN NaN 0 NaN NaN NaN 0 NaN 0 0 1 1 1 1 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 1 1 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN NaN 0 0 0 0 0 0 NaN 0 0 0 0 0 NaN 0 NaN NaN 0 0 1 1 0 0 NaN NaN NaN 0 NaN NaN NaN 0 NaN 0 0 1 1 1 1 0 0 NaN NaN 0 NaN NaN NaN 0 NaN 0 0 1 1 1 1 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 1 1 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 NaN NaN 0 0 0 0 0 0 NaN 0 0 0 0 0 NaN 0 NaN NaN 0 0 1 1 0 0 NaN NaN NaN 0 NaN NaN NaN 0 NaN 0 0 1 1 1 1 0 0 NaN NaN 0 NaN NaN NaN 0 NaN 0 0 1 1 1 1 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 1 1 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0 0 0.500000000000000 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0.500000000000000 0.500000000000000 NaN NaN NaN NaN],[16 16 3]),...
                'Separator','on',...
                'ClickedCallback', @(src,evnt)set_zoom(src,'hFig',this.hFig));
            uitoggletool(...
                'Parent', hToolbar,...
                'Tag','Pan',...
                'TooltipString','Pan',...
                'CData', reshape([NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 0 NaN NaN NaN 0 NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN 0 0 0 0 0 NaN 0 0 NaN 0 0 0 0 0 NaN NaN 0 0 0 0 0 NaN 0 0 NaN 0 0 0 0 0 NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 0 NaN NaN NaN 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 0 NaN NaN NaN 0 NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN 0 0 0 0 0 NaN 0 0 NaN 0 0 0 0 0 NaN NaN 0 0 0 0 0 NaN 0 0 NaN 0 0 0 0 0 NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 0 NaN NaN NaN 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 0 NaN NaN NaN 0 NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN 0 0 0 0 0 NaN 0 0 NaN 0 0 0 0 0 NaN NaN 0 0 0 0 0 NaN 0 0 NaN 0 0 0 0 0 NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN 0 NaN NaN NaN 0 0 NaN NaN NaN 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN],[16 16 3]),...
                'ClickedCallback', @(src,evnt)set_pan(src,'hFig',this.hFig));
            uipushtool(...
                'Parent', hToolbar,...
                'TooltipString','Open Documentation',...
                'CData', reshape([NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 0 1 1 1 0 0 1 1 1 1 1 0 0 0 0 0 0 1 1 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 0 1 1 1 0 0 1 1 1 1 1 0 0 0 0 0 0 1 1 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 0 1 1 1 0 0 1 1 1 1 1 0 0 0 0 0 0 1 1 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN 0 0 0 0 0 0 0 0 0 0 NaN NaN NaN NaN NaN NaN NaN NaN 0 0 0 0 0 0 NaN NaN NaN NaN NaN],[16 16 3]),...
                'Separator','on',...
                'ClickedCallback', @(src,evnt)set_zoom(src,'hFig',this.hFig));
            
            %%
            hPanelNavTraj = uipanel(...
                'Parent',this.hFig,...
                'Units','normalized',...
                'FontUnits','normalized',...
                'FontSize',0.1,...
                'backgroundcolor','w',...
                'Position',[0 19/20 1/4 1/20]);
            
            uicontrol(...
                'Parent',hPanelNavTraj,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [0 0 1/8 1],...
                'FontUnits','normalized',...
                'FontSize', 0.8,...
                'String', '<html> <p>&#9668</p>',...
                'TooltipString','Select previous trajectory ID. [Ctrl + <-]',...
                'Callback', @(src,evnt)previous_traj_ID(this));
            
            uicontrol(...
                'Parent', hPanelNavTraj,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [1/8 0 4/8 1],...
                'String', 'Trajectory ID:',...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'backgroundcolor','w',...
                'HorizontalAlignment', 'center');
            
            this.hTrajSelectPopup = uicontrol(...
                'Parent',hPanelNavTraj,...
                'Style', 'popupmenu',...
                'Units','normalized',...
                'Position', [5/8 -0.5 2/8 1.48],...
                'FontUnits','normalized',...
                'FontSize', 0.4,...
                'String','None',...
                'TooltipString','Select trajectory ID by list.',...
                'Callback', @(src,evnt)update_step_detection(this));
            
            uicontrol(...
                'Parent',hPanelNavTraj,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [7/8 0 1/8 1],...
                'FontUnits','normalized',...
                'FontSize', 0.8,...
                'String', '<html> <p>&#9658</p>',...
                'TooltipString','Select next trajectory ID. [Ctrl + ->]',...
                'Callback', @(src,evnt)next_traj_ID(this));
            
            %%
            hPanelStepChangeMap = uipanel(...
                'Units','normalized',...
                'backgroundcolor','w',...
                'Position',[0 11.5/20 1/4 7.5/20]);
            
            this.hStepChangeMapAx = axes(...
                'Parent',hPanelStepChangeMap,...
                'Units','normalized',...
                'OuterPosition', [0 0 1 1],...
                'DataAspectRatio',[1 1 1],...
                'Box','on');
            
            this.hDummyMap = imagesc(0.5,0.5,0.5,...
                'Parent',this.hStepChangeMapAx);
            
            xlabel(this.hStepChangeMapAx,'x-position')
            ylabel(this.hStepChangeMapAx,'y-position')
            title(this.hStepChangeMapAx,'Current Selection and Navigation:')
            
            this.hClusterPnt = line(...
                'Parent',this.hStepChangeMapAx,...
                'xdata',[],'ydata',[],...
                'linestyle','none',...
                'color',[0.7,0.7,0.7],...
                'marker','.',...
                'markersize',10);
            
            this.hCurrentClusterPnt = line(...
                'Parent',this.hStepChangeMapAx,...
                'xdata',[],'ydata',[],...
                'color','k',...
                'marker','.',...
                'markersize',15);
            
            this.hPntStepDiscarded = line(...
                'Parent',this.hStepChangeMapAx,...
                'xdata',[],'ydata',[],...
                'linestyle','none',...
                'color','r',...
                'marker','.',...
                'markersize',10);
            
            this.hPntStepAccepted = line(...
                'Parent',this.hStepChangeMapAx,...
                'xdata',[],'ydata',[],...
                'linestyle','none',...
                'color','g',...
                'marker','.',...
                'markersize',10);
            
            %%
            hPanelNavMap = uipanel(...
                'Parent',this.hFig,...
                'Units','normalized',...
                'FontUnits','normalized',...
                'FontSize',0.1,...
                'backgroundcolor','w',...
                'Position',[0 8.5/20 1/4 3/20]);
            
            uicontrol(...
                'Parent',hPanelNavMap,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [2.5/8 1/3 1/8 1/3],...
                'FontUnits','normalized',...
                'FontSize', 0.8,...
                'String', '<html> <p>&#9668</p>',...
                'TooltipString','Select neighboring trajectory to the left.',...
                'Callback', @(src,evnt)left_traj(this));
            
            uicontrol(...
                'Parent',hPanelNavMap,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [3.5/8 1/3 1/8 1/3],...
                'FontUnits','normalized',...
                'FontSize', 0.8,...
                'String', '<html> <p>&#10011</p>',...
                'TooltipString','Select tajectory by mouse.',...
                'Callback', @(src,evnt)select_traj(this));
            
            uicontrol(...
                'Parent',hPanelNavMap,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [4.5/8 1/3 1/8 1/3],...
                'FontUnits','normalized',...
                'FontSize', 0.8,...
                'String', '<html> <p>&#9658</p>',...
                'TooltipString','Select neighboring trajectory to the right.',...
                'Callback', @(src,evnt)right_traj(this));
            
            uicontrol(...
                'Parent',hPanelNavMap,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [3.5/8 2/3 1/8 1/3],...
                'FontUnits','normalized',...
                'FontSize', 0.8,...
                'String', '<html> <p>&#9650</p>',...
                'TooltipString','Select neighboring trajectory above.',...
                'Callback', @(src,evnt)above_traj(this));
            
            uicontrol(...
                'Parent',hPanelNavMap,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [3.5/8 0 1/8 1/3],...
                'FontUnits','normalized',...
                'FontSize', 0.8,...
                'String', '<html> <p>&#9660</p>',...
                'TooltipString','Select neighboring trajectory below.',...
                'Callback', @(src,evnt)below_traj(this));
            
            %%
            uicontrol(...
                'Parent', hPanelNavMap,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0 1/3 2.5/8 1/3],...
                'String', 'by ROI:',...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'backgroundcolor','w',...
                'HorizontalAlignment', 'center');
            
            this.hPushRoiAccept = uicontrol(...
                'Parent',hPanelNavMap,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [0 2/3 3.5/8 1/3],...
                'FontUnits','normalized',...
                'FontSize', 0.6,...
                'String', 'Accept',...
                'Enable','off',...
                'TooltipString','Accept bleaching steps within a defined area.',...
                'Callback', @(src,evnt)select_by_ROI(this,src));
            
            this.hPushRoiDiscard = uicontrol(...
                'Parent',hPanelNavMap,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [0 0 3.5/8 1/3],...
                'FontUnits','normalized',...
                'FontSize', 0.6,...
                'String', 'Discard',...
                'Enable','off',...
                'TooltipString','Discard bleaching steps within a defined area.',...
                'Callback', @(src,evnt)select_by_ROI(this,src));
            
            %%
            uicontrol(...
                'Parent', hPanelNavMap,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [5.5/8 1/3 2.5/8 1/3],...
                'String', 'by ID:',...
                'FontUnits','normalized',...
                'FontSize',0.5,...
                'backgroundcolor','w',...
                'HorizontalAlignment', 'center');
            
            this.hPushIdAccept = uicontrol(...
                'Parent',hPanelNavMap,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [4.5/8 2/3 3.5/8 1/3],...
                'FontUnits','normalized',...
                'FontSize', 0.6,...
                'String', 'Accept',...
                'Enable','off',...
                'TooltipString','Accept all bleaching steps of the selected trajectory. [Ctrl+A]',...
                'Callback', @(src,evnt)select_by_ID(this,'Accept'));
            
            this.hPushIdDiscard = uicontrol(...
                'Parent',hPanelNavMap,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [4.5/8 0 3.5/8 1/3],...
                'FontUnits','normalized',...
                'FontSize', 0.6,...
                'String', 'Discard',...
                'Enable','off',...
                'TooltipString','Discard bleaching steps of the selected trajectory. [Ctrl+D]',...
                'Callback', @(src,evnt)select_by_ID(this,'Discard'));
            
            %%
            hPanelImmCountHist = uipanel(...
                'Units','normalized',...
                'backgroundcolor','w',...
                'Position',[0 1/20 1/4 7.5/20]);
            
            this.hImmCountHistAx = axes(...
                'Parent',hPanelImmCountHist,...
                'Units','normalized',...
                'OuterPosition', [0 0 1 1],...
                'Box','on');
            
            this.hSpatSampMap = imagesc(0.5,0.5,0.5,...
                'Parent',this.hImmCountHistAx);
            
            xlabel(this.hImmCountHistAx,'x-position')
            ylabel(this.hImmCountHistAx,'y-position')
            title(this.hImmCountHistAx,'\color{black} Coloring: \color[rgb]{0.85 0.16 0}insufficient \color{black}to \color[rgb]{0 0.5 0}sufficient \color{black}spatial sampling:')
            
            %%
            hPanelStepSel = uipanel(...
                'Parent',this.hFig,...
                'Units','normalized',...
                'FontUnits','normalized',...
                'FontSize',0.1,...
                'backgroundcolor','w',...
                'Position',[0 0 1/4 1/20]);
            
            this.hPushAcceptAll = uicontrol(...
                'Parent',hPanelStepSel,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [0 0 1/2 1],...
                'FontUnits','normalized',...
                'FontSize', 0.6,...
                'String', 'Accept All',...
                'Enable','off',...
                'Callback', @(src,evnt)accept_all_steps(this));
            
            this.hPushDiscardAll = uicontrol(...
                'Parent',hPanelStepSel,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [1/2 0 1/2 1],...
                'FontUnits','normalized',...
                'FontSize', 0.6,...
                'String', 'Discard All',...
                'Enable','off',...
                'Callback', @(src,evnt)discard_all_steps(this));
            
            %%
            hPanelTraj = uipanel(...
                'Units','normalized',...
                'backgroundcolor','w',...
                'Position',[1/4 0 2/4 1]);
            
            this.hTrajAx = axes(...
                'Parent',hPanelTraj,...
                'Units','normalized',...
                'Position', [0.085 0.58 0.9 0.37],...
                'Box','on',...
                'XTickLabel',[]);
            ylabel(this.hTrajAx,'Signal')
            
            this.hRawTraj = line(...
                'Parent',this.hTrajAx,...
                'xdata',[],'ydata',[],...
                'Color','k',...
                'Marker','.',...
                'markersize',16,...
                'Linewidth',1);
            
            this.hEstTraj = line(...
                'Parent',this.hTrajAx,...
                'xdata',[],'ydata',[],...
                'Color','r',...
                'Linewidth',3);
            
            %%
            %             hPanelTrajChange = uipanel(...
            %                 'Units','normalized',...
            %                 'backgroundcolor','w',...
            %                 'Position',[2/9 3/10 2/9 6/10]);
            %             'Position',[0 5/10 2/3 2/10]);
            
            this.hTrajChangeAx = axes(...
                'Parent',hPanelTraj,...
                'Units','normalized',...
                'Position', [0.085 0.315 0.9 0.265],...
                'Box','on',...
                'NextPlot','add',...
                'XTickLabel',[]);
            
            this.hNoiseLB = line(...
                'Parent',this.hTrajChangeAx,...
                'xdata',[],'ydata',[],...
                'Color','c',...
                'Linewidth',1);
            this.hNoiseUB = line(...
                'Parent',this.hTrajChangeAx,...
                'xdata',[],'ydata',[],...
                'Color','c',...
                'Linewidth',1);
            
            this.hEstTrajChange = stem(0,0,...
                'Parent',this.hTrajChangeAx,...
                'Color','r',...
                'Marker','none',...
                'Linewidth',3);
            
            this.hRawTrajChange = stem(0,0,...
                'Parent',this.hTrajChangeAx,...
                'Color','k',...
                'Marker','none',...
                'Linewidth',2);
            ylabel(this.hTrajChangeAx,'Signal Difference')
            
            %%
            %             hPanelTrajRes = uipanel(...
            %                 'Units','normalized',...
            %                 'backgroundcolor','w',...
            %                 'Position',[4/9 3/10 2/9 6/10]);
            %             'Position',[0 3/10 2/3 2/10]);
            
            this.hTrajResAx = axes(...
                'Parent',hPanelTraj,...
                'Units','normalized',...
                'Position', [0.085 0.05 0.9 0.265],...
                'Box','on');
            
            this.hRawTrajRes = stem(0,0,...
                'Parent',this.hTrajResAx,...
                'Color','k',...
                'Marker','none',...
                'Linewidth',2);
            xlabel(this.hTrajResAx,'Time [frame]')
            ylabel(this.hTrajResAx,'Residual')
            
            %%
            uicontrol(...
                'Parent', this.hFig,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [3/4 19/20 1/4 1/20],...
                'String', 'STASI Settings:',...
                'FontUnits','normalized',...
                'FontSize',0.65,...
                'backgroundcolor','w',...
                'HorizontalAlignment', 'center');
            
            hPanelStasiSetting = uipanel(...
                'Parent',this.hFig,...
                'TitlePosition','centertop',...
                'Units','normalized',...
                'FontUnits','normalized',...
                'FontSize',0.075,...
                'backgroundcolor','w',...
                'Position',[3/4 11.5/20 1/4 7.5/20]);
            
            uicontrol(...
                'Parent', hPanelStasiSetting,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0 12/14 1 2/14],...
                'String', sprintf('Min. Signal Change:'),...
                'FontUnits','normalized',...
                'FontSize',0.4,...
                'backgroundcolor','w',...
                'HorizontalAlignment', 'center');
            this.hMinCountChangeSlider = uicontrol(...
                'Parent', hPanelStasiSetting,...
                'Style', 'slider',...
                'Min',0,...
                'Max',1,...
                'Value', 0,...
                'Units', 'normalized',...
                'Position', [0 10/14 3/4 2/14]);
            addlistener(this.hMinCountChangeSlider,'ContinuousValueChange',...
                @(src,event)set_min_count_change(this,src));
            this.hMinCountChangeEdit = uicontrol(...
                'Parent', hPanelStasiSetting,...
                'Style', 'edit',...
                'Units','normalized',...
                'Position', [3/4 10/14 1/4 2/14],...
                'FontUnits','normalized',...
                'FontSize',0.4,...
                'String', 0,...
                'Callback', @(src,evnt)set_min_count_change(this,src));
            
            
            uicontrol(...
                'Parent', hPanelStasiSetting,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0 8/14 1 2/14],...
                'String', sprintf('Min. Peak Length [frames]:'),...
                'FontUnits','normalized',...
                'FontSize',0.4,...
                'backgroundcolor','w',...
                'HorizontalAlignment', 'center');
            this.hMinPeakLengthSlider = uicontrol(...
                'Parent', hPanelStasiSetting,...
                'Style', 'slider',...
                'Min',0,...
                'Value', 0,...
                'Units', 'normalized',...
                'Position', [0 6/14 3/4 2/14]);
            addlistener(this.hMinPeakLengthSlider,'ContinuousValueChange',...
                @(src,event)set_min_peak_length(this,src));
            this.hMinPeakLengthEdit = uicontrol(...
                'Parent', hPanelStasiSetting,...
                'Style', 'edit',...
                'Units','normalized',...
                'Position', [3/4 6/14 1/4 2/14],...
                'FontUnits','normalized',...
                'FontSize',0.4,...
                'String', 0,...
                'Callback', @(src,evnt)set_min_peak_length(this,src));
            
            
            uicontrol(...
                'Parent', hPanelStasiSetting,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [0 4/14 1 2/14],...
                'String', sprintf('Min. Transit Length [frames]:'),...
                'FontUnits','normalized',...
                'FontSize',0.4,...
                'backgroundcolor','w',...
                'HorizontalAlignment', 'center');
            this.hMinTransitLengthSlider = uicontrol(...
                'Parent', hPanelStasiSetting,...
                'Style', 'slider',...
                'Min',0,...
                'Value', 0,...
                'Units', 'normalized',...
                'Position', [0 2/14 3/4 2/14]);
            addlistener(this.hMinTransitLengthSlider,'ContinuousValueChange',...
                @(src,event)set_min_transit_length(this,src));
            this.hMinTransitLengthEdit = uicontrol(...
                'Parent', hPanelStasiSetting,...
                'Style', 'edit',...
                'Units','normalized',...
                'Position', [3/4 2/14 1/4 2/14],...
                'FontUnits','normalized',...
                'FontSize',0.4,...
                'String', 0,...
                'Callback', @(src,evnt)set_min_transit_length(this,src));
            
            this.hLockButton = uicontrol(...
                'Parent',hPanelStasiSetting,...
                'Style', 'togglebutton',...
                'Units','normalized',...
                'Position', [0 0 1 2/14],...
                'FontUnits','normalized',...
                'FontSize', 0.5,...
                'String', 'Lock Settings',...
                'Callback', @(src,evnt)lock_and_analyse_all(this));
            
            %%
            uicontrol(...
                'Parent', this.hFig,...
                'Style', 'Edit',...
                'Enable','inactive',...
                'Units','normalized',...
                'Position', [3/4 10.5/20 1.5/16 1/20],...
                'String', 'Model:',...
                'FontUnits','normalized',...
                'FontSize',0.65,...
                'backgroundcolor','w',...
                'HorizontalAlignment', 'center');
            
            this.hPopupIlluModel = uicontrol(...
                'Parent',this.hFig,...
                'Style', 'popupmenu',...
                'Units','normalized',...
                'Position', [3/4+1.5/16 9.97/20 2.48/16 1.5/20],...
                'FontUnits','normalized',...
                'FontSize', 0.4,...
                'String',this.IlluModel,...
                'TooltipString','Select model for the inhomogeneous illumination.',...
                'Callback', @(src,evnt)update_step_map(this));
            
            hPanelTrajChangeHist = uipanel(...
                'Units','normalized',...
                'backgroundcolor','w',...
                'Position',[3/4 1/20 1/4 9.5/20]);
            
            this.hTrajChangeHistAx = axes(...
                'Parent',hPanelTrajChangeHist,...
                'Units','normalized',...
                'OuterPosition', [0 0 1 0.95],...
                'Box','on');
            
            this.hIlluMap = imagesc(0.5,0.5,0.5,...
                'Parent',this.hTrajChangeHistAx);
            
            this.hPntFitRelErrBad = line(...
                'Parent',this.hTrajChangeHistAx,...
                'xdata',[],'ydata',[],...
                'linestyle','none',...
                'color','r',...
                'marker','.',...
                'markersize',10);
            
            this.hPntFitRelErrInter = line(...
                'Parent',this.hTrajChangeHistAx,...
                'xdata',[],'ydata',[],...
                'linestyle','none',...
                'color',[1 0.8 0],...
                'marker','.',...
                'markersize',10);
            
            this.hPntFitRelErrGood = line(...
                'Parent',this.hTrajChangeHistAx,...
                'xdata',[],'ydata',[],...
                'linestyle','none',...
                'color','g',...
                'marker','.',...
                'markersize',10);
            
            xlabel(this.hTrajChangeHistAx,'x-position')
            ylabel(this.hTrajChangeHistAx,'y-position')
            title(this.hTrajChangeHistAx,'\color{black} Rel. Error \color{green}< 10% \color{black} || \color[rgb]{1 0.8 0}< 25% \color{black} || \color{red}> 25%')
            
            colormap(gray(16))
            hCbar = colorbar('location','NorthOutside');
            xlabel(hCbar,'Step Magnitude')
            
            %%
            this.hPushInt2Num = uicontrol(...
                'Parent',this.hFig,...
                'Style', 'pushbutton',...
                'Units','normalized',...
                'Position', [3/4 0 1/4 1/20],...
                'FontUnits','normalized',...
                'FontSize', 0.5,...
                'String', 'Convert to Molecule Number',...
                'Enable','off',...
                'Callback', @(src,evnt)save_results(this));
            
            %%
            axis([this.hStepChangeMapAx this.hImmCountHistAx this.hTrajChangeHistAx],'image','xy')
            linkaxes([this.hStepChangeMapAx this.hImmCountHistAx this.hTrajChangeHistAx],'xy')
            
            linkaxes([this.hTrajAx this.hTrajChangeAx this.hTrajResAx],'x')
        end %fun
        function load_data(this)
            [fileName,filePath] = uigetfile('*.txt');
            
            listLoad = {...
                'Position_X',...
                'Position_Y',...
                'Time',...
                'Photons',...
                'Signalpower',...
                'Cluster_ID',...
                'Traj_ID'};
            
            isMatch = cellfun(@(x)strfind(fileName,x),listLoad,'un',0);
            fileName = fileName(1:isMatch{not(cellfun('isempty',isMatch))}-1);
            
            x = dlmread(fullfile(filePath,[fileName,listLoad{1},'.txt']),'\t',1,0);
            y = dlmread(fullfile(filePath,[fileName,listLoad{2},'.txt']),'\t',1,0);
            t = dlmread(fullfile(filePath,[fileName,listLoad{3},'.txt']),'\t',1,0);
            try
                A = dlmread(fullfile(filePath,[fileName,listLoad{4},'.txt']),'\t',1,0);
            catch
                A = dlmread(fullfile(filePath,[fileName,listLoad{5},'.txt']),'\t',1,0);
            end %try    
            try
                ID = dlmread(fullfile(filePath,[fileName,listLoad{6},'.txt']),'\t',1,0);
            catch
                ID = dlmread(fullfile(filePath,[fileName,listLoad{7},'.txt']),'\t',1,0);
            end %try
            
            %% pre-process data
            this.Cluster = [];
            this.CtrX = [];
            this.CtrY = [];
            this.IlluMapHat = [];
            this.ThetaEst = [];
            
            this.UUID = unique(ID);
            this.NumCluster = numel(this.UUID);
            this.LinID = colvec(1:this.NumCluster);
            
            for idxCluster = 1:this.NumCluster
                take = find(ID == this.UUID(idxCluster));
                
                %sort to ascend in time
                [this.Cluster(idxCluster).t,idxSort] = sort(t(take));
                this.Cluster(idxCluster).x = x(take(idxSort));
                this.Cluster(idxCluster).y = y(take(idxSort));
                this.Cluster(idxCluster).A = A(take(idxSort));
                
                %check there are no duplicates -> for the moment average in case (fix later)
                if numel(unique(t(take))) < numel(t(take))
                    this.Cluster(idxCluster).x = ...
                        nonzeros(accumarray(this.Cluster(idxCluster).t,...
                        this.Cluster(idxCluster).x,[],@(x)mean(x)));
                    this.Cluster(idxCluster).y = ...
                        nonzeros(accumarray(this.Cluster(idxCluster).t,...
                        this.Cluster(idxCluster).y,[],@(x)mean(x)));
                    this.Cluster(idxCluster).A = ...
                        nonzeros(accumarray(this.Cluster(idxCluster).t,...
                        this.Cluster(idxCluster).A,[],@(x)mean(x)));
                end %if
                
                this.Cluster(idxCluster).xCtr = mean(this.Cluster(idxCluster).x);
                this.Cluster(idxCluster).yCtr = mean(this.Cluster(idxCluster).y);
                this.Cluster(idxCluster).T = range(this.Cluster(idxCluster).t)+1;
            end %for
            this.FOV = [min(vertcat(this.Cluster.x)),...
                max(vertcat(this.Cluster.x)),...
                min(vertcat(this.Cluster.y)),...
                max(vertcat(this.Cluster.y))];
            
            %% set up GUI
            reset_GUI(this)
            
            set(this.hTrajSelectPopup,...
                'String',num2cell(this.LinID),...
                'Value',1)
            
            ctrX = (0:this.FOV(2))+0.5*rem(this.FOV(2)-this.FOV(1),1);
            ctrY = (0:this.FOV(4))+0.5*rem(this.FOV(4)-this.FOV(3),1);
            set(this.hDummyMap,...
                'xdata',ctrX,...
                'ydata',ctrY,...
                'cdata',ones(numel(ctrY),numel(ctrX),3))
            
            this.CountChangeMax = ceil(log10(...
                max(vertcat(this.Cluster.A)) - min(vertcat(this.Cluster.A))));
            set(this.hMinCountChangeSlider,...
                'Max', this.CountChangeMax,...
                'SliderStep', [0.1 1]./this.CountChangeMax)
            
            this.PeakLengthMax = ceil(max(vertcat(this.Cluster.t))/2);
            set(this.hMinPeakLengthSlider,...
                'Max', this.PeakLengthMax,...
                'SliderStep', [1 10]./this.PeakLengthMax)
            set(this.hMinTransitLengthSlider,...
                'Max', this.PeakLengthMax,...
                'SliderStep', [1 10]./this.PeakLengthMax)
            
            set(this.hClusterPnt,...
                'xdata',vertcat(this.Cluster.x),...
                'ydata',vertcat(this.Cluster.y))
            axis(this.hStepChangeMapAx,this.FOV)
            
            update_step_detection(this)
        end %fun
        
        function reset_GUI(this)
            set([...
                this.hPushRoiAccept,...
                this.hPushRoiDiscard,...
                this.hPushIdAccept,...
                this.hPushIdDiscard,...
                this.hPushAcceptAll,...
                this.hPushDiscardAll,...
                this.hPushInt2Num],...
                'Enable','off')
            
            set(this.hLockButton,'Value',0)
            set([...
                this.hMinCountChangeSlider,...
                this.hMinPeakLengthSlider,...
                this.hMinTransitLengthSlider,...
                ],'Enable','on','Value',0)
            set([...
                this.hMinCountChangeEdit,...
                this.hMinPeakLengthEdit,...
                this.hMinTransitLengthEdit,...
                ],'Enable','on','String',0)
            
            set(this.hPntStepAccepted,...
                'xdata',[],...
                'ydata',[])
            
            set(this.hPntStepDiscarded,...
                'xdata',[],...
                'ydata',[])
            
            set(this.hIlluMap,...
                'xdata',[],...
                'ydata',[],...
                'cdata',[])
            
            set(this.hPntFitRelErrGood,...
                'xdata',[],...
                'ydata',[])
            set(this.hPntFitRelErrInter,...
                'xdata',[],...
                'ydata',[])
            set(this.hPntFitRelErrBad,...
                'xdata',[],...
                'ydata',[])
            
            set(this.hSpatSampMap,...
                'xdata',[],...
                'ydata',[],...
                'cdata',[])
        end %fun
        
        %% setter
        function previous_traj_ID(this)
            ID = get(this.hTrajSelectPopup,'Value');
            ID = ID - 1;
            if ID > 0
                set(this.hTrajSelectPopup,'Value',ID);
                update_step_detection(this)
            end %if
        end %fun
        function next_traj_ID(this)
            ID = get(this.hTrajSelectPopup,'Value');
            ID = ID + 1;
            if ID <= this.NumCluster
                set(this.hTrajSelectPopup,'Value',ID);
                update_step_detection(this)
            end %if
        end %fun
        function select_traj(this)
            selection = impoint(this.hStepChangeMapAx);
            pos = getPosition(selection);
            delete(selection)
            
            ID = get(this.hTrajSelectPopup,'String');
            ID = cell2mat(cellfun(@(x)str2double(x),ID,'un',0));
            
            xPos = vertcat(this.Cluster(ID).xCtr);
            yPos = vertcat(this.Cluster(ID).yCtr);
            
            d = sqrt((xPos-pos(1)).^2 + (yPos-pos(2)).^2);
            idxMatch = find(ID == ID(d == min(d)));
            
            set(this.hTrajSelectPopup,...
                'Value',idxMatch);
            update_step_detection(this)
        end %fun
        
        function left_traj(this)
            ID = get(this.hTrajSelectPopup,'String');
            ID = cell2mat(cellfun(@(x)str2double(x),ID,'un',0));
            i = get(this.hTrajSelectPopup,'Value');
            
            xPos = vertcat(this.Cluster(ID).xCtr);
            yPos = vertcat(this.Cluster(ID).yCtr);
            
            dx = xPos - this.Cluster(ID(i)).xCtr;
            dy = yPos - this.Cluster(ID(i)).yCtr;
            
            take = find(dx < 0); %left
            
            if not(isempty(take))
                d = sqrt(dx(take).^2+this.WeightOrthDist*dy(take).^2);
                ID = find(ID == ID(take(d == min(d))));
                
                set(this.hTrajSelectPopup,'Value',ID);
                update_step_detection(this)
            end %if
        end %fun
        function right_traj(this)
            ID = get(this.hTrajSelectPopup,'String');
            ID = cell2mat(cellfun(@(x)str2double(x),ID,'un',0));
            i = get(this.hTrajSelectPopup,'Value');
            
            xPos = vertcat(this.Cluster(ID).xCtr);
            yPos = vertcat(this.Cluster(ID).yCtr);
            
            dx = xPos - this.Cluster(ID(i)).xCtr;
            dy = yPos - this.Cluster(ID(i)).yCtr;
            
            take = find(dx > 0); %right
            
            if not(isempty(take))
                d = sqrt(dx(take).^2+this.WeightOrthDist*dy(take).^2);
                ID = find(ID == ID(take(d == min(d))));
                
                set(this.hTrajSelectPopup,'Value',ID);
                update_step_detection(this)
            end %if
        end %fun
        function above_traj(this)
            ID = get(this.hTrajSelectPopup,'String');
            ID = cell2mat(cellfun(@(x)str2double(x),ID,'un',0));
            i = get(this.hTrajSelectPopup,'Value');
            
            xPos = vertcat(this.Cluster(ID).xCtr);
            yPos = vertcat(this.Cluster(ID).yCtr);
            
            dx = xPos - this.Cluster(ID(i)).xCtr;
            dy = yPos - this.Cluster(ID(i)).yCtr;
            
            take = find(dy > 0); %up
            
            if not(isempty(take))
                d = sqrt(dy(take).^2+this.WeightOrthDist*dx(take).^2);
                ID = find(ID == ID(take(d == min(d))));
                
                set(this.hTrajSelectPopup,'Value',ID);
                update_step_detection(this)
            end %if
        end %fun
        function below_traj(this)
            ID = get(this.hTrajSelectPopup,'String');
            ID = cell2mat(cellfun(@(x)str2double(x),ID,'un',0));
            i = get(this.hTrajSelectPopup,'Value');
            
            xPos = vertcat(this.Cluster(ID).xCtr);
            yPos = vertcat(this.Cluster(ID).yCtr);
            
            dx = xPos - this.Cluster(ID(i)).xCtr;
            dy = yPos - this.Cluster(ID(i)).yCtr;
            
            take = find(dy < 0); %down
            
            if not(isempty(take))
                d = sqrt(dy(take).^2+this.WeightOrthDist*dx(take).^2);
                ID = find(ID == ID(take(d == min(d))));
                
                set(this.hTrajSelectPopup,'Value',ID);
                update_step_detection(this)
            end %if
        end %fun
        
        function select_by_ID(this,mode)
            ID = get_traj_ID(this);
            
            switch mode
                case 'Accept'
                    accept_traj_steps(this,ID)
                case 'Discard'
                    discard_traj_steps(this,ID)
            end %switch
            
            update_fiducial_map(this)
        end %fun
        function select_by_ROI(this,src)
            roiType = generate_pushdown_decision_dialog('',...
                {'Choose ROI Type:'},{'Rectangle','Ellipse',...
                'Polygon Area','Freehand Area'});
            
            if not(isempty(roiType))
            [ROI,hRoi] = ROI_draw(roiType,this.hStepChangeMapAx);
            delete(hRoi)
            
            %%
            xLvl = vertcat(this.Cluster.xLvl);
            yLvl = vertcat(this.Cluster.yLvl);
            useLvl = vertcat(this.Cluster.useLvl);
            
            isIn = IMG_BW_PNT_inside([xLvl yLvl],transpose(ROI.Mask));
            
            switch get(src,'String')
                case 'Accept'
                    useLvl(isIn) = true;
                case 'Discard'
                    useLvl(isIn) = false;
            end %switch
            
            cnt = 0;
            for idxCluster = 1:this.NumCluster
                for idxStep = 1:this.Cluster(idxCluster).NumLvl
                    cnt = cnt + 1;
                    
                    if isIn(cnt)
                        this.Cluster(idxCluster).useLvl(idxStep) = useLvl(cnt);
                    end %if
                end %for
            end %for
            
            %%
            update_step_detection(this)
            update_fiducial_map(this)
            end %if
        end %fun
        
        function set_min_count_change(this,src)
            switch get(src,'Style')
                case 'slider'
                    value = get(src,'Value');
                case 'edit'
                    value = log10(str2double(get(src,'String')));
            end %switch
            value = min(this.CountChangeMax,max(0,value));
            
            this.CountChangeMin = value;
            set(this.hMinCountChangeEdit,'String',10^value)
            set(this.hMinCountChangeSlider,'Value',value)
            
            update_step_detection(this)
        end %fun
        function set_min_peak_length(this,src)
            switch get(src,'Style')
                case 'slider'
                    value = round(get(src,'Value'));
                case 'edit'
                    value = round(str2double(get(src,'String')));
            end %switch
            value = min(this.PeakLengthMax,max(0,value));
            
            this.PeakLengthMin = value;
            set(this.hMinPeakLengthEdit,'String',value)
            set(this.hMinPeakLengthSlider,'Value',value)
            
            update_step_detection(this)
        end %fun
        function set_min_transit_length(this,src)
            switch get(src,'Style')
                case 'slider'
                    value = round(get(src,'Value'));
                case 'edit'
                    value = round(str2double(get(src,'String')));
            end %switch
            value = min(this.PeakLengthMax,max(0,value));
            
            this.TransitLengthMin = value;
            set(this.hMinTransitLengthEdit,'String',value)
            set(this.hMinTransitLengthSlider,'Value',value)
            
            update_step_detection(this)
        end %fun
                
        %% getter
        function ID = get_traj_ID(this)
            ID = get(this.hTrajSelectPopup,'String');
            ID = cell2mat(cellfun(@(x)str2double(x),ID,'un',0));
            i = get(this.hTrajSelectPopup,'Value');
            
            ID = ID(i);
        end %fun
        
        %%
        function proc_keyboard(this,evnt)
            if isempty(evnt.Modifier)
                switch evnt.Key
                    case 'uparrow'
                        above_traj(this)
                    case 'downarrow'
                        below_traj(this)
                    case 'rightarrow'
                        right_traj(this)
                    case 'leftarrow'
                        left_traj(this)
                end %switch
            elseif strcmp(evnt.Modifier,'control')
                switch evnt.Key
                    case 'rightarrow'
                        next_traj_ID(this)
                    case 'leftarrow'
                        previous_traj_ID(this)
                    case 'a'
                        select_by_ID(this,'Accept')
                    case 'd'
                        select_by_ID(this,'Discard')
                end %switch
            end %if
        end %fun
        
        function switch_step_state(this,idxCluster,idxStep)
            if this.Cluster(idxCluster).useLvl(idxStep)
                this.Cluster(idxCluster).useLvl(idxStep) = false;
                set(this.hLvl(idxStep),'color','r')
            else
                this.Cluster(idxCluster).useLvl(idxStep) = true;
                set(this.hLvl(idxStep),'color','g')
            end %if
            
            update_fiducial_map(this)
        end %fun
        
        function accept_all_steps(this)
            for idxCluster = 1:this.NumCluster
                accept_traj_steps(this,idxCluster)
            end %for
            
            update_fiducial_map(this)
        end %fun
        function discard_all_steps(this)
            for idxCluster = 1:this.NumCluster
                discard_traj_steps(this,idxCluster)
            end %for
            
            update_fiducial_map(this)
        end %fun
        function accept_traj_steps(this,idxCluster)
            for idxStep = 1:this.Cluster(idxCluster).NumLvl
                this.Cluster(idxCluster).useLvl(idxStep) = true;
            end %for
            if idxCluster == get_traj_ID(this)
                set(this.hLvl,'color','g')
            end %if
        end %fun
        function discard_traj_steps(this,idxCluster)
            for idxStep = 1:this.Cluster(idxCluster).NumLvl
                this.Cluster(idxCluster).useLvl(idxStep) = false;
            end %for
            if idxCluster == get_traj_ID(this)
                set(this.hLvl,'color','r')
            end %if
        end %fun
        
        %%
        function update_step_detection(this)
            if not(isempty(this.Cluster))
            idxCluster = get_traj_ID(this);
            
            set(this.hCurrentClusterPnt,...
                'xdata',this.Cluster(idxCluster).x,...
                'ydata',this.Cluster(idxCluster).y)
            
            if get(this.hLockButton,'Value') == 0
                analyse_traj(this,idxCluster)
            end %if
            
            %% signal
            t = colvec(min(this.Cluster(idxCluster).t):max(this.Cluster(idxCluster).t));
            A = accumarray(this.Cluster(idxCluster).t,this.Cluster(idxCluster).A,...
                [max(this.Cluster(idxCluster).t), 1],[],nan);
            A = A(min(this.Cluster(idxCluster).t):end);
            
            set(this.hRawTraj,...
                'xdata',t,...
                'ydata',A)
            
            set(this.hEstTraj,...
                'xdata',this.Cluster(idxCluster).t,...
                'ydata',this.Cluster(idxCluster).Ahat)
            axis(this.hTrajAx,'tight')
            
            yLim = ylim(this.hTrajAx);
            ylim(this.hTrajAx,[0 yLim(2)])
            
            %% signal difference
            set(this.hEstTrajChange,...
                'xdata',this.Cluster(idxCluster).tLvl,...
                'ydata',this.Cluster(idxCluster).dLvl)
            
            dA = diff(A);
            noise = 1.4826*mad(dA,1);
            
            set(this.hNoiseLB,...
                'xdata',[t(2) t(end)]-0.5,...
                'ydata',-[1 1]*2.575829*noise)
            
            set(this.hNoiseUB,...
                'xdata',[t(2) t(end)]-0.5,...
                'ydata',[1 1]*2.575829*noise)
            
            set(this.hRawTrajChange,...
                'xdata',t(2:end)-0.5,...
                'ydata',dA)
            
            if not(isempty(this.hLvl))
                delete(this.hLvl); this.hLvl = [];
            end %if
            
            for idxStep = 1:numel(this.Cluster(idxCluster).Lvl)
                this.hLvl(idxStep) = line('parent',this.hRawTrajChange,...
                    'xdata',this.Cluster(idxCluster).iLvl(idxStep),...
                    'ydata',this.Cluster(idxCluster).Lvl(idxStep),...
                    'Linestyle','none',...
                    'marker','.','markersize',35,...
                    'ButtonDownFcn',@(src,evnt)switch_step_state(this,idxCluster,idxStep));
                if this.Cluster(idxCluster).useLvl(idxStep)
                    set(this.hLvl(idxStep),'color','g')
                else
                    set(this.hLvl(idxStep),'color','r')
                end %if
            end
            
            ylim(this.hTrajChangeAx,...
                [min(vertcat(dA(:),this.Cluster(idxCluster).Lvl(:))),...
                max(vertcat(dA(:),this.Cluster(idxCluster).Lvl(:)))]*1.2)
            
            %% residual
            resA = accumarray(this.Cluster(idxCluster).t,...
                this.Cluster(idxCluster).A-this.Cluster(idxCluster).Ahat,...
                [max(this.Cluster(idxCluster).t), 1],[],nan);
            resA = resA(min(this.Cluster(idxCluster).t):end);
            
            set(this.hRawTrajRes,...
                'xdata',t,...
                'ydata', resA)
            ylim(this.hTrajResAx,[min(resA) max(resA)])
            end %if
        end %fun
        function update_fiducial_map(this)
            take = rowvec(vertcat(this.Cluster.useLvl));
            xLvl = rowvec(vertcat(this.Cluster.xLvl));
            yLvl = rowvec(vertcat(this.Cluster.yLvl));
            
            set(this.hPntStepAccepted,...
                'xdata', xLvl(take),...
                'ydata', yLvl(take))
            
            set(this.hPntStepDiscarded,...
                'xdata', xLvl(not(take)),...
                'ydata', yLvl(not(take)))
            
            %%
            ctrX = (0:this.FOV(2))+0.5*rem(this.FOV(2)-this.FOV(1),1);
            ctrY = (0:this.FOV(4))+0.5*rem(this.FOV(4)-this.FOV(3),1);
            
            N = hist3([colvec(yLvl(take)) colvec(xLvl(take))],{ctrY ctrX});
            imgFiducialDist = bwdist(logical(N));
            
            x = linspace(min(imgFiducialDist(:)),...
                max(imgFiducialDist(:)),256);
            r = 20; y = 10; g = 0;
            cmap(:,1) = max(0.85,min(1,((1-0.85)/(y-r)*(x-r)+0.85))) .* double(x >= y) + ...
                max(0,min(1,((0-1)/(g-y)*(x-y)+1))) .* double(x < y);
            cmap(:,2) = max(0.16,min(1,((1-0.16)/(y-r)*(x-r)+0.16))) .* double(x >= y) + ...
                max(0.5,min(1,((0.5-1)/(g-y)*(x-y)+1))) .* double(x < y);
            cmap(:,3) = zeros(size(cmap,1),1);
            
            for i = 1:numel(ctrY)
                for j = 1:numel(ctrX)
                    imgFiducialDist(i,j) = find(imgFiducialDist(i,j) <= x,1,'first');
                end %for
            end %for
            
            set(this.hSpatSampMap,...
                'xdata',ctrX,...
                'ydata',ctrY,...
                'cdata',ind2rgb(imgFiducialDist,cmap))
            
            %%
            update_step_map(this)
        end %fun
        function update_step_map(this)
            take = find(vertcat(this.Cluster.useLvl));
            idxModel = get(this.hPopupIlluModel,'Value');
            
            if numel(take) < 10
                set(this.hIlluMap,...
                    'xdata',[],...
                    'ydata',[],...
                    'cdata',[])
                
                set(this.hPntFitRelErrGood,...
                    'xdata',[],...
                    'ydata',[])
                set(this.hPntFitRelErrInter,...
                    'xdata',[],...
                    'ydata',[])
                set(this.hPntFitRelErrBad,...
                    'xdata',[],...
                    'ydata',[])
                
                caxis(this.hTrajChangeHistAx,[-1 1])
                
                set(this.hPushInt2Num,'Enable','off')
                
                UI = generate_information_dialog(...
                    'Estimation not possible.',...
                    {'15 Samples neccessary.'},...
                    'PauseQueue', false);
                pause(0.5)
                close(UI.hFig)
            else
                xLvl = vertcat(this.Cluster.xLvl);
                yLvl = vertcat(this.Cluster.yLvl);
                lvl = vertcat(this.Cluster.Lvl);
                
                this.CtrX = (0:this.FOV(2))+0.5*rem(this.FOV(2)-this.FOV(1),1);
                this.CtrY = (0:this.FOV(4))+0.5*rem(this.FOV(4)-this.FOV(3),1);
                
                switch this.IlluModel{idxModel}
                    case 'Polynom 22'
                        %%
                        fitOptions = fitoptions('poly22');
                        fitOptions.Robust = 'on';
                        fitOptions.Normalize = 'on';
                        [this.ThetaEst,gof] = fit([xLvl(take),yLvl(take)],log10(abs(lvl(take))),...
                            fittype('poly22'),fitOptions);
                        
                        [X,Y] = meshgrid(this.CtrX,this.CtrY);
                        this.IlluMapHat = 10.^reshape(feval(this.ThetaEst,[X(:),Y(:)]),numel(this.CtrY),numel(this.CtrX));
                        
                        xHat = 10.^feval(this.ThetaEst,xLvl(take),yLvl(take));
                        
                    case 'Polynom 33'
                        %%
                        fitOptions = fitoptions('poly33');
                        fitOptions.Robust = 'on';
                        fitOptions.Normalize = 'on';
                        [this.ThetaEst,gof] = fit([xLvl(take),yLvl(take)],log10(abs(lvl(take))),...
                            fittype('poly33'),fitOptions);
                        
                        [X,Y] = meshgrid(this.CtrX,this.CtrY);
                        this.IlluMapHat = 10.^reshape(feval(this.ThetaEst,[X(:),Y(:)]),numel(this.CtrY),numel(this.CtrX));
                        
                        xHat = 10.^feval(this.ThetaEst,xLvl(take),yLvl(take));
                        
                    case 'Polynom 44'
                        %%
                        fitOptions = fitoptions('poly44');
                        fitOptions.Robust = 'on';
                        fitOptions.Normalize = 'on';
                        [this.ThetaEst,gof] = fit([xLvl(take),yLvl(take)],log10(abs(lvl(take))),...
                            fittype('poly44'),fitOptions);
                        
                        [X,Y] = meshgrid(this.CtrX,this.CtrY);
                        this.IlluMapHat = 10.^reshape(feval(this.ThetaEst,[X(:),Y(:)]),numel(this.CtrY),numel(this.CtrX));
                        
                        xHat = 10.^feval(this.ThetaEst,xLvl(take),yLvl(take));
                        
                    case 'Polynom 55'
                        %%
                        fitOptions = fitoptions('poly55');
                        fitOptions.Robust = 'on';
                        fitOptions.Normalize = 'on';
                        [this.ThetaEst,gof] = fit([xLvl(take),yLvl(take)],log10(abs(lvl(take))),...
                            fittype('poly55'),fitOptions);
                        
                        [X,Y] = meshgrid(this.CtrX,this.CtrY);
                        this.IlluMapHat = 10.^reshape(feval(this.ThetaEst,[X(:),Y(:)]),numel(this.CtrY),numel(this.CtrX));
                        
                        xHat = 10.^feval(this.ThetaEst,xLvl(take),yLvl(take));
                        
                    case 'Gaussian'
                        %%
                        xdata = [xLvl(take),yLvl(take),yLvl(take)*0+1];
                        ydata = abs(lvl(take));
                        
                        %theta = [volume std_i std_j muI muJ angle_with_j_axis[CCW]]
                        w = abs(lvl(take))./sum(abs(lvl(take)));
                        muX = sum(xLvl(take).*w);
                        sigX = sqrt(sum((xLvl(take)-muX).^2.*w));
                        muY = sum(yLvl(take).*w);
                        sigY = sqrt(sum((yLvl(take)-muY).^2.*w));
                        V = max(ydata)*2*pi*sigX*sigY;
                        theta0 = [V sigY sigX muY muX pi];
                        
                        [this.ThetaEst,thetaEstSE,resnorm,residual,exitflag,output,modelFun] = ...
                            OLS_fit_2dim_gaussian(xdata,ydata,theta0,...
                            'N',1,'elliptic',true,'oriented',true,'centered',false,'offset',false,...
                            'lb',[0.1*theta0(1) 20 20 -inf -inf 0],...
                            'ub',[10*theta0(1) 1000 1000 inf inf 2*pi],'GlobalSearch',true);
                        
                        [X,Y] = meshgrid(this.CtrX,this.CtrY);
                        this.IlluMapHat = reshape(modelFun(this.ThetaEst,[X(:),Y(:),Y(:)*0+1]),numel(this.CtrY),numel(this.CtrX));
                        
                        xHat = modelFun(this.ThetaEst,xdata);
                        
                    case 'Spline'
                        [~,idxY] = histc(yLvl(take),[this.CtrY(1)-0.5 this.CtrY this.CtrY(end)+0.5]);
                        [~,idxX] = histc(xLvl(take),[this.CtrX(1)-0.5 this.CtrX this.CtrX(end)+0.5]);
                        
                        mapAmp = accumarray([idxY idxX],abs(lvl(take)),[numel(this.CtrY),numel(this.CtrX)],@mean,nan);
                        
                        this.IlluMapHat = smoothn(mapAmp,500);
                        
                        xHat = interp2(this.CtrX,this.CtrY,this.IlluMapHat,xLvl(take),yLvl(take),'linear',nan);
                        
                    case 'LOWESS'
                        fitOptions = fitoptions('lowess');
                        fitOptions.Robust = 'on';
                        fitOptions.Normalize = 'on';
                        [this.ThetaEst,gof] = fit([xLvl(take),yLvl(take)],log10(abs(lvl(take))),...
                            fittype('lowess'),fitOptions);

                        [X,Y] = meshgrid(this.CtrX,this.CtrY);
                        this.IlluMapHat = 10.^reshape(feval(this.ThetaEst,[X(:),Y(:)]),numel(this.CtrY),numel(this.CtrX));
                        
                        xHat = 10.^feval(this.ThetaEst,xLvl(take),yLvl(take));
                end %switch
                
                %%
                set(this.hIlluMap,...
                    'xdata',this.CtrX,...
                    'ydata',this.CtrY,...
                    'cdata',this.IlluMapHat)
                caxis(this.hTrajChangeHistAx,...
                    nanquantile(this.IlluMapHat(:),[0.01 0.99]))
                
                %% residuals
                res = abs(lvl(take)) - xHat;
                relErr = abs(res./xHat);
                
                isGood = (relErr <= 0.1);                
                set(this.hPntFitRelErrGood,...
                    'xdata',xLvl(take(isGood)),...
                    'ydata',yLvl(take(isGood)))
                isGood = (relErr <= 0.25);
                set(this.hPntFitRelErrInter,...
                    'xdata',xLvl(take(isGood)),...
                    'ydata',yLvl(take(isGood)))
                set(this.hPntFitRelErrBad,...
                    'xdata',xLvl(take(not(isGood))),...
                    'ydata',yLvl(take(not(isGood))))
                
                set(this.hPushInt2Num,'Enable','on')
                
                %for testing
%                  figure; surf(this.IlluMapHat)
%                     hold on
%                 plot3(idxX,idxY,abs(lvl(take)),'r.')
            end %if
        end %fun
        
        %%
        function analyse_traj(this,idxCluster)
            [~,~,~,this.Cluster(idxCluster).Ahat] = ...
                STASI_analysis(this.Cluster(idxCluster).A,...
                10^this.CountChangeMin,0,this.PeakLengthMin,this.TransitLengthMin);
            this.Cluster(idxCluster).Ahat = colvec(this.Cluster(idxCluster).Ahat);
            this.Cluster(idxCluster).dLvl = diff(this.Cluster(idxCluster).Ahat);
            this.Cluster(idxCluster).tLvl = this.Cluster(idxCluster).t(1:end-1)+(this.Cluster(idxCluster).t(2:end)-this.Cluster(idxCluster).t(1:end-1))/2;
            take = (this.Cluster(idxCluster).dLvl ~= 0);
            this.Cluster(idxCluster).Lvl = this.Cluster(idxCluster).dLvl(take);
            this.Cluster(idxCluster).iLvl = this.Cluster(idxCluster).tLvl(take);
            this.Cluster(idxCluster).NumLvl = size(this.Cluster(idxCluster).Lvl,1);
            this.Cluster(idxCluster).hasLvl = not(this.Cluster(idxCluster).NumLvl == 0);
            this.Cluster(idxCluster).useLvl = true(this.Cluster(idxCluster).NumLvl,1);
            
            this.Cluster(idxCluster).xLvl = this.Cluster(idxCluster).x(1:end-1)+(this.Cluster(idxCluster).x(2:end)-this.Cluster(idxCluster).x(1:end-1))/2;
            this.Cluster(idxCluster).xLvl = this.Cluster(idxCluster).xLvl(take);
            this.Cluster(idxCluster).yLvl = this.Cluster(idxCluster).y(1:end-1)+(this.Cluster(idxCluster).y(2:end)-this.Cluster(idxCluster).y(1:end-1))/2;
            this.Cluster(idxCluster).yLvl = this.Cluster(idxCluster).yLvl(take);
        end %fun
        function lock_and_analyse_all(this)
            if get(this.hLockButton,'Value') %STASI settings locked
                %deactivate slider etc.
                set([...
                    this.hMinCountChangeSlider, this.hMinCountChangeEdit,...
                    this.hMinPeakLengthSlider, this.hMinPeakLengthEdit,...
                    this.hMinTransitLengthSlider, this.hMinTransitLengthEdit,...
                    ],'Enable','off')
                
                set([...
                    this.hPushAcceptAll, this.hPushDiscardAll,...
                    this.hPushRoiAccept,this.hPushRoiDiscard,...
                    this.hPushIdAccept,this.hPushIdDiscard,...
                    ],'Enable','on')
                
                hBar = ProgressBar({'Analysing Trajectories...'});
                for idxCluster = 1:this.NumCluster
                    analyse_traj(this,idxCluster)
                    update_progressbar(hBar,{idxCluster/this.NumCluster})
                end %for
                close_progressbar(hBar)
                
                hasStep = vertcat(this.Cluster.hasLvl);
                set(this.hTrajSelectPopup,...
                    'String',num2cell(this.LinID(hasStep)),...
                    'Value',1)
                
                update_step_detection(this)
                update_fiducial_map(this)
            else %STASI settings not locked -> STASI parameter optimization phase
                set([...
                    this.hMinCountChangeSlider, this.hMinCountChangeEdit,...
                    this.hMinPeakLengthSlider, this.hMinPeakLengthEdit,...
                    this.hMinTransitLengthSlider, this.hMinTransitLengthEdit,...
                    ],'Enable','on')
                
                set([...
                    this.hPushAcceptAll, this.hPushDiscardAll,...
                    this.hPushRoiAccept,this.hPushRoiDiscard,...
                    this.hPushIdAccept,this.hPushIdDiscard,...
                    this.hPushInt2Num,...
                    ],'Enable','off')
                
                set(this.hPntStepAccepted,...
                    'xdata',[],...
                    'ydata',[])
                
                set(this.hPntStepDiscarded,...
                    'xdata',[],...
                    'ydata',[])
                
                set(this.hIlluMap,...
                    'xdata',[],...
                    'ydata',[],...
                    'cdata',[])
                
                set(this.hPntFitRelErrGood,...
                    'xdata',[],...
                    'ydata',[])
                set(this.hPntFitRelErrInter,...
                    'xdata',[],...
                    'ydata',[])
                set(this.hPntFitRelErrBad,...
                    'xdata',[],...
                    'ydata',[])
                
                set(this.hTrajSelectPopup,...
                    'String',num2cell(this.LinID),...
                    'Value',1)
            end %switch
        end %fun
        
        function xHat = eval_model(this,x,y)
            idxModel = get(this.hPopupIlluModel,'Value');
            
            switch this.IlluModel{idxModel}
                case {'Polynom 22','Polynom 33','Polynom 44','Polynom 55','LOWESS'}
                    %%
                    xHat = 10.^feval(this.ThetaEst,x,y);                
                case 'Gaussian'
                    %%
                    xHat = modelFun(thetaEst,[x,y,x*0+1]);
                case 'Spline'
                    xHat = interp2(this.CtrY,this.CtrX,this.IlluMapHat,y,x,'linear',nan);
            end %switch
        end %fun
        
        %%
        function save_results(this)
            [fileName,filePath] = uigetfile('*.txt','MultiSelect','off');
            
            listLoad = {...
                'Position_X',...
                'Position_Y',...
                'Photons'};
            
            isMatch = cellfun(@(x)strfind(fileName,x),listLoad,'un',0);
            fileName = fileName(1:isMatch{not(cellfun('isempty',isMatch))}-1);
            
            x = dlmread(fullfile(filePath,[fileName,listLoad{1},'.txt']),'\t',1,0);
            y = dlmread(fullfile(filePath,[fileName,listLoad{2},'.txt']),'\t',1,0);
            A = dlmread(fullfile(filePath,[fileName,listLoad{3},'.txt']),'\t',1,0);
            
            singleMolAmp = eval_model(this,x,y);
            N = A./singleMolAmp;
            
            [fileName,filePath] = uiputfile('*.txt','Save to',filePath);
            dlmwrite(fullfile(filePath,fileName),N,'\t')
        end %fun
        
    end %methods
end %class